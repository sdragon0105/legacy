{"ast":null,"code":"import React from\"react\";import\"./Population.css\";import{AreaGraph,MarimekkoGraph,PieGraph}from\"../../../components/Graphs\";import Legend from\"../../../components/Legend/Legend\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function numberWithCommas(x){return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,\",\");}var crabPoplegends=[{name:\"Surge\",color:\"#FC252B\"},{name:\"Sunken\",color:\"#108C8C\"},{name:\"Prime\",color:\"#C9B22E\"},{name:\"Bulk\",color:\"#793024\"},{name:\"Craboid\",color:\"#0068EC\"},{name:\"Ruined\",color:\"#533FB4\"},{name:\"Gem\",color:\"#EC2C9E\"},{name:\"Organic\",color:\"#34A527\"}];var eggPoplegends=[{name:\"Pure\",color:\"#1370F6\"},{name:\"Non-Pure\",color:\"#FFFFFF\"}];function Population(props){return/*#__PURE__*/_jsxs(\"div\",{className:\"populationDashboard\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"populationRow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"populationRowItem\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"TOTAL CRAB POPULATION\"}),/*#__PURE__*/_jsx(\"div\",{className:\"populationPie\",children:/*#__PURE__*/_jsx(PieGraph,{data:props.crabPieData,colors:[\"#FC252B\",\"#108C8C\",\"#C9B22E\",\"#793024\",\"#0068EC\",\"#533FB4\",\"#EC2C9E\",\"#34A527\"],total:props.totalCrabs})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"populationRowItem\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"CRABADA TRENDS\"}),/*#__PURE__*/_jsx(Legend,{legends:crabPoplegends}),/*#__PURE__*/_jsx(\"div\",{className:\"populationGraph\",children:/*#__PURE__*/_jsx(AreaGraph,{data:props.crabPopulationData,colors:[\"#FC252B\",\"#108C8C\",\"#C9B22E\",\"#793024\",\"#0068EC\",\"#533FB4\",\"#EC2C9E\",\"#34A527\"],minMax:[0,\"auto\"],tooltipFunction:function tooltipFunction(e){return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"10px\",width:\"200px\",height:\"50px\",borderRadius:\"10px\",backgroundColor:\"rgba(0,0,0,0.75)\",border:\"1px solid #fff\",display:\"flex\",flexDirection:\"column\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{color:\"white\",alignSelf:\"center\"},children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"- \",e.point.data.x,\" -\"]})}),/*#__PURE__*/_jsxs(\"div\",{style:{color:\"white\"},children:[\"Value:\",\" \",/*#__PURE__*/_jsx(\"strong\",{style:{color:e.point.borderColor},children:numberWithCommas(e.point.data.y)})]})]});}})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"populationRow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"populationRowItem\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"PURE VS NON-PURE\"}),/*#__PURE__*/_jsx(\"div\",{className:\"populationPie\",children:/*#__PURE__*/_jsx(PieGraph,{data:props.eggPieData,colors:[\"#1370F6\",\"#FFFFFF\"],total:props.totalCrabs})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"populationRowItem\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"CRABADA TRENDS\"}),/*#__PURE__*/_jsx(Legend,{legends:eggPoplegends}),/*#__PURE__*/_jsx(\"div\",{className:\"populationGraph\",children:/*#__PURE__*/_jsx(AreaGraph,{data:props.eggPopulationData,colors:[\"#1370F6\",\"#FFFFFF\"],minMax:[0,\"auto\"],tooltipFunction:function tooltipFunction(e){return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"10px\",width:\"200px\",height:\"50px\",borderRadius:\"10px\",backgroundColor:\"rgba(0,0,0,0.75)\",border:\"1px solid #fff\",display:\"flex\",flexDirection:\"column\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{color:\"white\",alignSelf:\"center\"},children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"- \",e.point.data.x,\" -\"]})}),/*#__PURE__*/_jsxs(\"div\",{style:{color:\"white\"},children:[\"Value:\",\" \",/*#__PURE__*/_jsx(\"strong\",{style:{color:e.point.borderColor},children:numberWithCommas(e.point.data.y)})]})]});}})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hatchingSchedule\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Hatching Schedule (next 5 days)\"}),/*#__PURE__*/_jsx(MarimekkoGraph,{data:props.eggHatchPopulationData,totalHatching:props.totalHatching})]})]});}export default Population;","map":{"version":3,"sources":["E:/Work/legacy/legacy-frontend-main/src/games/crabada/Population/Population.js"],"names":["React","AreaGraph","MarimekkoGraph","PieGraph","Legend","numberWithCommas","x","toString","replace","crabPoplegends","name","color","eggPoplegends","Population","props","crabPieData","totalCrabs","crabPopulationData","e","padding","width","height","borderRadius","backgroundColor","border","display","flexDirection","alignSelf","point","data","borderColor","y","eggPieData","eggPopulationData","eggHatchPopulationData","totalHatching"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Population.css\";\nimport {\n  AreaGraph,\n  MarimekkoGraph,\n  PieGraph,\n} from \"../../../components/Graphs\";\nimport Legend from \"../../../components/Legend/Legend\";\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst crabPoplegends = [\n  {\n    name: \"Surge\",\n    color: \"#FC252B\",\n  },\n  {\n    name: \"Sunken\",\n    color: \"#108C8C\",\n  },\n  {\n    name: \"Prime\",\n    color: \"#C9B22E\",\n  },\n  {\n    name: \"Bulk\",\n    color: \"#793024\",\n  },\n  {\n    name: \"Craboid\",\n    color: \"#0068EC\",\n  },\n  {\n    name: \"Ruined\",\n    color: \"#533FB4\",\n  },\n  {\n    name: \"Gem\",\n    color: \"#EC2C9E\",\n  },\n  {\n    name: \"Organic\",\n    color: \"#34A527\",\n  },\n];\n\nconst eggPoplegends = [\n  {\n    name: \"Pure\",\n    color: \"#1370F6\",\n  },\n  {\n    name: \"Non-Pure\",\n    color: \"#FFFFFF\",\n  },\n];\nfunction Population(props) {\n  return (\n    <div className=\"populationDashboard\">\n      <div className=\"populationRow\">\n        <div className=\"populationRowItem\">\n          <h3>TOTAL CRAB POPULATION</h3>\n          <div className=\"populationPie\">\n            <PieGraph\n              data={props.crabPieData}\n              colors={[\n                \"#FC252B\",\n                \"#108C8C\",\n                \"#C9B22E\",\n                \"#793024\",\n                \"#0068EC\",\n                \"#533FB4\",\n                \"#EC2C9E\",\n                \"#34A527\",\n              ]}\n              total={props.totalCrabs}\n            />\n          </div>\n        </div>\n        <div className=\"populationRowItem\">\n          <h3>CRABADA TRENDS</h3>\n          <Legend legends={crabPoplegends} />\n          <div className=\"populationGraph\">\n            <AreaGraph\n              data={props.crabPopulationData}\n              colors={[\n                \"#FC252B\",\n                \"#108C8C\",\n                \"#C9B22E\",\n                \"#793024\",\n                \"#0068EC\",\n                \"#533FB4\",\n                \"#EC2C9E\",\n                \"#34A527\",\n              ]}\n              minMax={[0, \"auto\"]}\n              tooltipFunction={(e) => {\n                return (\n                  <div\n                    style={{\n                      padding: \"10px\",\n                      width: \"200px\",\n                      height: \"50px\",\n                      borderRadius: \"10px\",\n                      backgroundColor: \"rgba(0,0,0,0.75)\",\n                      border: \"1px solid #fff\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <div style={{ color: \"white\", alignSelf: \"center\" }}>\n                      <strong>- {e.point.data.x} -</strong>\n                    </div>\n                    <div style={{ color: \"white\" }}>\n                      Value:{\" \"}\n                      <strong style={{ color: e.point.borderColor }}>\n                        {numberWithCommas(e.point.data.y)}\n                      </strong>\n                    </div>\n                  </div>\n                );\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"populationRow\">\n        <div className=\"populationRowItem\">\n          <h3>PURE VS NON-PURE</h3>\n\n          <div className=\"populationPie\">\n            <PieGraph\n              data={props.eggPieData}\n              colors={[\"#1370F6\", \"#FFFFFF\"]}\n              total={props.totalCrabs}\n            />\n          </div>\n        </div>\n        <div className=\"populationRowItem\">\n          <h3>CRABADA TRENDS</h3>\n          <Legend legends={eggPoplegends} />\n          <div className=\"populationGraph\">\n            <AreaGraph\n              data={props.eggPopulationData}\n              colors={[\"#1370F6\", \"#FFFFFF\"]}\n              minMax={[0, \"auto\"]}\n              tooltipFunction={(e) => {\n                return (\n                  <div\n                    style={{\n                      padding: \"10px\",\n                      width: \"200px\",\n                      height: \"50px\",\n                      borderRadius: \"10px\",\n                      backgroundColor: \"rgba(0,0,0,0.75)\",\n                      border: \"1px solid #fff\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <div style={{ color: \"white\", alignSelf: \"center\" }}>\n                      <strong>- {e.point.data.x} -</strong>\n                    </div>\n                    <div style={{ color: \"white\" }}>\n                      Value:{\" \"}\n                      <strong style={{ color: e.point.borderColor }}>\n                        {numberWithCommas(e.point.data.y)}\n                      </strong>\n                    </div>\n                  </div>\n                );\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"hatchingSchedule\">\n        <h3>Hatching Schedule (next 5 days)</h3>\n        <MarimekkoGraph\n          data={props.eggHatchPopulationData}\n          totalHatching={props.totalHatching}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Population;\n"]},"metadata":{},"sourceType":"module"}