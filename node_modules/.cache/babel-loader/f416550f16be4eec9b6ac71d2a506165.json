{"ast":null,"code":"import _slicedToArray from\"E:/Work/legacy/legacy-frontend-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"E:/Work/legacy/legacy-frontend-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"E:\\\\Work\\\\legacy\\\\legacy-frontend-main\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from\"react\";import Dashboard from\"./Dashboard\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(callback){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get(\"https://api.crabada.com/public/price/using\");case 3:response=_context.sent;callback(null,response.data.result);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);callback(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();function DashboardContainer(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),menu=_useState2[0],setMenu=_useState2[1];var _useState3=useState([0,0,0,0]),_useState4=_slicedToArray(_useState3,2),tokenValues=_useState4[0],setTokenValues=_useState4[1];useEffect(function(){fetchData(function(err,res){if(!err){setTokenValues([parseFloat(res.avax_usd).toFixed(4),parseFloat(res.cra_usd).toFixed(4),parseFloat(res.tus_usd).toFixed(4),parseFloat(res.cram_usd).toFixed(4)]);}});},[]);return/*#__PURE__*/_jsx(Dashboard,{menu:menu,setMenu:setMenu,tokenValues:tokenValues});}export default DashboardContainer;","map":{"version":3,"sources":["E:/Work/legacy/legacy-frontend-main/src/routes/Dashboard/DashboardContainer.js"],"names":["React","useState","useEffect","Dashboard","axios","fetchData","callback","get","response","data","result","DashboardContainer","menu","setMenu","tokenValues","setTokenValues","err","res","parseFloat","avax_usd","toFixed","cra_usd","tus_usd","cram_usd"],"mappings":"sXAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,GAAMC,CAAAA,SAAS,0FAAG,iBAAOC,QAAP,qKAEOF,CAAAA,KAAK,CAACG,GAAN,CACnB,4CADmB,CAFP,QAEVC,QAFU,eAKdF,QAAQ,CAAC,IAAD,CAAOE,QAAQ,CAACC,IAAT,CAAcC,MAArB,CAAR,CALc,+EAOdJ,QAAQ,aAAR,CAPc,oEAAH,kBAATD,CAAAA,SAAS,4CAAf,CAUA,QAASM,CAAAA,kBAAT,EAA8B,CAC5B,cAAwBV,QAAQ,CAAC,CAAD,CAAhC,wCAAOW,IAAP,eAAaC,OAAb,eACA,eAAsCZ,QAAQ,CAAC,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAD,CAA9C,yCAAOa,WAAP,eAAoBC,cAApB,eAEAb,SAAS,CAAC,UAAM,CACdG,SAAS,CAAC,SAACW,GAAD,CAAMC,GAAN,CAAc,CACtB,GAAI,CAACD,GAAL,CAAU,CACRD,cAAc,CAAC,CACbG,UAAU,CAACD,GAAG,CAACE,QAAL,CAAV,CAAyBC,OAAzB,CAAiC,CAAjC,CADa,CAEbF,UAAU,CAACD,GAAG,CAACI,OAAL,CAAV,CAAwBD,OAAxB,CAAgC,CAAhC,CAFa,CAGbF,UAAU,CAACD,GAAG,CAACK,OAAL,CAAV,CAAwBF,OAAxB,CAAgC,CAAhC,CAHa,CAIbF,UAAU,CAACD,GAAG,CAACM,QAAL,CAAV,CAAyBH,OAAzB,CAAiC,CAAjC,CAJa,CAAD,CAAd,CAMD,CACF,CATQ,CAAT,CAUD,CAXQ,CAWN,EAXM,CAAT,CAaA,mBAAO,KAAC,SAAD,EAAW,IAAI,CAAER,IAAjB,CAAuB,OAAO,CAAEC,OAAhC,CAAyC,WAAW,CAAEC,WAAtD,EAAP,CACD,CAED,cAAeH,CAAAA,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport axios from \"axios\";\n\nconst fetchData = async (callback) => {\n  try {\n    let response = await axios.get(\n      \"https://api.crabada.com/public/price/using\"\n    );\n    callback(null, response.data.result);\n  } catch (e) {\n    callback(e);\n  }\n};\nfunction DashboardContainer() {\n  const [menu, setMenu] = useState(0);\n  const [tokenValues, setTokenValues] = useState([0, 0, 0, 0]);\n\n  useEffect(() => {\n    fetchData((err, res) => {\n      if (!err) {\n        setTokenValues([\n          parseFloat(res.avax_usd).toFixed(4),\n          parseFloat(res.cra_usd).toFixed(4),\n          parseFloat(res.tus_usd).toFixed(4),\n          parseFloat(res.cram_usd).toFixed(4),\n        ]);\n      }\n    });\n  }, []);\n\n  return <Dashboard menu={menu} setMenu={setMenu} tokenValues={tokenValues} />;\n}\n\nexport default DashboardContainer;\n"]},"metadata":{},"sourceType":"module"}