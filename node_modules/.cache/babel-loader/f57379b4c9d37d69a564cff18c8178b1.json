{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\legacy\\\\legacy-frontend-main\\\\src\\\\games\\\\crabada\\\\Prices\\\\Prices.js\";\nimport React from 'react';\nimport Slider from '@mui/material/Slider';\nimport { AreaGraph } from '../../../components/Graphs';\nimport Feedback from '../../../components/Feedback/Feedback';\nimport './Prices.css';\nimport Legend from '../../../components/Legend/Legend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst crabPoplegends = [{\n  name: 'Surge',\n  color: '#FC252B'\n}, {\n  name: 'Sunken',\n  color: '#108C8C'\n}, {\n  name: 'Prime',\n  color: '#C9B22E'\n}, {\n  name: 'Bulk',\n  color: '#793024'\n}, {\n  name: 'Craboid',\n  color: '#0068EC'\n}, {\n  name: 'Ruined',\n  color: '#533FB4'\n}, {\n  name: 'Gem',\n  color: '#EC2C9E'\n}, {\n  name: 'Organic',\n  color: '#34A527'\n}];\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nfunction Prices(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pricesComingSoon\",\n      children: \"COMING SOON ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prices\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pricesFilter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"applyChanges\",\n          onClick: () => {\n            props.setApplyChanges(!props.applyChanges);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"applyChangeButton\",\n            children: \"Apply Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"firstFilters\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Breed Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              min: 0,\n              max: 5,\n              step: 1,\n              value: props.breed,\n              onChange: (event, newValue) => {\n                props.setBreed(newValue);\n              },\n              valueLabelDisplay: \"auto\",\n              marks: [{\n                value: 0,\n                label: 0\n              }, {\n                value: 5,\n                label: 5\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Legend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              min: 0,\n              max: 6,\n              step: 1,\n              value: props.legend,\n              onChange: (event, newValue) => {\n                props.setLegend(newValue);\n              },\n              valueLabelDisplay: \"auto\",\n              marks: [{\n                value: 0,\n                label: 0\n              }, {\n                value: 6,\n                label: 6\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Purity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Slider, {\n              min: 0,\n              max: 6,\n              step: 1,\n              value: props.purity,\n              onChange: (event, newValue) => {\n                props.setPurity(newValue);\n              },\n              valueLabelDisplay: \"auto\",\n              marks: [{\n                value: 0,\n                label: 0\n              }, {\n                value: 6,\n                label: 6\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"secondFilters\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Stage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filterCheckbox\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"adult\",\n                  name: \"stage\",\n                  value: \"ADULT\",\n                  checked: props.stage === 1,\n                  onChange: e => {\n                    props.setStage(e.target.checked ? 1 : 0);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"adult\",\n                  children: \"Adult\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filterCheckbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"origin\",\n                  name: \"type\",\n                  value: \"ORIGIN\",\n                  checked: props.type[0] === 1,\n                  onChange: e => {\n                    let bool = 0;\n\n                    if (e.target.checked) {\n                      bool = 1;\n                    } else {\n                      bool = 0;\n                    }\n\n                    let newArr = [bool, props.type[1]];\n                    props.setType(newArr);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"origin\",\n                  children: \"Origin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"genesis\",\n                  name: \"type\",\n                  value: \"GENESIS\",\n                  checked: props.type[1] === 1,\n                  onChange: e => {\n                    let bool = 0;\n\n                    if (e.target.checked) {\n                      bool = 1;\n                    } else {\n                      bool = 0;\n                    }\n\n                    let newArr = [props.type[0], bool];\n                    props.setType(newArr);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"genesis\",\n                  children: \"Genesis\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filterItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Class\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"classFilterCheckbox\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"classFilterRow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"surge\",\n                    name: \"class\",\n                    value: \"SURGE\",\n                    checked: props.classes.indexOf(1) >= 0,\n                    onChange: e => {\n                      if (e.target.checked) {\n                        props.setClasses(arr => [...arr, 1]);\n                      } else {\n                        let tempArr = [...props.classes];\n                        tempArr.splice(tempArr.indexOf(1), 1);\n                        props.setClasses(tempArr);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"surge\",\n                    children: \"SURGE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"prime\",\n                    name: \"class\",\n                    value: \"PRIME\",\n                    checked: props.classes.indexOf(3) >= 0,\n                    onChange: e => {\n                      if (e.target.checked) {\n                        props.setClasses(arr => [...arr, 3]);\n                      } else {\n                        let tempArr = [...props.classes];\n                        tempArr.splice(tempArr.indexOf(3), 1);\n                        props.setClasses(tempArr);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"prime\",\n                    children: \"PRIME\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"classFilterRow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"craboid\",\n                    name: \"class\",\n                    value: \"CRABOID\",\n                    checked: props.classes.indexOf(5) >= 0,\n                    onChange: e => {\n                      if (e.target.checked) {\n                        props.setClasses(arr => [...arr, 5]);\n                      } else {\n                        let tempArr = [...props.classes];\n                        tempArr.splice(tempArr.indexOf(5), 1);\n                        props.setClasses(tempArr);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"craboid\",\n                    children: \"CRABOID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"gem\",\n                    name: \"class\",\n                    value: \"GEM\",\n                    checked: props.classes.indexOf(7) >= 0,\n                    onChange: e => {\n                      if (e.target.checked) {\n                        props.setClasses(arr => [...arr, 7]);\n                      } else {\n                        let tempArr = [...props.classes];\n                        tempArr.splice(tempArr.indexOf(7), 1);\n                        props.setClasses(tempArr);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"gem\",\n                    children: \"GEM\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"classFilterRow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"sunken\",\n                    name: \"class\",\n                    value: \"SUNKEN\",\n                    checked: props.classes.indexOf(2) >= 0,\n                    onChange: e => {\n                      if (e.target.checked) {\n                        props.setClasses(arr => [...arr, 2]);\n                      } else {\n                        let tempArr = [...props.classes];\n                        tempArr.splice(tempArr.indexOf(2), 1);\n                        props.setClasses(tempArr);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"sunken\",\n                    children: \"SUNKEN\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"bul\",\n                    name: \"class\",\n                    value: \"BULK\",\n                    checked: props.classes.indexOf(4) >= 0,\n                    onChange: e => {\n                      if (e.target.checked) {\n                        props.setClasses(arr => [...arr, 4]);\n                      } else {\n                        let tempArr = [...props.classes];\n                        tempArr.splice(tempArr.indexOf(4), 1);\n                        props.setClasses(tempArr);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"bul\",\n                    children: \"BULK\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"classFilterRow\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"ruined\",\n                    name: \"class\",\n                    value: \"RUINED\",\n                    checked: props.classes.indexOf(6) >= 0,\n                    onChange: e => {\n                      if (e.target.checked) {\n                        props.setClasses(arr => [...arr, 6]);\n                      } else {\n                        let tempArr = [...props.classes];\n                        tempArr.splice(tempArr.indexOf(6), 1);\n                        props.setClasses(tempArr);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"ruined\",\n                    children: \"RUINED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"organic\",\n                    name: \"class\",\n                    value: \"ORGANIC\",\n                    checked: props.classes.indexOf(8) >= 0,\n                    onChange: e => {\n                      if (e.target.checked) {\n                        props.setClasses(arr => [...arr, 8]);\n                      } else {\n                        let tempArr = [...props.classes];\n                        tempArr.splice(tempArr.indexOf(8), 1);\n                        props.setClasses(tempArr);\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"organic\",\n                    children: \"ORGANIC\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pricesGraph\",\n        children: [/*#__PURE__*/_jsxDEV(Legend, {\n          legends: props.stage === 1 ? crabPoplegends : [{\n            name: 'Egg',\n            color: '#1370F6'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), props.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loadingDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"loadingTag\",\n            children: \"Crunching Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot-flashing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this) : '', /*#__PURE__*/_jsxDEV(AreaGraph, {\n          data: props.graphData[props.graphMenu],\n          colors: props.graphDataColors,\n          minMax: [0, 'auto'],\n          range: props.stage === 1 ? 'all' : '',\n          prices: true,\n          tooltipFunction: e => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '10px',\n                width: '200px',\n                height: '50px',\n                borderRadius: '10px',\n                backgroundColor: 'rgba(0,0,0,0.85)',\n                border: '1px solid #fff',\n                display: 'flex',\n                flexDirection: 'column'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'white',\n                  alignSelf: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"- \", e.point.data.x, \" -\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'white'\n                },\n                children: [\"Value:\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    color: e.point.borderColor\n                  },\n                  children: numberWithCommas(e.point.data.y.toFixed(2))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pricesGraphMenu\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: props.graphMenu === 0 ? 'pricesGraphMenuItem active' : 'pricesGraphMenuItem',\n            onClick: () => {\n              props.setGraphMenu(0);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Floor Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: props.graphMenu === 1 ? 'pricesGraphMenuItem active' : 'pricesGraphMenuItem',\n            onClick: () => {\n              props.setGraphMenu(1);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Average Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: props.graphMenu === 2 ? 'pricesGraphMenuItem active' : 'pricesGraphMenuItem',\n            onClick: () => {\n              props.setGraphMenu(2);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Crabada Sold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Feedback, {\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = Prices;\nexport default Prices;\n\nvar _c;\n\n$RefreshReg$(_c, \"Prices\");","map":{"version":3,"sources":["E:/Work/legacy/legacy-frontend-main/src/games/crabada/Prices/Prices.js"],"names":["React","Slider","AreaGraph","Feedback","Legend","crabPoplegends","name","color","numberWithCommas","x","toString","replace","Prices","props","setApplyChanges","applyChanges","breed","event","newValue","setBreed","value","label","legend","setLegend","purity","setPurity","stage","e","setStage","target","checked","type","bool","newArr","setType","classes","indexOf","setClasses","arr","tempArr","splice","loading","graphData","graphMenu","graphDataColors","padding","width","height","borderRadius","backgroundColor","border","display","flexDirection","alignSelf","point","data","borderColor","y","toFixed","setGraphMenu"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Slider from '@mui/material/Slider'\nimport { AreaGraph } from '../../../components/Graphs'\nimport Feedback from '../../../components/Feedback/Feedback'\nimport './Prices.css'\nimport Legend from '../../../components/Legend/Legend'\n\nconst crabPoplegends = [\n  {\n    name: 'Surge',\n    color: '#FC252B',\n  },\n  {\n    name: 'Sunken',\n    color: '#108C8C',\n  },\n  {\n    name: 'Prime',\n    color: '#C9B22E',\n  },\n  {\n    name: 'Bulk',\n    color: '#793024',\n  },\n  {\n    name: 'Craboid',\n    color: '#0068EC',\n  },\n  {\n    name: 'Ruined',\n    color: '#533FB4',\n  },\n  {\n    name: 'Gem',\n    color: '#EC2C9E',\n  },\n  {\n    name: 'Organic',\n    color: '#34A527',\n  },\n]\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\nfunction Prices(props) {\n  return (\n    <>\n      <div className=\"pricesComingSoon\">COMING SOON ...</div>\n      <div className=\"prices\">\n        <div className=\"pricesFilter\">\n          <div\n            className=\"applyChanges\"\n            onClick={() => {\n              props.setApplyChanges(!props.applyChanges)\n            }}\n          >\n            <div>Filters</div>\n            <div className=\"applyChangeButton\">Apply Changes</div>\n          </div>\n          <div className=\"firstFilters\">\n            <div className=\"filterItem\">\n              <h3>Breed Count</h3>\n              <Slider\n                min={0}\n                max={5}\n                step={1}\n                value={props.breed}\n                onChange={(event, newValue) => {\n                  props.setBreed(newValue)\n                }}\n                valueLabelDisplay=\"auto\"\n                marks={[\n                  { value: 0, label: 0 },\n                  { value: 5, label: 5 },\n                ]}\n              />\n            </div>\n            <div className=\"filterItem\">\n              <h3>Legend</h3>\n              <Slider\n                min={0}\n                max={6}\n                step={1}\n                value={props.legend}\n                onChange={(event, newValue) => {\n                  props.setLegend(newValue)\n                }}\n                valueLabelDisplay=\"auto\"\n                marks={[\n                  { value: 0, label: 0 },\n                  { value: 6, label: 6 },\n                ]}\n              />\n            </div>\n            <div className=\"filterItem\">\n              <h3>Purity</h3>\n              <Slider\n                min={0}\n                max={6}\n                step={1}\n                value={props.purity}\n                onChange={(event, newValue) => {\n                  props.setPurity(newValue)\n                }}\n                valueLabelDisplay=\"auto\"\n                marks={[\n                  { value: 0, label: 0 },\n                  { value: 6, label: 6 },\n                ]}\n              />\n            </div>\n          </div>\n          <div className=\"secondFilters\">\n            <div className=\"filterItem\">\n              <h3>Stage</h3>\n              <div className=\"filterCheckbox\">\n                {/* <div>\n                  <input\n                    type=\"checkbox\"\n                    id=\"egg\"\n                    name=\"stage\"\n                    value=\"EGG\"\n                    checked={props.stage === 0}\n                    onChange={(e) => {\n                      props.setStage(e.target.checked ? 0 : 1)\n                    }}\n                  />\n                  <label htmlFor=\"egg\">Egg</label>\n                </div> */}\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    id=\"adult\"\n                    name=\"stage\"\n                    value=\"ADULT\"\n                    checked={props.stage === 1}\n                    onChange={(e) => {\n                      props.setStage(e.target.checked ? 1 : 0)\n                    }}\n                  />\n                  <label htmlFor=\"adult\">Adult</label>\n                </div>\n              </div>\n            </div>\n            <div className=\"filterItem\">\n              <h3>Type</h3>\n              <div className=\"filterCheckbox\">\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    id=\"origin\"\n                    name=\"type\"\n                    value=\"ORIGIN\"\n                    checked={props.type[0] === 1}\n                    onChange={(e) => {\n                      let bool = 0\n                      if (e.target.checked) {\n                        bool = 1\n                      } else {\n                        bool = 0\n                      }\n\n                      let newArr = [bool, props.type[1]]\n\n                      props.setType(newArr)\n                    }}\n                  />\n                  <label htmlFor=\"origin\">Origin</label>\n                </div>\n                <div>\n                  <input\n                    type=\"checkbox\"\n                    id=\"genesis\"\n                    name=\"type\"\n                    value=\"GENESIS\"\n                    checked={props.type[1] === 1}\n                    onChange={(e) => {\n                      let bool = 0\n                      if (e.target.checked) {\n                        bool = 1\n                      } else {\n                        bool = 0\n                      }\n\n                      let newArr = [props.type[0], bool]\n\n                      props.setType(newArr)\n                    }}\n                  />\n                  <label htmlFor=\"genesis\">Genesis</label>\n                </div>\n              </div>\n            </div>\n            <div className=\"filterItem\">\n              <h3>Class</h3>\n              <div className=\"classFilterCheckbox\">\n                <div className=\"classFilterRow\">\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"surge\"\n                      name=\"class\"\n                      value=\"SURGE\"\n                      checked={props.classes.indexOf(1) >= 0}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          props.setClasses((arr) => [...arr, 1])\n                        } else {\n                          let tempArr = [...props.classes]\n                          tempArr.splice(tempArr.indexOf(1), 1)\n                          props.setClasses(tempArr)\n                        }\n                      }}\n                    />\n                    <label htmlFor=\"surge\">SURGE</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"prime\"\n                      name=\"class\"\n                      value=\"PRIME\"\n                      checked={props.classes.indexOf(3) >= 0}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          props.setClasses((arr) => [...arr, 3])\n                        } else {\n                          let tempArr = [...props.classes]\n                          tempArr.splice(tempArr.indexOf(3), 1)\n                          props.setClasses(tempArr)\n                        }\n                      }}\n                    />\n                    <label htmlFor=\"prime\">PRIME</label>\n                  </div>\n                </div>\n\n                <div className=\"classFilterRow\">\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"craboid\"\n                      name=\"class\"\n                      value=\"CRABOID\"\n                      checked={props.classes.indexOf(5) >= 0}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          props.setClasses((arr) => [...arr, 5])\n                        } else {\n                          let tempArr = [...props.classes]\n                          tempArr.splice(tempArr.indexOf(5), 1)\n                          props.setClasses(tempArr)\n                        }\n                      }}\n                    />\n                    <label htmlFor=\"craboid\">CRABOID</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"gem\"\n                      name=\"class\"\n                      value=\"GEM\"\n                      checked={props.classes.indexOf(7) >= 0}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          props.setClasses((arr) => [...arr, 7])\n                        } else {\n                          let tempArr = [...props.classes]\n                          tempArr.splice(tempArr.indexOf(7), 1)\n                          props.setClasses(tempArr)\n                        }\n                      }}\n                    />\n                    <label htmlFor=\"gem\">GEM</label>\n                  </div>\n                </div>\n\n                <div className=\"classFilterRow\">\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"sunken\"\n                      name=\"class\"\n                      value=\"SUNKEN\"\n                      checked={props.classes.indexOf(2) >= 0}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          props.setClasses((arr) => [...arr, 2])\n                        } else {\n                          let tempArr = [...props.classes]\n                          tempArr.splice(tempArr.indexOf(2), 1)\n                          props.setClasses(tempArr)\n                        }\n                      }}\n                    />\n                    <label htmlFor=\"sunken\">SUNKEN</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"bul\"\n                      name=\"class\"\n                      value=\"BULK\"\n                      checked={props.classes.indexOf(4) >= 0}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          props.setClasses((arr) => [...arr, 4])\n                        } else {\n                          let tempArr = [...props.classes]\n                          tempArr.splice(tempArr.indexOf(4), 1)\n                          props.setClasses(tempArr)\n                        }\n                      }}\n                    />\n                    <label htmlFor=\"bul\">BULK</label>\n                  </div>\n                </div>\n                <div className=\"classFilterRow\">\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"ruined\"\n                      name=\"class\"\n                      value=\"RUINED\"\n                      checked={props.classes.indexOf(6) >= 0}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          props.setClasses((arr) => [...arr, 6])\n                        } else {\n                          let tempArr = [...props.classes]\n                          tempArr.splice(tempArr.indexOf(6), 1)\n                          props.setClasses(tempArr)\n                        }\n                      }}\n                    />\n                    <label htmlFor=\"ruined\">RUINED</label>\n                  </div>\n                  <div>\n                    <input\n                      type=\"checkbox\"\n                      id=\"organic\"\n                      name=\"class\"\n                      value=\"ORGANIC\"\n                      checked={props.classes.indexOf(8) >= 0}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          props.setClasses((arr) => [...arr, 8])\n                        } else {\n                          let tempArr = [...props.classes]\n                          tempArr.splice(tempArr.indexOf(8), 1)\n                          props.setClasses(tempArr)\n                        }\n                      }}\n                    />\n                    <label htmlFor=\"organic\">ORGANIC</label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"pricesGraph\">\n          <Legend\n            legends={\n              props.stage === 1\n                ? crabPoplegends\n                : [{ name: 'Egg', color: '#1370F6' }]\n            }\n          />\n          {props.loading ? (\n            <div className=\"loadingDiv\">\n              <p className=\"loadingTag\">Crunching Data</p>\n              <div className=\"dot-flashing\" />\n            </div>\n          ) : (\n            ''\n          )}\n          <AreaGraph\n            data={props.graphData[props.graphMenu]}\n            colors={props.graphDataColors}\n            minMax={[0, 'auto']}\n            range={props.stage === 1 ? 'all' : ''}\n            prices={true}\n            tooltipFunction={(e) => {\n              return (\n                <div\n                  style={{\n                    padding: '10px',\n                    width: '200px',\n                    height: '50px',\n                    borderRadius: '10px',\n                    backgroundColor: 'rgba(0,0,0,0.85)',\n                    border: '1px solid #fff',\n                    display: 'flex',\n                    flexDirection: 'column',\n                  }}\n                >\n                  <div style={{ color: 'white', alignSelf: 'center' }}>\n                    <strong>- {e.point.data.x} -</strong>\n                  </div>\n                  <div style={{ color: 'white' }}>\n                    Value:{' '}\n                    <strong style={{ color: e.point.borderColor }}>\n                      {numberWithCommas(e.point.data.y.toFixed(2))}\n                    </strong>\n                  </div>\n                </div>\n              )\n            }}\n          />\n\n          <div className=\"pricesGraphMenu\">\n            <div\n              className={\n                props.graphMenu === 0\n                  ? 'pricesGraphMenuItem active'\n                  : 'pricesGraphMenuItem'\n              }\n              onClick={() => {\n                props.setGraphMenu(0)\n              }}\n            >\n              <h3>Floor Price</h3>\n            </div>\n            <div\n              className={\n                props.graphMenu === 1\n                  ? 'pricesGraphMenuItem active'\n                  : 'pricesGraphMenuItem'\n              }\n              onClick={() => {\n                props.setGraphMenu(1)\n              }}\n            >\n              <h3>Average Price</h3>\n            </div>\n            <div\n              className={\n                props.graphMenu === 2\n                  ? 'pricesGraphMenuItem active'\n                  : 'pricesGraphMenuItem'\n              }\n              onClick={() => {\n                props.setGraphMenu(2)\n              }}\n            >\n              <h3>Crabada Sold</h3>\n            </div>\n          </div>\n          <Feedback style={{ width: '100%' }} />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Prices\n"]},"metadata":{},"sourceType":"module"}