{"ast":null,"code":"import { memo as t, useRef as o, useMemo as i, createContext as n, useState as r, useCallback as e, useContext as l } from \"react\";\nimport { useSpring as a, animated as c } from \"@react-spring/web\";\nimport { useTheme as s, useMotionConfig as h, useMeasure as u, useValueFormatter as d } from \"@nivo/core\";\nimport { jsx as y, jsxs as p, Fragment as f } from \"react/jsx-runtime\";\n\nfunction v() {\n  return v = Object.assign || function (t) {\n    for (var o = 1; o < arguments.length; o++) {\n      var i = arguments[o];\n\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);\n    }\n\n    return t;\n  }, v.apply(this, arguments);\n}\n\nvar x = {\n  pointerEvents: \"none\",\n  position: \"absolute\",\n  zIndex: 10,\n  top: 0,\n  left: 0\n},\n    m = function (t, o) {\n  return \"translate(\" + t + \"px, \" + o + \"px)\";\n},\n    g = t(function (t) {\n  var i,\n      n = t.position,\n      r = t.anchor,\n      e = t.children,\n      l = s(),\n      d = h(),\n      p = d.animate,\n      f = d.config,\n      g = u(),\n      b = g[0],\n      w = g[1],\n      T = o(!1),\n      C = void 0,\n      E = !1,\n      P = w.width > 0 && w.height > 0,\n      N = Math.round(n[0]),\n      V = Math.round(n[1]);\n  P && (\"top\" === r ? (N -= w.width / 2, V -= w.height + 14) : \"right\" === r ? (N += 14, V -= w.height / 2) : \"bottom\" === r ? (N -= w.width / 2, V += 14) : \"left\" === r ? (N -= w.width + 14, V -= w.height / 2) : \"center\" === r && (N -= w.width / 2, V -= w.height / 2), C = {\n    transform: m(N, V)\n  }, T.current || (E = !0), T.current = [N, V]);\n  var j = a({\n    to: C,\n    config: f,\n    immediate: !p || E\n  }),\n      O = v({}, x, l.tooltip, {\n    transform: null != (i = j.transform) ? i : m(N, V)\n  });\n  return y(c.div, {\n    ref: b,\n    style: O,\n    children: e\n  });\n});\n\ng.displayName = \"TooltipWrapper\";\nvar b = t(function (t) {\n  var o = t.size,\n      i = void 0 === o ? 12 : o,\n      n = t.color,\n      r = t.style;\n  return y(\"span\", {\n    style: v({\n      display: \"block\",\n      width: i,\n      height: i,\n      background: n\n    }, void 0 === r ? {} : r)\n  });\n}),\n    w = t(function (t) {\n  var o,\n      i = t.id,\n      n = t.value,\n      r = t.format,\n      e = t.enableChip,\n      l = void 0 !== e && e,\n      a = t.color,\n      c = t.renderContent,\n      h = s(),\n      u = d(r);\n  if (\"function\" == typeof c) o = c();else {\n    var f = n;\n    void 0 !== u && void 0 !== f && (f = u(f)), o = p(\"div\", {\n      style: h.tooltip.basic,\n      children: [l && y(b, {\n        color: a,\n        style: h.tooltip.chip\n      }), void 0 !== f ? p(\"span\", {\n        children: [i, \": \", y(\"strong\", {\n          children: \"\" + f\n        })]\n      }) : i]\n    });\n  }\n  return y(\"div\", {\n    style: h.tooltip.container,\n    children: o\n  });\n}),\n    T = {\n  width: \"100%\",\n  borderCollapse: \"collapse\"\n},\n    C = t(function (t) {\n  var o,\n      i = t.title,\n      n = t.rows,\n      r = void 0 === n ? [] : n,\n      e = t.renderContent,\n      l = s();\n  return r.length ? (o = \"function\" == typeof e ? e() : p(\"div\", {\n    children: [i && i, y(\"table\", {\n      style: v({}, T, l.tooltip.table),\n      children: y(\"tbody\", {\n        children: r.map(function (t, o) {\n          return y(\"tr\", {\n            children: t.map(function (t, o) {\n              return y(\"td\", {\n                style: l.tooltip.tableCell,\n                children: t\n              }, o);\n            })\n          }, o);\n        })\n      })\n    })]\n  }), y(\"div\", {\n    style: l.tooltip.container,\n    children: o\n  })) : null;\n});\nC.displayName = \"TableTooltip\";\nvar E = t(function (t) {\n  var o = t.x0,\n      n = t.x1,\n      r = t.y0,\n      e = t.y1,\n      l = s(),\n      u = h(),\n      d = u.animate,\n      p = u.config,\n      f = i(function () {\n    return v({}, l.crosshair.line, {\n      pointerEvents: \"none\"\n    });\n  }, [l.crosshair.line]),\n      x = a({\n    x1: o,\n    x2: n,\n    y1: r,\n    y2: e,\n    config: p,\n    immediate: !d\n  });\n  return y(c.line, v({}, x, {\n    fill: \"none\",\n    style: f\n  }));\n});\nE.displayName = \"CrosshairLine\";\nvar P = t(function (t) {\n  var o,\n      i,\n      n = t.width,\n      r = t.height,\n      e = t.type,\n      l = t.x,\n      a = t.y;\n  return \"cross\" === e ? (o = {\n    x0: l,\n    x1: l,\n    y0: 0,\n    y1: r\n  }, i = {\n    x0: 0,\n    x1: n,\n    y0: a,\n    y1: a\n  }) : \"top-left\" === e ? (o = {\n    x0: l,\n    x1: l,\n    y0: 0,\n    y1: a\n  }, i = {\n    x0: 0,\n    x1: l,\n    y0: a,\n    y1: a\n  }) : \"top\" === e ? o = {\n    x0: l,\n    x1: l,\n    y0: 0,\n    y1: a\n  } : \"top-right\" === e ? (o = {\n    x0: l,\n    x1: l,\n    y0: 0,\n    y1: a\n  }, i = {\n    x0: l,\n    x1: n,\n    y0: a,\n    y1: a\n  }) : \"right\" === e ? i = {\n    x0: l,\n    x1: n,\n    y0: a,\n    y1: a\n  } : \"bottom-right\" === e ? (o = {\n    x0: l,\n    x1: l,\n    y0: a,\n    y1: r\n  }, i = {\n    x0: l,\n    x1: n,\n    y0: a,\n    y1: a\n  }) : \"bottom\" === e ? o = {\n    x0: l,\n    x1: l,\n    y0: a,\n    y1: r\n  } : \"bottom-left\" === e ? (o = {\n    x0: l,\n    x1: l,\n    y0: a,\n    y1: r\n  }, i = {\n    x0: 0,\n    x1: l,\n    y0: a,\n    y1: a\n  }) : \"left\" === e ? i = {\n    x0: 0,\n    x1: l,\n    y0: a,\n    y1: a\n  } : \"x\" === e ? o = {\n    x0: l,\n    x1: l,\n    y0: 0,\n    y1: r\n  } : \"y\" === e && (i = {\n    x0: 0,\n    x1: n,\n    y0: a,\n    y1: a\n  }), p(f, {\n    children: [o && y(E, {\n      x0: o.x0,\n      x1: o.x1,\n      y0: o.y0,\n      y1: o.y1\n    }), i && y(E, {\n      x0: i.x0,\n      x1: i.x1,\n      y0: i.y0,\n      y1: i.y1\n    })]\n  });\n});\nP.displayName = \"Crosshair\";\n\nvar N = n({\n  showTooltipAt: function () {},\n  showTooltipFromEvent: function () {},\n  hideTooltip: function () {}\n}),\n    V = {\n  isVisible: !1,\n  position: [null, null],\n  content: null,\n  anchor: null\n},\n    j = n(V),\n    O = function (t) {\n  var o = r(V),\n      n = o[0],\n      l = o[1],\n      a = e(function (t, o, i) {\n    var n = o[0],\n        r = o[1];\n    void 0 === i && (i = \"top\"), l({\n      isVisible: !0,\n      position: [n, r],\n      anchor: i,\n      content: t\n    });\n  }, [l]),\n      c = e(function (o, i, n) {\n    void 0 === n && (n = \"top\");\n    var r = t.current.getBoundingClientRect(),\n        e = i.clientX - r.left,\n        a = i.clientY - r.top;\n    \"left\" !== n && \"right\" !== n || (n = e < r.width / 2 ? \"right\" : \"left\"), l({\n      isVisible: !0,\n      position: [e, a],\n      anchor: n,\n      content: o\n    });\n  }, [t, l]),\n      s = e(function () {\n    l(V);\n  }, [l]);\n  return {\n    actions: i(function () {\n      return {\n        showTooltipAt: a,\n        showTooltipFromEvent: c,\n        hideTooltip: s\n      };\n    }, [a, c, s]),\n    state: n\n  };\n},\n    k = function () {\n  var t = l(N);\n  if (void 0 === t) throw new Error(\"useTooltip must be used within a TooltipProvider\");\n  return t;\n},\n    z = function () {\n  var t = l(j);\n  if (void 0 === t) throw new Error(\"useTooltipState must be used within a TooltipProvider\");\n  return t;\n},\n    A = function (t) {\n  return t.isVisible;\n},\n    F = function () {\n  var t = z();\n  return A(t) ? y(g, {\n    position: t.position,\n    anchor: t.anchor,\n    children: t.content\n  }) : null;\n},\n    M = function (t) {\n  var o = t.container,\n      i = t.children,\n      n = O(o),\n      r = n.actions,\n      e = n.state;\n  return y(N.Provider, {\n    value: r,\n    children: y(j.Provider, {\n      value: e,\n      children: i\n    })\n  });\n};\n\nexport { w as BasicTooltip, b as Chip, P as Crosshair, C as TableTooltip, F as Tooltip, N as TooltipActionsContext, M as TooltipProvider, j as TooltipStateContext, g as TooltipWrapper, V as hiddenTooltipState, A as isVisibleTooltipState, k as useTooltip, O as useTooltipHandlers, z as useTooltipState };","map":{"version":3,"mappings":"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","names":["tooltipStyle","pointerEvents","position","zIndex","top","left","translate","x","y","TooltipWrapper","memo","anchor","children","theme","useTheme","useMotionConfig","animate","springConfig","config","useMeasure","measureRef","bounds","previousPosition","useRef","to","undefined","immediate","hasDimension","width","height","Math","round","transform","current","animatedProps","useSpring","style","tooltip","_jsx","animated","div","ref","displayName","Chip","size","o","color","display","background","r","BasicTooltip","content","id","_value","value","format","enableChip","renderContent","formatValue","useValueFormatter","_jsxs","basic","chip","container","tableStyle","borderCollapse","TableTooltip","title","rows","n","length","table","map","row","i","column","j","tableCell","CrosshairLine","x0","x1","y0","y1","useMemo","crosshair","line","x2","y2","fill","Crosshair","xLine","yLine","type","TooltipActionsContext","createContext","showTooltipAt","showTooltipFromEvent","hideTooltip","hiddenTooltipState","isVisible","TooltipStateContext","useTooltipHandlers","useState","state","setState","useCallback","event","getBoundingClientRect","clientX","clientY","actions","useTooltip","context","useContext","Error","useTooltipState","isVisibleTooltipState","Tooltip","TooltipProvider","Provider"],"sources":["E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\tooltip\\src\\TooltipWrapper.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\tooltip\\src\\Chip.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\tooltip\\src\\BasicTooltip.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\tooltip\\src\\TableTooltip.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\tooltip\\src\\CrosshairLine.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\tooltip\\src\\Crosshair.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\tooltip\\src\\context.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\tooltip\\src\\hooks.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\tooltip\\src\\Tooltip.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\tooltip\\src\\TooltipProvider.tsx"],"sourcesContent":["import { memo, useRef, PropsWithChildren, CSSProperties } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport {\n    useTheme,\n    useMotionConfig,\n    // @ts-ignore\n    useMeasure,\n} from '@nivo/core'\nimport { TooltipStateContextDataVisible } from './context'\n\nconst TOOLTIP_OFFSET = 14\n\nconst tooltipStyle = {\n    pointerEvents: 'none' as CSSProperties['pointerEvents'],\n    position: 'absolute' as CSSProperties['position'],\n    zIndex: 10,\n    top: 0,\n    left: 0,\n}\n\nconst translate = (x: number, y: number) => `translate(${x}px, ${y}px)`\n\ninterface TooltipWrapperProps {\n    position: TooltipStateContextDataVisible['position']\n    anchor: TooltipStateContextDataVisible['anchor']\n}\n\nexport const TooltipWrapper = memo<PropsWithChildren<TooltipWrapperProps>>(\n    ({ position, anchor, children }) => {\n        const theme = useTheme()\n        const { animate, config: springConfig } = useMotionConfig()\n        const [measureRef, bounds] = useMeasure()\n        const previousPosition = useRef<[number, number] | false>(false)\n\n        let to = undefined\n        let immediate = false\n        const hasDimension = bounds.width > 0 && bounds.height > 0\n\n        let x = Math.round(position[0])\n        let y = Math.round(position[1])\n\n        if (hasDimension) {\n            if (anchor === 'top') {\n                x -= bounds.width / 2\n                y -= bounds.height + TOOLTIP_OFFSET\n            } else if (anchor === 'right') {\n                x += TOOLTIP_OFFSET\n                y -= bounds.height / 2\n            } else if (anchor === 'bottom') {\n                x -= bounds.width / 2\n                y += TOOLTIP_OFFSET\n            } else if (anchor === 'left') {\n                x -= bounds.width + TOOLTIP_OFFSET\n                y -= bounds.height / 2\n            } else if (anchor === 'center') {\n                x -= bounds.width / 2\n                y -= bounds.height / 2\n            }\n\n            to = {\n                transform: translate(x, y),\n            }\n\n            if (!previousPosition.current) {\n                immediate = true\n            }\n\n            previousPosition.current = [x, y]\n        }\n\n        const animatedProps = useSpring<{\n            transform: string\n        }>({\n            to,\n            config: springConfig,\n            immediate: !animate || immediate,\n        })\n\n        const style = {\n            ...tooltipStyle,\n            ...theme.tooltip,\n            transform: animatedProps.transform ?? translate(x, y),\n        }\n\n        return (\n            <animated.div ref={measureRef} style={style}>\n                {children}\n            </animated.div>\n        )\n    }\n)\n\nTooltipWrapper.displayName = 'TooltipWrapper'\n","import { CSSProperties, memo } from 'react'\n\ninterface ChipProps {\n    size?: number\n    color: string\n    style?: CSSProperties\n}\n\nexport const Chip = memo<ChipProps>(({ size = 12, color, style = {} }) => (\n    <span style={{ display: 'block', width: size, height: size, background: color, ...style }} />\n))\n","import { memo, ReactNode } from 'react'\nimport { useTheme, ValueFormat, useValueFormatter } from '@nivo/core'\nimport { Chip } from './Chip'\n\nexport interface BasicTooltipProps {\n    id: ReactNode\n    value?: number | string | Date\n    format?: ValueFormat<number | string | Date>\n    color?: string\n    enableChip?: boolean\n    /**\n     * @deprecated This should be replaced by custom tooltip components.\n     */\n    renderContent?: () => JSX.Element\n}\n\nexport const BasicTooltip = memo<BasicTooltipProps>(\n    ({ id, value: _value, format, enableChip = false, color, renderContent }) => {\n        const theme = useTheme()\n        const formatValue = useValueFormatter<number | string | Date>(format)\n\n        let content: JSX.Element\n        if (typeof renderContent === 'function') {\n            content = renderContent()\n        } else {\n            let value = _value\n            if (formatValue !== undefined && value !== undefined) {\n                value = formatValue(value)\n            }\n            content = (\n                <div style={theme.tooltip.basic}>\n                    {enableChip && <Chip color={color!} style={theme.tooltip.chip} />}\n                    {value !== undefined ? (\n                        <span>\n                            {id}: <strong>{`${value}`}</strong>\n                        </span>\n                    ) : (\n                        id\n                    )}\n                </div>\n            )\n        }\n\n        return <div style={theme.tooltip.container}>{content}</div>\n    }\n)\n","import { CSSProperties, memo, ReactNode } from 'react'\nimport { useTheme } from '@nivo/core'\n\nconst tableStyle = {\n    width: '100%',\n    borderCollapse: 'collapse' as CSSProperties['borderCollapse'],\n}\n\ninterface TableTooltipProps {\n    title?: ReactNode\n    renderContent?: () => JSX.Element\n    rows?: ReactNode[][]\n}\n\nexport const TableTooltip = memo(({ title, rows = [], renderContent }: TableTooltipProps) => {\n    const theme = useTheme()\n\n    if (!rows.length) return null\n\n    let content\n    if (typeof renderContent === 'function') {\n        content = renderContent()\n    } else {\n        content = (\n            <div>\n                {title && title}\n                <table style={{ ...tableStyle, ...theme.tooltip.table }}>\n                    <tbody>\n                        {rows.map((row, i) => (\n                            <tr key={i}>\n                                {row.map((column, j) => (\n                                    <td key={j} style={theme.tooltip.tableCell}>\n                                        {column}\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    return <div style={theme.tooltip.container}>{content}</div>\n})\n\nTableTooltip.displayName = 'TableTooltip'\n","import { CSSProperties, memo, useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\n\ninterface CrosshairLineProps {\n    x0: number\n    x1: number\n    y0: number\n    y1: number\n}\n\nexport const CrosshairLine = memo(({ x0, x1, y0, y1 }: CrosshairLineProps) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n    const style = useMemo(\n        () => ({\n            ...theme.crosshair.line,\n            pointerEvents: 'none' as CSSProperties['pointerEvents'],\n        }),\n        [theme.crosshair.line]\n    )\n\n    const animatedProps = useSpring({\n        x1: x0,\n        x2: x1,\n        y1: y0,\n        y2: y1,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return <animated.line {...animatedProps} fill=\"none\" style={style} />\n})\n\nCrosshairLine.displayName = 'CrosshairLine'\n","import { memo } from 'react'\nimport { CrosshairLine } from './CrosshairLine'\nimport { CrosshairType } from './types'\n\ninterface CrosshairProps {\n    width: number\n    height: number\n    type: CrosshairType\n    x: number\n    y: number\n}\n\nexport const Crosshair = memo(({ width, height, type, x, y }: CrosshairProps) => {\n    let xLine\n    let yLine\n    if (type === 'cross') {\n        xLine = { x0: x, x1: x, y0: 0, y1: height }\n        yLine = { x0: 0, x1: width, y0: y, y1: y }\n    } else if (type === 'top-left') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'top') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n    } else if (type === 'top-right') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'right') {\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'bottom-right') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'bottom') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n    } else if (type === 'bottom-left') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'left') {\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'x') {\n        xLine = { x0: x, x1: x, y0: 0, y1: height }\n    } else if (type === 'y') {\n        yLine = { x0: 0, x1: width, y0: y, y1: y }\n    }\n\n    return (\n        <>\n            {xLine && <CrosshairLine x0={xLine.x0} x1={xLine.x1} y0={xLine.y0} y1={xLine.y1} />}\n            {yLine && <CrosshairLine x0={yLine.x0} x1={yLine.x1} y0={yLine.y0} y1={yLine.y1} />}\n        </>\n    )\n})\n\nCrosshair.displayName = 'Crosshair'\n","import { createContext, MouseEvent } from 'react'\nimport { TooltipAnchor } from './types'\n\nexport interface TooltipActionsContextData {\n    showTooltipAt: (\n        content: JSX.Element,\n        position: [number, number],\n        anchor?: TooltipAnchor\n    ) => void\n    showTooltipFromEvent: (content: JSX.Element, event: MouseEvent, anchor?: TooltipAnchor) => void\n    hideTooltip: () => void\n}\n\nconst defaultActions: TooltipActionsContextData = {\n    showTooltipAt: () => {},\n    showTooltipFromEvent: () => {},\n    hideTooltip: () => {},\n}\n\nexport const TooltipActionsContext = createContext<TooltipActionsContextData>(defaultActions)\n\nexport interface TooltipStateContextDataVisible {\n    isVisible: true\n    position: [number, number]\n    content: JSX.Element\n    anchor: TooltipAnchor\n}\n\nexport interface TooltipStateContextDataHidden {\n    isVisible: false\n    position: [null, null]\n    content: null\n    anchor: null\n}\n\nexport type TooltipStateContextData = TooltipStateContextDataVisible | TooltipStateContextDataHidden\n\nexport const hiddenTooltipState: TooltipStateContextDataHidden = {\n    isVisible: false,\n    position: [null, null],\n    content: null,\n    anchor: null,\n}\n\nexport const TooltipStateContext = createContext<TooltipStateContextData>(hiddenTooltipState)\n","import { useState, useContext, useCallback, MutableRefObject, MouseEvent, useMemo } from 'react'\nimport {\n    TooltipActionsContext,\n    TooltipActionsContextData,\n    TooltipStateContext,\n    TooltipStateContextData,\n    hiddenTooltipState,\n} from './context'\nimport { TooltipAnchor } from './types'\n\nexport const useTooltipHandlers = (container: MutableRefObject<HTMLDivElement>) => {\n    const [state, setState] = useState<TooltipStateContextData>(hiddenTooltipState)\n\n    const showTooltipAt: TooltipActionsContextData['showTooltipAt'] = useCallback(\n        (content: JSX.Element, [x, y]: [number, number], anchor: TooltipAnchor = 'top') => {\n            setState({\n                isVisible: true,\n                position: [x, y],\n                anchor,\n                content,\n            })\n        },\n        [setState]\n    )\n\n    const showTooltipFromEvent: TooltipActionsContextData['showTooltipFromEvent'] = useCallback(\n        (content: JSX.Element, event: MouseEvent, anchor: TooltipAnchor = 'top') => {\n            const bounds = container.current.getBoundingClientRect()\n            const x = event.clientX - bounds.left\n            const y = event.clientY - bounds.top\n\n            if (anchor === 'left' || anchor === 'right') {\n                if (x < bounds.width / 2) anchor = 'right'\n                else anchor = 'left'\n            }\n\n            setState({\n                isVisible: true,\n                position: [x, y],\n                anchor,\n                content,\n            })\n        },\n        [container, setState]\n    )\n\n    const hideTooltip = useCallback(() => {\n        setState(hiddenTooltipState)\n    }, [setState])\n\n    const actions: TooltipActionsContextData = useMemo(() => {\n        return {\n            showTooltipAt,\n            showTooltipFromEvent,\n            hideTooltip,\n        }\n    }, [showTooltipAt, showTooltipFromEvent, hideTooltip])\n\n    return {\n        actions,\n        state,\n    }\n}\n\nexport const useTooltip = () => {\n    const context = useContext(TooltipActionsContext)\n    if (context === undefined) {\n        throw new Error('useTooltip must be used within a TooltipProvider')\n    }\n\n    return context\n}\n\nexport const useTooltipState = () => {\n    const context = useContext(TooltipStateContext)\n    if (context === undefined) {\n        throw new Error('useTooltipState must be used within a TooltipProvider')\n    }\n\n    return context\n}\n","import { useTooltipState } from './hooks'\nimport { TooltipWrapper } from './TooltipWrapper'\nimport { TooltipStateContextData, TooltipStateContextDataVisible } from './context'\n\nexport const isVisibleTooltipState = (\n    state: TooltipStateContextData\n): state is TooltipStateContextDataVisible => state.isVisible\n\nexport const Tooltip = () => {\n    const state = useTooltipState()\n\n    if (!isVisibleTooltipState(state)) {\n        return null\n    }\n\n    return (\n        <TooltipWrapper position={state.position} anchor={state.anchor}>\n            {state.content}\n        </TooltipWrapper>\n    )\n}\n","import { PropsWithChildren, MutableRefObject } from 'react'\nimport { TooltipActionsContext, TooltipStateContext } from './context'\nimport { useTooltipHandlers } from './hooks'\n\ninterface TooltipProviderProps {\n    container: MutableRefObject<HTMLDivElement>\n}\n\nexport const TooltipProvider = ({\n    container,\n    children,\n}: PropsWithChildren<TooltipProviderProps>) => {\n    const { actions, state } = useTooltipHandlers(container)\n\n    return (\n        <TooltipActionsContext.Provider value={actions}>\n            <TooltipStateContext.Provider value={state}>{children}</TooltipStateContext.Provider>\n        </TooltipActionsContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}