{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\legacy\\\\legacy-frontend-main\\\\src\\\\components\\\\Graphs\\\\Bar.js\";\nimport React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction nFormatter(num, digits) {\n  const lookup = [{\n    value: 1,\n    symbol: ''\n  }, {\n    value: 1e3,\n    symbol: 'k'\n  }, {\n    value: 1e6,\n    symbol: 'M'\n  }, {\n    value: 1e9,\n    symbol: 'G'\n  }, {\n    value: 1e12,\n    symbol: 'T'\n  }, {\n    value: 1e15,\n    symbol: 'P'\n  }, {\n    value: 1e18,\n    symbol: 'E'\n  }];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  var item = lookup.slice().reverse().find(function (item) {\n    return num >= item.value;\n  });\n  return item ? (num / item.value).toFixed(digits).replace(rx, '$1') + item.symbol : '0';\n}\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nfunction Bar(_ref) {\n  let {\n    data,\n    keys,\n    range\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(ResponsiveBar, {\n    data: data,\n    keys: keys,\n    indexBy: \"date\",\n    margin: {\n      top: 50,\n      right: 130,\n      bottom: 50,\n      left: 75\n    },\n    padding: 0.2,\n    groupMode: \"grouped\",\n    valueScale: {\n      type: 'linear'\n    },\n    indexScale: {\n      type: 'band',\n      round: true\n    },\n    colors: ['#004EBF', '#B02170'],\n    borderRadius: 2,\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legendPosition: 'middle',\n      legendOffset: 32,\n      format: value => {\n        if (range === '30days' || range === 'all') {\n          let minimumDate = data[0]['date'].split('-');\n          let valueSplit = value.split('-');\n          let toDateFormat = parseInt(valueSplit[1]) + '/' + parseInt(valueSplit[0]) + '/' + parseInt(valueSplit[2]);\n          let toDateFormatMinimum = parseInt(minimumDate[1]) + '/' + parseInt(minimumDate[0]) + '/' + parseInt(minimumDate[2]);\n          let date = new Date(toDateFormat);\n          let minDate = new Date(toDateFormatMinimum);\n          let modulo = range === '30days' ? 518400 : 950400;\n          return (date.getTime() - minDate.getTime()) * 1000 % modulo === 0 ? value : '';\n        } else {\n          return value;\n        }\n      }\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legendPosition: 'middle',\n      legendOffset: -40,\n      format: value => {\n        return value >= 0 ? nFormatter(value, 3) : '-' + nFormatter(-value, 3);\n      }\n    },\n    enableLabel: false,\n    labelSkipWidth: 12,\n    labelSkipHeight: 12,\n    labelTextColor: \"#29cf26\",\n    legends: [{\n      dataFrom: 'keys',\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 120,\n      translateY: 0,\n      itemsSpacing: 2,\n      itemWidth: 100,\n      itemHeight: 20,\n      itemDirection: 'left-to-right',\n      itemOpacity: 0.85,\n      itemTextColor: 'white',\n      symbolSize: 20,\n      effects: [{\n        on: 'hover',\n        style: {\n          itemOpacity: 1\n        }\n      }]\n    }],\n    theme: {\n      axis: {\n        ticks: {\n          text: {\n            fill: 'var(--text-color)'\n          }\n        },\n        legend: {\n          text: {\n            fill: 'var(--text-color)'\n          }\n        }\n      }\n    },\n    enableGridY: false,\n    role: \"application\",\n    tooltip: e => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px',\n          width: '200px',\n          height: '50px',\n          borderRadius: '10px',\n          backgroundColor: 'rgba(0,0,0,0.75)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'white'\n          },\n          children: [\"Mint: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", numberWithCommas(e.data.mint)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'white'\n          },\n          children: [\"Breed: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", numberWithCommas(e.data.breed)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Bar;\nexport default Bar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bar\");","map":{"version":3,"sources":["E:/Work/legacy/legacy-frontend-main/src/components/Graphs/Bar.js"],"names":["React","ResponsiveBar","nFormatter","num","digits","lookup","value","symbol","rx","item","slice","reverse","find","toFixed","replace","numberWithCommas","x","toString","Bar","data","keys","range","top","right","bottom","left","type","round","from","modifiers","tickSize","tickPadding","tickRotation","legendPosition","legendOffset","format","minimumDate","split","valueSplit","toDateFormat","parseInt","toDateFormatMinimum","date","Date","minDate","modulo","getTime","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","itemTextColor","symbolSize","effects","on","style","axis","ticks","text","fill","legend","e","padding","width","height","borderRadius","backgroundColor","color","mint","breed"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\nfunction nFormatter(num, digits) {\n  const lookup = [\n    { value: 1, symbol: '' },\n    { value: 1e3, symbol: 'k' },\n    { value: 1e6, symbol: 'M' },\n    { value: 1e9, symbol: 'G' },\n    { value: 1e12, symbol: 'T' },\n    { value: 1e15, symbol: 'P' },\n    { value: 1e18, symbol: 'E' },\n  ]\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/\n  var item = lookup\n    .slice()\n    .reverse()\n    .find(function (item) {\n      return num >= item.value\n    })\n  return item\n    ? (num / item.value).toFixed(digits).replace(rx, '$1') + item.symbol\n    : '0'\n}\n\nfunction numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\nfunction Bar({ data, keys, range }) {\n  return (\n    <ResponsiveBar\n      data={data}\n      keys={keys}\n      indexBy=\"date\"\n      margin={{ top: 50, right: 130, bottom: 50, left: 75 }}\n      padding={0.2}\n      groupMode=\"grouped\"\n      valueScale={{ type: 'linear' }}\n      indexScale={{ type: 'band', round: true }}\n      colors={['#004EBF', '#B02170']}\n      borderRadius={2}\n      borderColor={{\n        from: 'color',\n        modifiers: [['darker', 1.6]],\n      }}\n      axisTop={null}\n      axisRight={null}\n      axisBottom={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legendPosition: 'middle',\n        legendOffset: 32,\n        format: (value) => {\n          if (range === '30days' || range === 'all') {\n            let minimumDate = data[0]['date'].split('-')\n            let valueSplit = value.split('-')\n            let toDateFormat =\n              parseInt(valueSplit[1]) +\n              '/' +\n              parseInt(valueSplit[0]) +\n              '/' +\n              parseInt(valueSplit[2])\n            let toDateFormatMinimum =\n              parseInt(minimumDate[1]) +\n              '/' +\n              parseInt(minimumDate[0]) +\n              '/' +\n              parseInt(minimumDate[2])\n            let date = new Date(toDateFormat)\n            let minDate = new Date(toDateFormatMinimum)\n            let modulo = range === '30days' ? 518400 : 950400\n            return ((date.getTime() - minDate.getTime()) * 1000) % modulo === 0\n              ? value\n              : ''\n          } else {\n            return value\n          }\n        },\n      }}\n      axisLeft={{\n        tickSize: 5,\n        tickPadding: 5,\n        tickRotation: 0,\n        legendPosition: 'middle',\n        legendOffset: -40,\n        format: (value) => {\n          return value >= 0 ? nFormatter(value, 3) : '-' + nFormatter(-value, 3)\n        },\n      }}\n      enableLabel={false}\n      labelSkipWidth={12}\n      labelSkipHeight={12}\n      labelTextColor=\"#29cf26\"\n      legends={[\n        {\n          dataFrom: 'keys',\n          anchor: 'bottom-right',\n          direction: 'column',\n          justify: false,\n          translateX: 120,\n          translateY: 0,\n          itemsSpacing: 2,\n          itemWidth: 100,\n          itemHeight: 20,\n          itemDirection: 'left-to-right',\n          itemOpacity: 0.85,\n          itemTextColor: 'white',\n          symbolSize: 20,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemOpacity: 1,\n              },\n            },\n          ],\n        },\n      ]}\n      theme={{\n        axis: {\n          ticks: {\n            text: {\n              fill: 'var(--text-color)',\n            },\n          },\n          legend: {\n            text: {\n              fill: 'var(--text-color)',\n            },\n          },\n        },\n      }}\n      enableGridY={false}\n      role=\"application\"\n      tooltip={(e) => {\n        return (\n          <div\n            style={{\n              padding: '10px',\n              width: '200px',\n              height: '50px',\n              borderRadius: '10px',\n              backgroundColor: 'rgba(0,0,0,0.75)',\n            }}\n          >\n            <div style={{ color: 'white' }}>\n              Mint: <strong> {numberWithCommas(e.data.mint)}</strong>\n            </div>\n            <div style={{ color: 'white' }}>\n              Breed: <strong> {numberWithCommas(e.data.breed)}</strong>\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nexport default Bar\n"]},"metadata":{},"sourceType":"module"}