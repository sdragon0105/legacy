{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\legacy\\\\legacy-frontend-main\\\\src\\\\games\\\\crabada\\\\Population\\\\PopulationContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Population from './Population';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fetchData = async callback => {\n  const response = await axios.get('https://p2eanalytics.com/crabada/getPopulation');\n  callback(response.data.data);\n};\n\nfunction PopulationContainer() {\n  _s();\n\n  const [crabPieData, setCrabPieData] = useState([]);\n  const [eggPieData, setEggPieData] = useState([]);\n  const [crabPopulationData, setCrabPopulationData] = useState([]);\n  const [eggPopulationData, setEggPopulationData] = useState([]);\n  const [eggHatchPopulationData, setEggHatchPopulationData] = useState([]);\n  const [totalHatching, setTotalHatching] = useState([]);\n  const [totalCrabs, setTotalCrabs] = useState(1);\n  useEffect(() => {\n    fetchData(allData => {\n      setCrabPopulationData(allData[0]);\n      setEggPopulationData(allData[1]);\n      setCrabPieData(allData[2]);\n      setEggPieData(allData[3]);\n      setEggHatchPopulationData(allData[4]);\n      setTotalCrabs(allData[5]);\n      setTotalHatching(allData[6]);\n    });\n  }, []);\n  return totalCrabs === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px',\n      backgroundColor: 'black'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Population, {\n    crabPieData: crabPieData,\n    eggPieData: eggPieData,\n    crabPopulationData: crabPopulationData,\n    eggPopulationData: eggPopulationData,\n    eggHatchPopulationData: eggHatchPopulationData,\n    totalCrabs: totalCrabs,\n    totalHatching: totalHatching\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PopulationContainer, \"PNIYiakpMViUF4lvR+KA3BuL+wE=\");\n\n_c = PopulationContainer;\nexport default PopulationContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopulationContainer\");","map":{"version":3,"sources":["E:/Work/legacy/legacy-frontend-main/src/games/crabada/Population/PopulationContainer.js"],"names":["React","useEffect","useState","Population","axios","fetchData","callback","response","get","data","PopulationContainer","crabPieData","setCrabPieData","eggPieData","setEggPieData","crabPopulationData","setCrabPopulationData","eggPopulationData","setEggPopulationData","eggHatchPopulationData","setEggHatchPopulationData","totalHatching","setTotalHatching","totalCrabs","setTotalCrabs","allData","height","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAAOC,QAAP,IAAoB;AACpC,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,gDADqB,CAAvB;AAGAF,EAAAA,QAAQ,CAACC,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAR;AACD,CALD;;AAOA,SAASC,mBAAT,GAA+B;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,kBAAD,EAAqBC,qBAArB,IAA8Cd,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACe,iBAAD,EAAoBC,oBAApB,IAA4ChB,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACiB,sBAAD,EAAyBC,yBAAzB,IAAsDlB,QAAQ,CAAC,EAAD,CAApE;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,CAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,SAAS,CAAEoB,OAAD,IAAa;AACrBT,MAAAA,qBAAqB,CAACS,OAAO,CAAC,CAAD,CAAR,CAArB;AACAP,MAAAA,oBAAoB,CAACO,OAAO,CAAC,CAAD,CAAR,CAApB;AACAb,MAAAA,cAAc,CAACa,OAAO,CAAC,CAAD,CAAR,CAAd;AACAX,MAAAA,aAAa,CAACW,OAAO,CAAC,CAAD,CAAR,CAAb;AACAL,MAAAA,yBAAyB,CAACK,OAAO,CAAC,CAAD,CAAR,CAAzB;AACAD,MAAAA,aAAa,CAACC,OAAO,CAAC,CAAD,CAAR,CAAb;AACAH,MAAAA,gBAAgB,CAACG,OAAO,CAAC,CAAD,CAAR,CAAhB;AACD,KARQ,CAAT;AASD,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAOF,UAAU,KAAK,CAAf,gBACL;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,eAAe,EAAE;AAApC;AAAZ;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,UAAD;AACE,IAAA,WAAW,EAAEhB,WADf;AAEE,IAAA,UAAU,EAAEE,UAFd;AAGE,IAAA,kBAAkB,EAAEE,kBAHtB;AAIE,IAAA,iBAAiB,EAAEE,iBAJrB;AAKE,IAAA,sBAAsB,EAAEE,sBAL1B;AAME,IAAA,UAAU,EAAEI,UANd;AAOE,IAAA,aAAa,EAAEF;AAPjB;AAAA;AAAA;AAAA;AAAA,UAHF;AAaD;;GAjCQX,mB;;KAAAA,mB;AAmCT,eAAeA,mBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Population from './Population'\nimport axios from 'axios'\n\nconst fetchData = async (callback) => {\n  const response = await axios.get(\n    'https://p2eanalytics.com/crabada/getPopulation',\n  )\n  callback(response.data.data)\n}\n\nfunction PopulationContainer() {\n  const [crabPieData, setCrabPieData] = useState([])\n  const [eggPieData, setEggPieData] = useState([])\n  const [crabPopulationData, setCrabPopulationData] = useState([])\n  const [eggPopulationData, setEggPopulationData] = useState([])\n  const [eggHatchPopulationData, setEggHatchPopulationData] = useState([])\n  const [totalHatching, setTotalHatching] = useState([])\n  const [totalCrabs, setTotalCrabs] = useState(1)\n\n  useEffect(() => {\n    fetchData((allData) => {\n      setCrabPopulationData(allData[0])\n      setEggPopulationData(allData[1])\n      setCrabPieData(allData[2])\n      setEggPieData(allData[3])\n      setEggHatchPopulationData(allData[4])\n      setTotalCrabs(allData[5])\n      setTotalHatching(allData[6])\n    })\n  }, [])\n  return totalCrabs === 1 ? (\n    <div style={{ height: '500px', backgroundColor: 'black' }} />\n  ) : (\n    <Population\n      crabPieData={crabPieData}\n      eggPieData={eggPieData}\n      crabPopulationData={crabPopulationData}\n      eggPopulationData={eggPopulationData}\n      eggHatchPopulationData={eggHatchPopulationData}\n      totalCrabs={totalCrabs}\n      totalHatching={totalHatching}\n    />\n  )\n}\n\nexport default PopulationContainer\n"]},"metadata":{},"sourceType":"module"}