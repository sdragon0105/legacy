{"ast":null,"code":"import { useMemo as i, useCallback as n, createElement as e, Fragment as o } from \"react\";\nimport { useValueFormatter as t, useTheme as r, useMotionConfig as a, Container as d, useDimensions as u, bindDefs as l, SvgWrapper as c, ResponsiveWrapper as s } from \"@nivo/core\";\nimport { Grid as h, Axes as f } from \"@nivo/axes\";\nimport { BoxLegendSvg as v } from \"@nivo/legends\";\nimport m from \"lodash/get\";\nimport { stackOffsetExpand as g, stackOffsetDiverging as p, stackOffsetNone as y, stackOffsetSilhouette as b, stackOffsetWiggle as x, stack as M } from \"d3-shape\";\nimport { scaleLinear as w } from \"d3-scale\";\nimport { useOrdinalColorScale as C, useInheritedColor as k } from \"@nivo/colors\";\nimport { animated as P, to as I, useTransition as S } from \"@react-spring/web\";\nimport { useTooltip as E, BasicTooltip as W } from \"@nivo/tooltip\";\nimport { jsx as F, Fragment as L } from \"react/jsx-runtime\";\n\nfunction G() {\n  return G = Object.assign || function (i) {\n    for (var n = 1; n < arguments.length; n++) {\n      var e = arguments[n];\n\n      for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && (i[o] = e[o]);\n    }\n\n    return i;\n  }, G.apply(this, arguments);\n}\n\nvar V = {\n  layout: \"vertical\",\n  offset: \"none\",\n  outerPadding: 0,\n  innerPadding: 3,\n  layers: [\"grid\", \"axes\", \"bars\", \"legends\"],\n  enableGridX: !1,\n  enableGridY: !0,\n  colors: {\n    scheme: \"nivo\"\n  },\n  borderWidth: 0,\n  borderColor: {\n    from: \"color\",\n    modifiers: [[\"darker\", 1]]\n  },\n  isInteractive: !0,\n  animate: !0,\n  motionConfig: \"gentle\"\n},\n    O = {\n  expand: g,\n  diverging: p,\n  none: y,\n  silouhette: b,\n  wiggle: x\n},\n    j = function (n, e, o) {\n  return i(function () {\n    var i = O[o];\n    return M().keys(n).value(function (i, n) {\n      return e[n](i);\n    }).offset(i);\n  }, [n, e, o]);\n},\n    X = function (n) {\n  var e = n.data,\n      o = n.id,\n      a = n.value,\n      d = n.valueFormat,\n      u = n.dimensions,\n      l = n.layout,\n      c = n.offset,\n      s = n.outerPadding,\n      h = n.innerPadding,\n      f = n.colors,\n      v = n.borderColor,\n      g = n.borderWidth,\n      p = n.width,\n      y = n.height,\n      b = function (n) {\n    return i(function () {\n      var i = {},\n          e = [];\n      return n.forEach(function (n) {\n        e.push(n.id), i[n.id] = \"function\" == typeof n.value ? n.value : function (i) {\n          return m(i, n.value, 0);\n        };\n      }), {\n        dimensionIds: e,\n        dimensions: i\n      };\n    }, [n]);\n  }(u),\n      x = b.dimensionIds,\n      M = b.dimensions,\n      P = function (n, e) {\n    return i(function () {\n      var i = n(e),\n          o = [];\n      return i.forEach(function (i) {\n        i.forEach(function (i) {\n          o.push(i[0]), o.push(i[1]);\n        });\n      }), {\n        stacked: i,\n        min: Math.min.apply(Math, o),\n        max: Math.max.apply(Math, o)\n      };\n    }, [n, e]);\n  }(j(x, M, c), e),\n      I = P.stacked,\n      S = P.min,\n      E = P.max,\n      W = function (n, e, o) {\n    var t = \"function\" == typeof e ? e : function (i) {\n      return m(i, e);\n    },\n        r = \"function\" == typeof o ? o : function (i) {\n      return m(i, o, 0);\n    };\n    return i(function () {\n      var i = [];\n      return n.forEach(function (n, e) {\n        var o = t(n),\n            a = r(n);\n        i.push({\n          index: e,\n          id: o,\n          value: a,\n          data: n\n        });\n      }), i;\n    }, [n, t, r]);\n  }(e, o, a),\n      F = function (n) {\n    var e = n.data,\n        o = n.width,\n        t = n.height,\n        r = n.layout,\n        a = n.outerPadding,\n        d = n.innerPadding;\n    return i(function () {\n      var i = e.reduce(function (i, n) {\n        return i + n.value;\n      }, 0),\n          n = w().domain([0, i]),\n          u = 2 * a + (e.length - 1) * d;\n      return \"vertical\" === r ? n.range([0, o - u]) : n.range([0, t - u]), n;\n    }, [e, o, t, r]);\n  }({\n    data: W,\n    width: p,\n    height: y,\n    layout: l,\n    outerPadding: s,\n    innerPadding: h\n  }),\n      L = function (n, e, o, t, r) {\n    return i(function () {\n      return \"vertical\" === r ? w().domain([e, n]).range([0, t]) : w().domain([n, e]).range([0, o]);\n    }, [n, e, o, t, r]);\n  }(S, E, p, y, l),\n      V = function (n) {\n    var e = n.data,\n        o = n.stacked,\n        r = n.dimensionIds,\n        a = n.valueFormat,\n        d = n.thicknessScale,\n        u = n.dimensionsScale,\n        l = n.colors,\n        c = n.layout,\n        s = n.outerPadding,\n        h = n.innerPadding,\n        f = C(l, \"id\"),\n        v = t(a);\n    return i(function () {\n      var i = [],\n          n = s;\n      return e.forEach(function (e) {\n        var t = d(e.value),\n            a = G({}, e, {\n          x: \"vertical\" === c ? n : 0,\n          y: \"vertical\" === c ? 0 : n,\n          width: \"vertical\" === c ? t : 0,\n          height: \"vertical\" === c ? 0 : t,\n          dimensions: []\n        }),\n            l = [],\n            s = 0;\n        n += t + h, r.forEach(function (i) {\n          var n = o.find(function (n) {\n            return n.key === i;\n          });\n\n          if (n) {\n            var t = n[e.index],\n                r = {\n              id: i,\n              datum: a,\n              value: t[1] - t[0],\n              formattedValue: v(t[1] - t[0]),\n              color: \"rgba(0, 0, 0, 0)\",\n              x: 0,\n              y: 0,\n              width: 0,\n              height: 0\n            },\n                d = u(t[0]),\n                h = u(t[1]);\n            \"vertical\" === c ? (r.x = a.x, r.y = Math.min(d, h), r.width = a.width, r.height = Math.max(d, h) - r.y, l.push(r.y), s += r.height) : (r.x = Math.min(d, h), r.y = a.y, r.width = Math.max(d, h) - r.x, r.height = a.height, l.push(r.x), s += r.width), r.color = f(r), a.dimensions.push(r);\n          }\n\n          \"vertical\" === c ? (a.y = Math.min.apply(Math, l), a.height = s) : (a.x = Math.min.apply(Math, l), a.width = s);\n        }), i.push(a);\n      }), i;\n    }, [e, o, r, d, u, c, s, h, f, v]);\n  }({\n    data: W,\n    stacked: I,\n    dimensionIds: x,\n    valueFormat: d,\n    thicknessScale: F,\n    dimensionsScale: L,\n    colors: f,\n    layout: l,\n    outerPadding: s,\n    innerPadding: h\n  }),\n      O = function (n, e, o) {\n    var t = r(),\n        a = k(e, t);\n    return i(function () {\n      var i = [];\n      return n.forEach(function (n) {\n        n.dimensions.forEach(function (e) {\n          i.push(G({\n            key: n.id + \"-\" + e.id\n          }, e, {\n            borderColor: a(e),\n            borderWidth: o\n          }));\n        });\n      }), i;\n    }, [n, o, a]);\n  }(V, v, g);\n\n  return {\n    computedData: V,\n    bars: O,\n    thicknessScale: F,\n    dimensionsScale: L,\n    dimensionIds: x\n  };\n},\n    Y = function (i) {\n  var o,\n      t = i.bar,\n      r = i.animatedProps,\n      a = i.isInteractive,\n      d = i.tooltip,\n      u = i.onClick,\n      l = i.onMouseEnter,\n      c = i.onMouseMove,\n      s = i.onMouseLeave,\n      h = E(),\n      f = h.showTooltipFromEvent,\n      v = h.hideTooltip,\n      m = n(function (i) {\n    return f(e(d, {\n      bar: t\n    }), i);\n  }, [f, d, t]),\n      g = n(function (i) {\n    null == u || u(t, i);\n  }, [u, t]),\n      p = n(function (i) {\n    null == l || l(t, i), m(i);\n  }, [m, t]),\n      y = n(function (i) {\n    null == c || c(t, i), m(i);\n  }, [m, t]),\n      b = n(function (i) {\n    null == s || s(t, i), v();\n  }, [s, t, v]);\n  return F(P.rect, {\n    x: r.x,\n    y: r.y,\n    width: I(r.width, function (i) {\n      return Math.max(i, 0);\n    }),\n    height: I(r.height, function (i) {\n      return Math.max(i, 0);\n    }),\n    fill: null != (o = t.fill) ? o : r.color,\n    stroke: r.borderColor,\n    strokeWidth: t.borderWidth,\n    onClick: a ? g : void 0,\n    onMouseEnter: a ? p : void 0,\n    onMouseMove: a ? y : void 0,\n    onMouseLeave: a ? b : void 0\n  });\n},\n    H = function (i) {\n  var n = i.bars,\n      e = i.isInteractive,\n      o = i.tooltip,\n      t = i.onClick,\n      r = i.onMouseEnter,\n      d = i.onMouseMove,\n      u = i.onMouseLeave,\n      l = a(),\n      c = l.animate,\n      s = l.config,\n      h = S(n, {\n    keys: function (i) {\n      return i.key;\n    },\n    initial: function (i) {\n      return {\n        x: i.x,\n        y: i.y,\n        width: i.width,\n        height: i.height,\n        color: i.color,\n        opacity: 1,\n        borderColor: i.borderColor\n      };\n    },\n    from: function (i) {\n      return {\n        x: i.x,\n        y: i.y,\n        width: i.width,\n        height: i.height,\n        color: i.color,\n        opacity: 0,\n        borderColor: i.borderColor\n      };\n    },\n    enter: function (i) {\n      return {\n        x: i.x,\n        y: i.y,\n        width: i.width,\n        height: i.height,\n        color: i.color,\n        opacity: 1,\n        borderColor: i.borderColor\n      };\n    },\n    update: function (i) {\n      return {\n        x: i.x,\n        y: i.y,\n        width: i.width,\n        height: i.height,\n        color: i.color,\n        opacity: 1,\n        borderColor: i.borderColor\n      };\n    },\n    leave: function (i) {\n      return {\n        opacity: 0,\n        x: i.x,\n        y: i.y,\n        width: i.width,\n        height: i.height,\n        color: i.color\n      };\n    },\n    config: s,\n    immediate: !c\n  });\n  return F(L, {\n    children: h(function (i, n) {\n      return F(Y, {\n        bar: n,\n        animatedProps: i,\n        isInteractive: e,\n        tooltip: o,\n        onClick: t,\n        onMouseEnter: r,\n        onMouseMove: d,\n        onMouseLeave: u\n      }, n.key);\n    })\n  });\n},\n    T = function (i) {\n  var n = i.bar;\n  return F(W, {\n    id: n.datum.id + \" - \" + n.id,\n    value: n.formattedValue,\n    enableChip: !0,\n    color: n.color\n  });\n},\n    D = [\"isInteractive\", \"animate\", \"motionConfig\"],\n    B = function (n) {\n  var t = n.data,\n      r = n.id,\n      a = n.value,\n      d = n.valueFormat,\n      s = n.dimensions,\n      m = n.width,\n      g = n.height,\n      p = n.margin,\n      y = n.layout,\n      b = void 0 === y ? V.layout : y,\n      x = n.offset,\n      M = void 0 === x ? V.offset : x,\n      w = n.outerPadding,\n      C = void 0 === w ? V.outerPadding : w,\n      k = n.innerPadding,\n      P = void 0 === k ? V.innerPadding : k,\n      I = n.layers,\n      S = void 0 === I ? V.layers : I,\n      E = n.axisTop,\n      W = n.axisRight,\n      L = n.axisBottom,\n      O = n.axisLeft,\n      j = n.enableGridX,\n      Y = void 0 === j ? V.enableGridX : j,\n      D = n.gridXValues,\n      B = n.enableGridY,\n      R = void 0 === B ? V.enableGridY : B,\n      q = n.gridYValues,\n      z = n.colors,\n      A = void 0 === z ? V.colors : z,\n      J = n.defs,\n      K = void 0 === J ? [] : J,\n      N = n.fill,\n      Q = void 0 === N ? [] : N,\n      U = n.borderWidth,\n      Z = void 0 === U ? V.borderWidth : U,\n      $ = n.borderColor,\n      _ = void 0 === $ ? V.borderColor : $,\n      ii = n.isInteractive,\n      ni = void 0 === ii ? V.isInteractive : ii,\n      ei = n.tooltip,\n      oi = void 0 === ei ? T : ei,\n      ti = n.onClick,\n      ri = n.onMouseEnter,\n      ai = n.onMouseMove,\n      di = n.onMouseLeave,\n      ui = n.legends,\n      li = void 0 === ui ? [] : ui,\n      ci = n.role,\n      si = u(m, g, p),\n      hi = si.outerWidth,\n      fi = si.outerHeight,\n      vi = si.margin,\n      mi = si.innerWidth,\n      gi = si.innerHeight,\n      pi = X({\n    data: t,\n    id: r,\n    value: a,\n    dimensions: s,\n    valueFormat: d,\n    layout: b,\n    offset: M,\n    outerPadding: C,\n    innerPadding: P,\n    colors: A,\n    borderColor: _,\n    borderWidth: Z,\n    width: mi,\n    height: gi\n  }),\n      yi = pi.computedData,\n      bi = pi.bars,\n      xi = pi.thicknessScale,\n      Mi = pi.dimensionsScale,\n      wi = pi.dimensionIds,\n      Ci = {\n    grid: null,\n    axes: null,\n    bars: null,\n    legends: null\n  },\n      ki = l(K, bi, Q);\n\n  S.includes(\"bars\") && (Ci.bars = F(H, {\n    bars: bi,\n    isInteractive: ni,\n    tooltip: oi,\n    onClick: ti,\n    onMouseEnter: ri,\n    onMouseMove: ai,\n    onMouseLeave: di\n  }, \"bars\"));\n  var Pi = \"vertical\" === b ? xi : Mi,\n      Ii = \"vertical\" === b ? Mi : xi;\n  S.includes(\"grid\") && (Ci.grid = F(h, {\n    xScale: Y ? Pi : void 0,\n    yScale: R ? Ii : void 0,\n    width: mi,\n    height: gi,\n    xValues: D,\n    yValues: q\n  }, \"grid\")), S.includes(\"axes\") && (Ci.axes = F(f, {\n    xScale: Pi,\n    yScale: Ii,\n    width: mi,\n    height: gi,\n    top: E,\n    right: W,\n    bottom: L,\n    left: O\n  }, \"axes\"));\n\n  var Si = function (i, n) {\n    var e = [];\n    return i.forEach(function (i) {\n      var o = n.find(function (n) {\n        return n.id === i;\n      });\n      o && e.push({\n        id: i,\n        label: i,\n        color: o.color,\n        fill: o.fill\n      });\n    }), e;\n  }(wi, bi);\n\n  S.includes(\"legends\") && (Ci.legends = F(\"g\", {\n    children: li.map(function (i, n) {\n      return F(v, G({}, i, {\n        containerWidth: mi,\n        containerHeight: gi,\n        data: Si\n      }), n);\n    })\n  }, \"legends\"));\n\n  var Ei = function (n) {\n    var e = n.data,\n        o = n.bars,\n        t = n.thicknessScale,\n        r = n.dimensionsScale;\n    return i(function () {\n      return {\n        data: e,\n        bars: o,\n        thicknessScale: t,\n        dimensionsScale: r\n      };\n    }, [e, o, t, r]);\n  }({\n    data: yi,\n    bars: bi,\n    thicknessScale: xi,\n    dimensionsScale: Mi\n  });\n\n  return F(c, {\n    width: hi,\n    height: fi,\n    margin: vi,\n    defs: ki,\n    role: ci,\n    children: S.map(function (i, n) {\n      return void 0 !== Ci[i] ? Ci[i] : \"function\" == typeof i ? F(o, {\n        children: e(i, Ei)\n      }, n) : null;\n    })\n  });\n},\n    R = function (i) {\n  var n = i.isInteractive,\n      e = void 0 === n ? V.isInteractive : n,\n      o = i.animate,\n      t = void 0 === o ? V.animate : o,\n      r = i.motionConfig,\n      a = void 0 === r ? V.motionConfig : r,\n      u = function (i, n) {\n    if (null == i) return {};\n    var e,\n        o,\n        t = {},\n        r = Object.keys(i);\n\n    for (o = 0; o < r.length; o++) e = r[o], n.indexOf(e) >= 0 || (t[e] = i[e]);\n\n    return t;\n  }(i, D);\n\n  return F(d, {\n    theme: u.theme,\n    isInteractive: e,\n    animate: t,\n    motionConfig: a,\n    children: F(B, G({\n      isInteractive: e,\n      animate: t,\n      motionConfig: a\n    }, u))\n  });\n},\n    q = function (i) {\n  return F(s, {\n    children: function (n) {\n      var e = n.width,\n          o = n.height;\n      return F(R, G({\n        width: e,\n        height: o\n      }, i));\n    }\n  });\n};\n\nexport { R as Marimekko, q as ResponsiveMarimekko, V as defaultProps, O as offsetById };","map":{"version":3,"mappings":"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","names":["defaultProps","layout","offset","outerPadding","innerPadding","layers","enableGridX","enableGridY","colors","scheme","borderWidth","borderColor","from","modifiers","isInteractive","animate","motionConfig","offsetById","expand","stackOffsetExpand","diverging","stackOffsetDiverging","none","stackOffsetNone","silouhette","stackOffsetSilhouette","wiggle","stackOffsetWiggle","useStack","dimensionIds","dimensions","useMemo","offsetFunction","d3Stack","keys","value","datum","key","useMarimekko","data","id","valueFormat","rawDimensions","width","height","forEach","push","dimension","_get","useDataDimensions","stack","stacked","allValues","min","Math","max","useStackedData","normalizedData","getId","getValue","normalized","index","datumId","datumValue","useNormalizedData","thicknessScale","totalValue","reduce","acc","scaleLinear","domain","totalPadding","length","range","useThicknessScale","dimensionsScale","useDimensionsScale","computedData","getColor","useOrdinalColorScale","formatValue","useValueFormatter","position","thickness","computedDatum","x","y","allPositions","totalSize","dimensionId","find","dimensionPoint","dimensionDatum","formattedValue","color","position0","position1","useComputedData","bars","theme","useTheme","getBorderColor","useInheritedColor","all","useBars","Bar","bar","animatedProps","tooltip","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","showTooltip","useCallback","event","createElement","handleClick","handleMouseEnter","handleMouseMove","handleMouseLeave","_jsx","animated","rect","to","fill","stroke","strokeWidth","undefined","Bars","useMotionConfig","springConfig","config","transition","useTransition","initial","opacity","enter","update","leave","immediate","style","BarTooltip","BasicTooltip","enableChip","InnerMarimekko","partialMargin","margin","axisTop","axisRight","axisBottom","axisLeft","gridXValues","gridYValues","defs","J","N","U","legends","ui","role","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","layerById","grid","axes","boundDefs","bindDefs","includes","xScale","yScale","Grid","xValues","yValues","Axes","top","right","bottom","left","legendData","label","useLegendData","map","legend","i","BoxLegendSvg","containerWidth","containerHeight","layerContext","useLayerContext","SvgWrapper","layer","Fragment","Marimekko","otherProps","Container","ResponsiveMarimekko","props","ResponsiveWrapper"],"sources":["E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\marimekko\\src\\props.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\marimekko\\src\\types.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\marimekko\\src\\hooks.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\marimekko\\src\\Bar.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\marimekko\\src\\Bars.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\marimekko\\src\\BarTooltip.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\marimekko\\src\\Marimekko.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\marimekko\\src\\ResponsiveMarimekko.tsx"],"sourcesContent":["import { LayerId, Layout, OffsetId } from './types'\n\nexport const defaultProps = {\n    layout: 'vertical' as Layout,\n    offset: 'none' as OffsetId,\n    outerPadding: 0,\n    innerPadding: 3,\n\n    layers: ['grid', 'axes', 'bars', 'legends'] as LayerId[],\n\n    enableGridX: false,\n    enableGridY: true,\n\n    colors: { scheme: 'nivo' },\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n","import * as React from 'react'\nimport {\n    stackOffsetDiverging,\n    stackOffsetExpand,\n    stackOffsetNone,\n    stackOffsetSilhouette,\n    stackOffsetWiggle,\n} from 'd3-shape'\nimport { ScaleLinear } from 'd3-scale'\nimport { Box, Dimensions, Theme, SvgDefsAndFill, ModernMotionProps, ValueFormat } from '@nivo/core'\nimport { AxisProps } from '@nivo/axes'\nimport { OrdinalColorScaleConfig, InheritedColorConfig } from '@nivo/colors'\nimport { LegendProps } from '@nivo/legends'\n\nexport type DatumId = string | number\nexport type DatumValue = number\nexport type DatumFormattedValue = string | number\n\nexport type DatumPropertyAccessor<RawDatum, T> = (datum: RawDatum) => T\n\nexport interface DataProps<RawDatum> {\n    data: RawDatum[]\n    id: string | number | DatumPropertyAccessor<RawDatum, DatumId>\n    value: string | number | DatumPropertyAccessor<RawDatum, DatumValue>\n    dimensions: {\n        id: string\n        value: string | number | DatumPropertyAccessor<RawDatum, DatumValue>\n    }[]\n    valueFormat?: ValueFormat<number>\n}\n\nexport interface NormalizedDatum<RawDatum> {\n    index: number\n    id: DatumId\n    value: DatumValue\n    data: RawDatum\n}\n\nexport interface DimensionDatum<RawDatum> {\n    id: string\n    value: number\n    formattedValue: string | number\n    color: string\n    x: number\n    y: number\n    width: number\n    height: number\n    datum: ComputedDatum<RawDatum>\n}\n\nexport interface ComputedDatum<RawDatum> extends NormalizedDatum<RawDatum> {\n    x: number\n    y: number\n    width: number\n    height: number\n    dimensions: DimensionDatum<RawDatum>[]\n}\n\nexport interface BarDatum<RawDatum> extends DimensionDatum<RawDatum> {\n    key: string\n    fill?: string\n    borderColor: string\n    borderWidth: number\n}\n\nexport type LabelAccessorFunction<RawDatum> = (datum: ComputedDatum<RawDatum>) => string | number\n\nexport type LayerId = 'grid' | 'axes' | 'bars' | 'legends'\n\nexport interface CustomLayerProps<RawDatum> {\n    data: ComputedDatum<RawDatum>[]\n    bars: BarDatum<RawDatum>[]\n    thicknessScale: ScaleLinear<number, number>\n    dimensionsScale: ScaleLinear<number, number>\n}\n\nexport type CustomLayer<RawDatum> = React.FC<CustomLayerProps<RawDatum>>\n\nexport type Layer<RawDatum> = LayerId | CustomLayer<RawDatum>\n\nexport interface TooltipProps<RawDatum> {\n    bar: BarDatum<RawDatum>\n}\n\nexport type BarTooltipType<RawDatum> = (props: TooltipProps<RawDatum>) => JSX.Element\n\nexport type Layout = 'horizontal' | 'vertical'\n\nexport const offsetById = {\n    // Applies a zero baseline and normalizes the values\n    // for each point such that the topline is always one.\n    expand: stackOffsetExpand,\n    // Positive values are stacked above zero, negative values\n    // are stacked below zero, and zero values are stacked at zero.\n    diverging: stackOffsetDiverging,\n    // Applies a zero baseline.\n    none: stackOffsetNone,\n    // Shifts the baseline down such that the center of the streamgraph\n    // is always at zero.\n    silouhette: stackOffsetSilhouette,\n    // Shifts the baseline so as to minimize the weighted wiggle of layers.\n    // This offset is recommended for streamgraphs in conjunction with the inside-out order.\n    // See Stacked Graphs—Geometry & Aesthetics by Bryon & Wattenberg for more information.\n    wiggle: stackOffsetWiggle,\n}\n\nexport type OffsetId = keyof typeof offsetById\n\nexport type CommonProps<RawDatum> = {\n    margin: Box\n    layout: Layout\n    offset: OffsetId\n    outerPadding: number\n    innerPadding: number\n\n    // axes and grid\n    axisTop?: AxisProps | null\n    axisRight?: AxisProps | null\n    axisBottom?: AxisProps | null\n    axisLeft?: AxisProps | null\n    enableGridX: boolean\n    gridXValues?: number[]\n    enableGridY: boolean\n    gridYValues?: number[]\n\n    // colors, theme and border\n    colors: OrdinalColorScaleConfig<Omit<DimensionDatum<RawDatum>, 'color' | 'fill'>>\n    theme: Theme\n    borderWidth: number\n    borderColor: InheritedColorConfig<DimensionDatum<RawDatum>>\n\n    // labels\n    enableLabels: boolean\n    label: string | LabelAccessorFunction<RawDatum>\n    labelSkipWidth: number\n    labelSkipHeight: number\n    labelTextColor: InheritedColorConfig<DimensionDatum<RawDatum>>\n\n    // interactivity\n    isInteractive: boolean\n    tooltip: BarTooltipType<RawDatum>\n\n    legends: LegendProps[]\n\n    role: string\n}\n\nexport type MouseEventHandler<RawDatum, ElementType> = (\n    datum: BarDatum<RawDatum>,\n    event: React.MouseEvent<ElementType>\n) => void\n\nexport type MouseEventHandlers<RawDatum, ElementType> = Partial<{\n    onClick: MouseEventHandler<RawDatum, ElementType>\n    onMouseEnter: MouseEventHandler<RawDatum, ElementType>\n    onMouseMove: MouseEventHandler<RawDatum, ElementType>\n    onMouseLeave: MouseEventHandler<RawDatum, ElementType>\n}>\n\nexport type SvgProps<RawDatum> = DataProps<RawDatum> &\n    Dimensions &\n    Partial<CommonProps<RawDatum>> &\n    ModernMotionProps &\n    SvgDefsAndFill<BarDatum<RawDatum>> &\n    MouseEventHandlers<RawDatum, SVGRectElement> & {\n        layers?: Layer<RawDatum>[]\n    }\n","import { useMemo } from 'react'\nimport { get } from 'lodash'\nimport { stack as d3Stack, Stack, Series } from 'd3-shape'\nimport { ScaleLinear, scaleLinear } from 'd3-scale'\nimport { useValueFormatter, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport {\n    NormalizedDatum,\n    ComputedDatum,\n    DataProps,\n    DatumPropertyAccessor,\n    Layout,\n    DimensionDatum,\n    CommonProps,\n    CustomLayerProps,\n    BarDatum,\n    OffsetId,\n    offsetById,\n} from './types'\n\n// d3 stack does not support defining `.keys()` using\n// a mix of keys and custom value accessors, so we're\n// building a map of accessors in any case, we're gonna\n// use it later for `stack.value()`.\nexport const useDataDimensions = <RawDatum>(rawDimensions: DataProps<RawDatum>['dimensions']) =>\n    useMemo(() => {\n        const dimensions: Record<string, (datum: RawDatum) => number> = {}\n        const dimensionIds: string[] = []\n        rawDimensions.forEach(dimension => {\n            dimensionIds.push(dimension.id)\n            dimensions[dimension.id] =\n                typeof dimension.value === 'function'\n                    ? dimension.value\n                    : (datum: RawDatum) => get(datum, dimension.value as string, 0)\n        })\n\n        return { dimensionIds, dimensions }\n    }, [rawDimensions])\n\nexport const useStack = <RawDatum>(\n    dimensionIds: string[],\n    dimensions: Record<string, (datum: RawDatum) => number>,\n    offset: OffsetId\n) =>\n    useMemo(() => {\n        const offsetFunction = offsetById[offset]\n\n        return d3Stack<RawDatum>()\n            .keys(dimensionIds)\n            .value((datum, key) => dimensions[key](datum))\n            .offset(offsetFunction)\n    }, [dimensionIds, dimensions, offset])\n\nexport const useStackedData = <RawDatum>(\n    stack: Stack<any, RawDatum, string>,\n    data: DataProps<RawDatum>['data']\n) =>\n    useMemo(() => {\n        const stacked = stack(data)\n\n        const allValues: number[] = []\n        stacked.forEach(dimension => {\n            dimension.forEach(datum => {\n                allValues.push(datum[0])\n                allValues.push(datum[1])\n            })\n        })\n\n        const min = Math.min(...allValues)\n        const max = Math.max(...allValues)\n\n        return {\n            stacked,\n            min,\n            max,\n        }\n    }, [stack, data])\n\nexport const useDimensionsScale = (\n    min: number,\n    max: number,\n    width: number,\n    height: number,\n    layout: Layout\n) =>\n    useMemo(() => {\n        if (layout === 'vertical') {\n            return scaleLinear().domain([max, min]).range([0, height])\n        }\n\n        return scaleLinear().domain([min, max]).range([0, width])\n    }, [min, max, width, height, layout])\n\nexport const useNormalizedData = <RawDatum>(\n    data: DataProps<RawDatum>['data'],\n    id: DataProps<RawDatum>['id'],\n    value: DataProps<RawDatum>['value']\n) => {\n    const getId: DatumPropertyAccessor<RawDatum, string | number> =\n        typeof id === 'function' ? id : (datum: RawDatum) => get(datum, id)\n    const getValue: DatumPropertyAccessor<RawDatum, number> =\n        typeof value === 'function' ? value : (datum: RawDatum) => get(datum, value, 0)\n\n    return useMemo(() => {\n        const normalized: NormalizedDatum<RawDatum>[] = []\n        data.forEach((datum, index) => {\n            const datumId = getId(datum)\n            const datumValue = getValue(datum)\n\n            normalized.push({\n                index,\n                id: datumId,\n                value: datumValue,\n                data: datum,\n            })\n        })\n\n        return normalized\n    }, [data, getId, getValue])\n}\n\nexport const useThicknessScale = <RawDatum>({\n    data,\n    width,\n    height,\n    layout,\n    outerPadding,\n    innerPadding,\n}: {\n    data: NormalizedDatum<RawDatum>[]\n    width: number\n    height: number\n    layout: Layout\n    outerPadding: number\n    innerPadding: number\n}) =>\n    useMemo(() => {\n        const totalValue = data.reduce((acc, datum) => acc + datum.value, 0)\n\n        const thicknessScale = scaleLinear().domain([0, totalValue])\n\n        const totalPadding = 2 * outerPadding + (data.length - 1) * innerPadding\n\n        if (layout === 'vertical') {\n            thicknessScale.range([0, width - totalPadding])\n        } else {\n            thicknessScale.range([0, height - totalPadding])\n        }\n\n        return thicknessScale\n    }, [data, width, height, layout])\n\nexport const useComputedData = <RawDatum>({\n    data,\n    stacked,\n    dimensionIds,\n    valueFormat,\n    thicknessScale,\n    dimensionsScale,\n    colors,\n    layout,\n    outerPadding,\n    innerPadding,\n}: {\n    data: NormalizedDatum<RawDatum>[]\n    stacked: Series<RawDatum, string>[]\n    dimensionIds: string[]\n    valueFormat: DataProps<RawDatum>['valueFormat']\n    thicknessScale: ScaleLinear<number, number>\n    dimensionsScale: ScaleLinear<number, number>\n    colors: CommonProps<RawDatum>['colors']\n    layout: Layout\n    outerPadding: number\n    innerPadding: number\n}) => {\n    const getColor = useOrdinalColorScale<Omit<DimensionDatum<RawDatum>, 'color'>>(colors, 'id')\n\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    return useMemo(() => {\n        const computedData: ComputedDatum<RawDatum>[] = []\n\n        let position = outerPadding\n\n        data.forEach(datum => {\n            const thickness = thicknessScale(datum.value)\n\n            const computedDatum: ComputedDatum<RawDatum> = {\n                ...datum,\n                x: layout === 'vertical' ? position : 0,\n                y: layout === 'vertical' ? 0 : position,\n                width: layout === 'vertical' ? thickness : 0,\n                height: layout === 'vertical' ? 0 : thickness,\n                dimensions: [],\n            }\n\n            const allPositions: number[] = []\n            let totalSize = 0\n\n            position += thickness + innerPadding\n\n            dimensionIds.forEach(dimensionId => {\n                const dimension = stacked.find(stack => stack.key === dimensionId)\n                if (dimension) {\n                    const dimensionPoint = dimension[datum.index]\n                    const dimensionDatum: DimensionDatum<RawDatum> = {\n                        id: dimensionId,\n                        datum: computedDatum,\n                        value: dimensionPoint[1] - dimensionPoint[0],\n                        formattedValue: formatValue(dimensionPoint[1] - dimensionPoint[0]),\n                        color: 'rgba(0, 0, 0, 0)',\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    }\n\n                    const position0 = dimensionsScale(dimensionPoint[0])\n                    const position1 = dimensionsScale(dimensionPoint[1])\n\n                    if (layout === 'vertical') {\n                        dimensionDatum.x = computedDatum.x\n                        dimensionDatum.y = Math.min(position0, position1)\n                        dimensionDatum.width = computedDatum.width\n                        dimensionDatum.height = Math.max(position0, position1) - dimensionDatum.y\n\n                        allPositions.push(dimensionDatum.y)\n                        totalSize += dimensionDatum.height\n                    } else {\n                        dimensionDatum.x = Math.min(position0, position1)\n                        dimensionDatum.y = computedDatum.y\n                        dimensionDatum.width = Math.max(position0, position1) - dimensionDatum.x\n                        dimensionDatum.height = computedDatum.height\n\n                        allPositions.push(dimensionDatum.x)\n                        totalSize += dimensionDatum.width\n                    }\n\n                    dimensionDatum.color = getColor(dimensionDatum)\n\n                    computedDatum.dimensions.push(dimensionDatum)\n                }\n\n                if (layout === 'vertical') {\n                    computedDatum.y = Math.min(...allPositions)\n                    computedDatum.height = totalSize\n                } else {\n                    computedDatum.x = Math.min(...allPositions)\n                    computedDatum.width = totalSize\n                }\n            })\n\n            computedData.push(computedDatum)\n        })\n\n        return computedData\n    }, [\n        data,\n        stacked,\n        dimensionIds,\n        thicknessScale,\n        dimensionsScale,\n        layout,\n        outerPadding,\n        innerPadding,\n        getColor,\n        formatValue,\n    ])\n}\n\nexport const useBars = <RawDatum>(\n    data: ComputedDatum<RawDatum>[],\n    borderColor: InheritedColorConfig<DimensionDatum<RawDatum>>,\n    borderWidth: number\n) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<DimensionDatum<RawDatum>>(borderColor, theme)\n\n    return useMemo(() => {\n        const all: BarDatum<RawDatum>[] = []\n        data.forEach(datum => {\n            datum.dimensions.forEach(dimension => {\n                all.push({\n                    key: `${datum.id}-${dimension.id}`,\n                    ...dimension,\n                    borderColor: getBorderColor(dimension),\n                    borderWidth,\n                })\n            })\n        })\n\n        return all\n    }, [data, borderWidth, getBorderColor])\n}\n\nexport const useMarimekko = <RawDatum>({\n    data,\n    id,\n    value,\n    valueFormat,\n    dimensions: rawDimensions,\n    layout,\n    offset,\n    outerPadding,\n    innerPadding,\n    colors,\n    borderColor,\n    borderWidth,\n    width,\n    height,\n}: {\n    data: DataProps<RawDatum>['data']\n    id: DataProps<RawDatum>['id']\n    value: DataProps<RawDatum>['value']\n    valueFormat: DataProps<RawDatum>['valueFormat']\n    dimensions: DataProps<RawDatum>['dimensions']\n    layout: Layout\n    offset: OffsetId\n    outerPadding: number\n    innerPadding: number\n    colors: CommonProps<RawDatum>['colors']\n    borderColor: InheritedColorConfig<DimensionDatum<RawDatum>>\n    borderWidth: number\n    width: number\n    height: number\n}) => {\n    const { dimensionIds, dimensions } = useDataDimensions<RawDatum>(rawDimensions)\n    const stack = useStack<RawDatum>(dimensionIds, dimensions, offset)\n    const { stacked, min, max } = useStackedData<RawDatum>(stack, data)\n    const normalizedData = useNormalizedData<RawDatum>(data, id, value)\n    const thicknessScale = useThicknessScale({\n        data: normalizedData,\n        width,\n        height,\n        layout,\n        outerPadding,\n        innerPadding,\n    })\n    const dimensionsScale = useDimensionsScale(min, max, width, height, layout)\n    const computedData = useComputedData<RawDatum>({\n        data: normalizedData,\n        stacked,\n        dimensionIds,\n        valueFormat,\n        thicknessScale,\n        dimensionsScale,\n        colors,\n        layout,\n        outerPadding,\n        innerPadding,\n    })\n    const bars = useBars<RawDatum>(computedData, borderColor, borderWidth)\n\n    return {\n        computedData,\n        bars,\n        thicknessScale,\n        dimensionsScale,\n        dimensionIds,\n    }\n}\n\nexport const useLayerContext = <RawDatum>({\n    data,\n    bars,\n    thicknessScale,\n    dimensionsScale,\n}: {\n    data: ComputedDatum<RawDatum>[]\n    bars: BarDatum<RawDatum>[]\n    thicknessScale: ScaleLinear<number, number>\n    dimensionsScale: ScaleLinear<number, number>\n}): CustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            data,\n            bars,\n            thicknessScale,\n            dimensionsScale,\n        }),\n        [data, bars, thicknessScale, dimensionsScale]\n    )\n\nexport const useLegendData = <RawDatum>(dimensionIds: string[], bars: BarDatum<RawDatum>[]) => {\n    const legendData: {\n        id: string\n        label: string\n        color: string\n        fill?: string\n    }[] = []\n\n    dimensionIds.forEach(dimensionId => {\n        const bar = bars.find(bar => bar.id === dimensionId)\n        if (bar) {\n            legendData.push({\n                id: dimensionId,\n                label: dimensionId,\n                color: bar.color,\n                fill: bar.fill,\n            })\n        }\n    })\n\n    return legendData\n}\n","import { createElement, MouseEvent, useCallback } from 'react'\nimport { animated, SpringValues, to } from '@react-spring/web'\nimport { useTooltip } from '@nivo/tooltip'\nimport { BarDatum, CommonProps, MouseEventHandlers } from './types'\n\ninterface BarProps<RawDatum> extends MouseEventHandlers<RawDatum, SVGRectElement> {\n    bar: BarDatum<RawDatum>\n    animatedProps: SpringValues<{\n        x: number\n        y: number\n        width: number\n        height: number\n        opacity: number\n        color: string\n        borderColor: string\n    }>\n    isInteractive: boolean\n    tooltip: CommonProps<RawDatum>['tooltip']\n}\n\nexport const Bar = <RawDatum,>({\n    bar,\n    animatedProps,\n    isInteractive,\n    tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: BarProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        event => showTooltipFromEvent(createElement(tooltip, { bar }), event),\n        [showTooltipFromEvent, tooltip, bar]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onClick?.(bar, event)\n        },\n        [onClick, bar]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseEnter?.(bar, event)\n            showTooltip(event)\n        },\n        [showTooltip, bar]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseMove?.(bar, event)\n            showTooltip(event)\n        },\n        [showTooltip, bar]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent<SVGRectElement>) => {\n            onMouseLeave?.(bar, event)\n            hideTooltip()\n        },\n        [onMouseLeave, bar, hideTooltip]\n    )\n\n    return (\n        <animated.rect\n            x={animatedProps.x}\n            y={animatedProps.y}\n            width={to(animatedProps.width, value => Math.max(value, 0))}\n            height={to(animatedProps.height, value => Math.max(value, 0))}\n            fill={bar.fill ?? animatedProps.color}\n            stroke={animatedProps.borderColor}\n            strokeWidth={bar.borderWidth}\n            onClick={isInteractive ? handleClick : undefined}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { BarDatum, CommonProps, MouseEventHandlers } from './types'\nimport { Bar } from './Bar'\n\ninterface BarsProps<RawDatum> extends MouseEventHandlers<RawDatum, SVGRectElement> {\n    isInteractive: boolean\n    bars: BarDatum<RawDatum>[]\n    tooltip: CommonProps<RawDatum>['tooltip']\n}\n\nexport const Bars = <RawDatum,>({\n    bars,\n    isInteractive,\n    tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: BarsProps<RawDatum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<\n        BarDatum<RawDatum>,\n        {\n            x: number\n            y: number\n            width: number\n            height: number\n            color: string\n            opacity: number\n            borderColor: string\n        }\n    >(bars, {\n        keys: bar => bar.key,\n        initial: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 1,\n            borderColor: bar.borderColor,\n        }),\n        from: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 0,\n            borderColor: bar.borderColor,\n        }),\n        enter: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 1,\n            borderColor: bar.borderColor,\n        }),\n        update: bar => ({\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n            opacity: 1,\n            borderColor: bar.borderColor,\n        }),\n        leave: bar => ({\n            opacity: 0,\n            x: bar.x,\n            y: bar.y,\n            width: bar.width,\n            height: bar.height,\n            color: bar.color,\n        }),\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((style, bar) => (\n                <Bar<RawDatum>\n                    key={bar.key}\n                    bar={bar}\n                    animatedProps={style}\n                    isInteractive={isInteractive}\n                    tooltip={tooltip}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseMove={onMouseMove}\n                    onMouseLeave={onMouseLeave}\n                />\n            ))}\n        </>\n    )\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { BarDatum } from './types'\n\nexport const BarTooltip = <RawDatum,>({ bar }: { bar: BarDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={`${bar.datum.id} - ${bar.id}`}\n        value={bar.formattedValue}\n        enableChip={true}\n        color={bar.color}\n    />\n)\n","import { createElement, Fragment, ReactNode } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    Container,\n    SvgWrapper,\n    useDimensions,\n} from '@nivo/core'\nimport { Grid, Axes } from '@nivo/axes'\nimport { InheritedColorConfig, OrdinalColorScaleConfig } from '@nivo/colors'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { SvgProps, LayerId, DimensionDatum } from './types'\nimport { defaultProps } from './props'\nimport { useMarimekko, useLayerContext, useLegendData } from './hooks'\nimport { Bars } from './Bars'\nimport { BarTooltip } from './BarTooltip'\n\nconst InnerMarimekko = <RawDatum,>({\n    data,\n    id,\n    value,\n    valueFormat,\n    dimensions,\n    width,\n    height,\n    margin: partialMargin,\n    layout = defaultProps.layout,\n    offset = defaultProps.offset,\n    outerPadding = defaultProps.outerPadding,\n    innerPadding = defaultProps.innerPadding,\n    layers = defaultProps.layers,\n    axisTop,\n    axisRight,\n    axisBottom,\n    axisLeft,\n    enableGridX = defaultProps.enableGridX,\n    gridXValues,\n    enableGridY = defaultProps.enableGridY,\n    gridYValues,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<DimensionDatum<RawDatum>, 'color'>\n    >,\n    defs = [],\n    fill = [],\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<DimensionDatum<RawDatum>>,\n    isInteractive = defaultProps.isInteractive,\n    tooltip = BarTooltip,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    legends = [],\n    role,\n}: SvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { computedData, bars, thicknessScale, dimensionsScale, dimensionIds } =\n        useMarimekko<RawDatum>({\n            data,\n            id,\n            value,\n            dimensions,\n            valueFormat,\n            layout,\n            offset,\n            outerPadding,\n            innerPadding,\n            colors,\n            borderColor,\n            borderWidth,\n            width: innerWidth,\n            height: innerHeight,\n        })\n\n    const layerById: Record<LayerId, ReactNode> = {\n        grid: null,\n        axes: null,\n        bars: null,\n        legends: null,\n    }\n\n    const boundDefs = bindDefs(defs, bars, fill)\n\n    if (layers.includes('bars')) {\n        layerById.bars = (\n            <Bars<RawDatum>\n                key=\"bars\"\n                bars={bars}\n                isInteractive={isInteractive}\n                tooltip={tooltip}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n            />\n        )\n    }\n\n    const xScale = layout === 'vertical' ? thicknessScale : dimensionsScale\n    const yScale = layout === 'vertical' ? dimensionsScale : thicknessScale\n\n    if (layers.includes('grid')) {\n        layerById.grid = (\n            <Grid\n                key=\"grid\"\n                xScale={enableGridX ? (xScale as any) : undefined}\n                yScale={enableGridY ? (yScale as any) : undefined}\n                width={innerWidth}\n                height={innerHeight}\n                xValues={gridXValues}\n                yValues={gridYValues}\n            />\n        )\n    }\n\n    if (layers.includes('axes')) {\n        layerById.axes = (\n            <Axes\n                key=\"axes\"\n                xScale={xScale as any}\n                yScale={yScale as any}\n                width={innerWidth}\n                height={innerHeight}\n                top={axisTop}\n                right={axisRight}\n                bottom={axisBottom}\n                left={axisLeft}\n            />\n        )\n    }\n\n    const legendData = useLegendData<RawDatum>(dimensionIds, bars)\n\n    if (layers.includes('legends')) {\n        layerById.legends = (\n            <g key=\"legends\">\n                {legends.map((legend, i) => (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={innerWidth}\n                        containerHeight={innerHeight}\n                        data={legendData}\n                    />\n                ))}\n            </g>\n        )\n    }\n\n    const layerContext = useLayerContext<RawDatum>({\n        data: computedData,\n        bars,\n        thicknessScale,\n        dimensionsScale,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as LayerId] !== undefined) {\n                    return layerById[layer as LayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Marimekko = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    ...otherProps\n}: SvgProps<RawDatum>) => (\n    <Container\n        theme={otherProps.theme}\n        isInteractive={isInteractive}\n        animate={animate}\n        motionConfig={motionConfig}\n    >\n        <InnerMarimekko<RawDatum>\n            isInteractive={isInteractive}\n            animate={animate}\n            motionConfig={motionConfig}\n            {...otherProps}\n        />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Marimekko } from './Marimekko'\nimport { SvgProps } from './types'\n\nexport const ResponsiveMarimekko = <RawDatum,>(\n    props: Omit<SvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Marimekko<RawDatum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"]},"metadata":{},"sourceType":"module"}