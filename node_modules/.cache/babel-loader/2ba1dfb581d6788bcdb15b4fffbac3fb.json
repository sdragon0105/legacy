{"ast":null,"code":"import { animated as t, to as n, useTransition as e, useSpring as r } from \"@react-spring/web\";\nimport { useTheme as i, radiansToDegrees as a, positionFromAngle as o, degreesToRadians as u, midAngle as l, useMotionConfig as s, usePropertyAccessor as d, textPropsByEngine as f, getDistance as c, getAngle as g } from \"@nivo/core\";\nimport { jsx as p, jsxs as h } from \"react/jsx-runtime\";\nimport { useMemo as v, createElement as A, useCallback as x } from \"react\";\nimport { useInheritedColor as R } from \"@nivo/colors\";\nimport { line as m, arc as y } from \"d3-shape\";\n\nfunction M() {\n  return M = Object.assign || function (t) {\n    for (var n = 1; n < arguments.length; n++) {\n      var e = arguments[n];\n\n      for (var r in e) {\n        Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n      }\n    }\n\n    return t;\n  }, M.apply(this, arguments);\n}\n\nvar k = {\n  pointerEvents: \"none\"\n},\n    C = function C(n) {\n  var e = n.label,\n      r = n.style,\n      a = i();\n  return p(t.g, {\n    transform: r.transform,\n    opacity: r.progress,\n    style: k,\n    children: p(t.text, {\n      textAnchor: \"middle\",\n      dominantBaseline: \"central\",\n      style: M({}, a.labels.text, {\n        fill: r.textColor\n      }),\n      children: e\n    })\n  });\n},\n    b = function b(t) {\n  var n = t % (2 * Math.PI);\n  return n < 0 && (n += 2 * Math.PI), n;\n},\n    L = function L(t, n) {\n  return t.filter(function (t) {\n    return Math.abs(a(t.arc.endAngle - t.arc.startAngle)) >= n;\n  });\n},\n    P = function P(t, n, e, r, i) {\n  return [\"A\", t, t, 0, n, e, r, i].join(\" \");\n},\n    O = [\"startAngle\", \"middleAngle\", \"endAngle\", \"innerRadius\", \"centerRadius\", \"outerRadius\", \"pushIn\", \"pushOut\"],\n    E = {\n  startAngle: {\n    enter: function enter(t) {\n      return M({}, t, {\n        endAngle: t.startAngle\n      });\n    },\n    update: function update(t) {\n      return t;\n    },\n    leave: function leave(t) {\n      return M({}, t, {\n        startAngle: t.endAngle\n      });\n    }\n  },\n  middleAngle: {\n    enter: function enter(t) {\n      var n = t.startAngle + (t.endAngle - t.startAngle) / 2;\n      return M({}, t, {\n        startAngle: n,\n        endAngle: n\n      });\n    },\n    update: function update(t) {\n      return t;\n    },\n    leave: function leave(t) {\n      var n = t.startAngle + (t.endAngle - t.startAngle) / 2;\n      return M({}, t, {\n        startAngle: n,\n        endAngle: n\n      });\n    }\n  },\n  endAngle: {\n    enter: function enter(t) {\n      return M({}, t, {\n        startAngle: t.endAngle\n      });\n    },\n    update: function update(t) {\n      return t;\n    },\n    leave: function leave(t) {\n      return M({}, t, {\n        endAngle: t.startAngle\n      });\n    }\n  },\n  innerRadius: {\n    enter: function enter(t) {\n      return M({}, t, {\n        outerRadius: t.innerRadius\n      });\n    },\n    update: function update(t) {\n      return t;\n    },\n    leave: function leave(t) {\n      return M({}, t, {\n        innerRadius: t.outerRadius\n      });\n    }\n  },\n  centerRadius: {\n    enter: function enter(t) {\n      var n = t.innerRadius + (t.outerRadius - t.innerRadius) / 2;\n      return M({}, t, {\n        innerRadius: n,\n        outerRadius: n\n      });\n    },\n    update: function update(t) {\n      return t;\n    },\n    leave: function leave(t) {\n      var n = t.innerRadius + (t.outerRadius - t.innerRadius) / 2;\n      return M({}, t, {\n        innerRadius: n,\n        outerRadius: n\n      });\n    }\n  },\n  outerRadius: {\n    enter: function enter(t) {\n      return M({}, t, {\n        innerRadius: t.outerRadius\n      });\n    },\n    update: function update(t) {\n      return t;\n    },\n    leave: function leave(t) {\n      return M({}, t, {\n        outerRadius: t.innerRadius\n      });\n    }\n  },\n  pushIn: {\n    enter: function enter(t) {\n      return M({}, t, {\n        innerRadius: t.innerRadius - t.outerRadius + t.innerRadius,\n        outerRadius: t.innerRadius\n      });\n    },\n    update: function update(t) {\n      return t;\n    },\n    leave: function leave(t) {\n      return M({}, t, {\n        innerRadius: t.outerRadius,\n        outerRadius: t.outerRadius + t.outerRadius - t.innerRadius\n      });\n    }\n  },\n  pushOut: {\n    enter: function enter(t) {\n      return M({}, t, {\n        innerRadius: t.outerRadius,\n        outerRadius: t.outerRadius + t.outerRadius - t.innerRadius\n      });\n    },\n    update: function update(t) {\n      return t;\n    },\n    leave: function leave(t) {\n      return M({}, t, {\n        innerRadius: t.innerRadius - t.outerRadius + t.innerRadius,\n        outerRadius: t.innerRadius\n      });\n    }\n  }\n},\n    I = function I(t, n) {\n  return v(function () {\n    var e = E[t];\n    return {\n      enter: function enter(t) {\n        return M({\n          progress: 0\n        }, e.enter(t.arc), n ? n.enter(t) : {});\n      },\n      update: function update(t) {\n        return M({\n          progress: 1\n        }, e.update(t.arc), n ? n.update(t) : {});\n      },\n      leave: function leave(t) {\n        return M({\n          progress: 0\n        }, e.leave(t.arc), n ? n.leave(t) : {});\n      }\n    };\n  }, [t, n]);\n},\n    T = function T(t, n) {\n  var e = l(t) - Math.PI / 2,\n      r = t.innerRadius + (t.outerRadius - t.innerRadius) * n;\n  return o(e, r);\n},\n    j = function j(t) {\n  return function (e, r, i, a) {\n    return n([e, r, i, a], function (n, e, r, i) {\n      var a = T({\n        startAngle: n,\n        endAngle: e,\n        innerRadius: r,\n        outerRadius: i\n      }, t);\n      return \"translate(\" + a.x + \",\" + a.y + \")\";\n    });\n  };\n},\n    W = function W(t, n, r, i) {\n  void 0 === n && (n = .5), void 0 === r && (r = \"innerRadius\");\n  var a = s(),\n      o = a.animate,\n      u = a.config,\n      l = I(r, i);\n  return {\n    transition: e(t, {\n      keys: function keys(t) {\n        return t.id;\n      },\n      initial: l.update,\n      from: l.enter,\n      enter: l.update,\n      update: l.update,\n      leave: l.leave,\n      config: u,\n      immediate: !o\n    }),\n    interpolate: j(n)\n  };\n},\n    S = function S(t) {\n  var n = t.data,\n      e = t.offset,\n      r = void 0 === e ? .5 : e,\n      i = t.skipAngle,\n      a = void 0 === i ? 0 : i,\n      o = t.computeExtraProps,\n      u = void 0 === o ? function () {\n    return {};\n  } : o;\n  return v(function () {\n    return L(n, a).map(function (t) {\n      var n = T(t.arc, r);\n      return M({}, u(t), {\n        x: n.x,\n        y: n.y,\n        data: t\n      });\n    });\n  }, [n, r, a, u]);\n},\n    B = function B(t) {\n  var n = t.center,\n      e = t.data,\n      r = t.transitionMode,\n      o = t.label,\n      u = t.radiusOffset,\n      l = t.skipAngle,\n      s = t.textColor,\n      f = t.component,\n      c = void 0 === f ? C : f,\n      g = d(o),\n      h = i(),\n      x = R(s, h),\n      m = v(function () {\n    return e.filter(function (t) {\n      return Math.abs(a(t.arc.endAngle - t.arc.startAngle)) >= l;\n    });\n  }, [e, l]),\n      y = W(m, u, r),\n      k = y.transition,\n      b = y.interpolate,\n      L = c;\n  return p(\"g\", {\n    transform: \"translate(\" + n[0] + \",\" + n[1] + \")\",\n    children: k(function (t, n) {\n      return A(L, {\n        key: n.id,\n        datum: n,\n        label: g(n),\n        style: M({}, t, {\n          transform: b(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius),\n          textColor: x(n)\n        })\n      });\n    })\n  });\n},\n    w = function w(t, n, e) {\n  t.textAlign = \"center\", t.textBaseline = \"middle\", t.font = e.labels.text.fontSize + \"px \" + e.labels.text.fontFamily, n.forEach(function (n) {\n    t.fillStyle = n.textColor, t.fillText(\"\" + n.label, n.x, n.y);\n  });\n},\n    z = function z(t) {\n  var n = t.data,\n      e = t.offset,\n      r = t.skipAngle,\n      a = t.label,\n      o = t.textColor,\n      u = d(a),\n      l = i(),\n      s = R(o, l),\n      f = x(function (t) {\n    return {\n      label: u(t),\n      textColor: s(t)\n    };\n  }, [u, s]);\n  return S({\n    data: n,\n    offset: e,\n    skipAngle: r,\n    computeExtraProps: f\n  });\n},\n    F = C,\n    G = function G(n) {\n  var e = n.label,\n      r = n.style,\n      a = i();\n  return h(t.g, {\n    opacity: r.opacity,\n    children: [p(t.path, {\n      fill: \"none\",\n      stroke: r.linkColor,\n      strokeWidth: r.thickness,\n      d: r.path\n    }), p(t.text, {\n      transform: r.textPosition,\n      textAnchor: r.textAnchor,\n      dominantBaseline: \"central\",\n      style: M({}, a.labels.text, {\n        fill: r.textColor\n      }),\n      children: e\n    })]\n  });\n},\n    q = function q(t) {\n  var n = b(t.startAngle + (t.endAngle - t.startAngle) / 2 - Math.PI / 2);\n  return n < Math.PI / 2 || n > 1.5 * Math.PI ? \"start\" : \"end\";\n},\n    D = function D(t, n, e, r) {\n  var i,\n      a,\n      u = b(t.startAngle + (t.endAngle - t.startAngle) / 2 - Math.PI / 2),\n      l = o(u, t.outerRadius + n),\n      s = o(u, t.outerRadius + n + e);\n  return u < Math.PI / 2 || u > 1.5 * Math.PI ? (i = \"after\", a = {\n    x: s.x + r,\n    y: s.y\n  }) : (i = \"before\", a = {\n    x: s.x - r,\n    y: s.y\n  }), {\n    side: i,\n    points: [l, s, a]\n  };\n},\n    H = m().x(function (t) {\n  return t.x;\n}).y(function (t) {\n  return t.y;\n}),\n    J = function J(t, e, r, i, a, o, u) {\n  return n([t, e, r, i, a, o, u], function (t, n, e, r, i, a, o) {\n    var u = D({\n      startAngle: t,\n      endAngle: n,\n      innerRadius: e,\n      outerRadius: r\n    }, i, a, o).points;\n    return H(u);\n  });\n},\n    K = function K(t, e, r, i) {\n  return n([t, e, r, i], function (t, n, e, r) {\n    return q({\n      startAngle: t,\n      endAngle: n,\n      innerRadius: e,\n      outerRadius: r\n    });\n  });\n},\n    N = function N(t, e, r, i, a, o, u, l) {\n  return n([t, e, r, i, a, o, u, l], function (t, n, e, r, i, a, o, u) {\n    var l = D({\n      startAngle: t,\n      endAngle: n,\n      innerRadius: e,\n      outerRadius: r\n    }, i, a, o),\n        s = l.points,\n        d = l.side,\n        f = s[2];\n    return \"before\" === d ? f.x -= u : f.x += u, \"translate(\" + f.x + \",\" + f.y + \")\";\n  });\n},\n    Q = function Q(t) {\n  var n = t.data,\n      r = t.offset,\n      a = void 0 === r ? 0 : r,\n      o = t.diagonalLength,\n      u = t.straightLength,\n      l = t.skipAngle,\n      d = void 0 === l ? 0 : l,\n      f = t.textOffset,\n      c = t.linkColor,\n      g = t.textColor,\n      p = s(),\n      h = p.animate,\n      A = p.config,\n      x = i(),\n      m = R(c, x),\n      y = R(g, x),\n      M = function (t, n) {\n    return v(function () {\n      return L(t, n);\n    }, [t, n]);\n  }(n, d),\n      k = function (t) {\n    var n = t.offset,\n        e = t.diagonalLength,\n        r = t.straightLength,\n        i = t.textOffset,\n        a = t.getLinkColor,\n        o = t.getTextColor;\n    return v(function () {\n      return {\n        enter: function enter(t) {\n          return {\n            startAngle: t.arc.startAngle,\n            endAngle: t.arc.endAngle,\n            innerRadius: t.arc.innerRadius,\n            outerRadius: t.arc.outerRadius,\n            offset: n,\n            diagonalLength: 0,\n            straightLength: 0,\n            textOffset: i,\n            linkColor: a(t),\n            textColor: o(t),\n            opacity: 0\n          };\n        },\n        update: function update(t) {\n          return {\n            startAngle: t.arc.startAngle,\n            endAngle: t.arc.endAngle,\n            innerRadius: t.arc.innerRadius,\n            outerRadius: t.arc.outerRadius,\n            offset: n,\n            diagonalLength: e,\n            straightLength: r,\n            textOffset: i,\n            linkColor: a(t),\n            textColor: o(t),\n            opacity: 1\n          };\n        },\n        leave: function leave(t) {\n          return {\n            startAngle: t.arc.startAngle,\n            endAngle: t.arc.endAngle,\n            innerRadius: t.arc.innerRadius,\n            outerRadius: t.arc.outerRadius,\n            offset: n,\n            diagonalLength: 0,\n            straightLength: 0,\n            textOffset: i,\n            linkColor: a(t),\n            textColor: o(t),\n            opacity: 0\n          };\n        }\n      };\n    }, [e, r, i, a, o]);\n  }({\n    offset: a,\n    diagonalLength: o,\n    straightLength: u,\n    textOffset: f,\n    getLinkColor: m,\n    getTextColor: y\n  });\n\n  return {\n    transition: e(M, {\n      keys: function keys(t) {\n        return t.id;\n      },\n      initial: k.update,\n      from: k.enter,\n      enter: k.update,\n      update: k.update,\n      leave: k.leave,\n      config: A,\n      immediate: !h\n    }),\n    interpolateLink: J,\n    interpolateTextAnchor: K,\n    interpolateTextPosition: N\n  };\n},\n    U = function U(t) {\n  var n = t.center,\n      e = t.data,\n      r = t.label,\n      i = t.skipAngle,\n      a = t.offset,\n      o = t.diagonalLength,\n      u = t.straightLength,\n      l = t.strokeWidth,\n      s = t.textOffset,\n      f = t.textColor,\n      c = t.linkColor,\n      g = t.component,\n      h = void 0 === g ? G : g,\n      v = d(r),\n      x = Q({\n    data: e,\n    skipAngle: i,\n    offset: a,\n    diagonalLength: o,\n    straightLength: u,\n    textOffset: s,\n    linkColor: c,\n    textColor: f\n  }),\n      R = x.transition,\n      m = x.interpolateLink,\n      y = x.interpolateTextAnchor,\n      k = x.interpolateTextPosition,\n      C = h;\n  return p(\"g\", {\n    transform: \"translate(\" + n[0] + \",\" + n[1] + \")\",\n    children: R(function (t, n) {\n      return A(C, {\n        key: n.id,\n        datum: n,\n        label: v(n),\n        style: M({}, t, {\n          thickness: l,\n          path: m(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius, t.offset, t.diagonalLength, t.straightLength),\n          textAnchor: y(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius),\n          textPosition: k(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius, t.offset, t.diagonalLength, t.straightLength, t.textOffset)\n        })\n      });\n    })\n  });\n},\n    V = function V(t, n, e, r) {\n  t.textBaseline = \"middle\", t.font = e.labels.text.fontSize + \"px \" + e.labels.text.fontFamily, n.forEach(function (n) {\n    t.fillStyle = n.textColor, t.textAlign = f.canvas.align[n.textAnchor], t.fillText(\"\" + n.label, n.x, n.y), t.beginPath(), t.strokeStyle = n.linkColor, t.lineWidth = r, n.points.forEach(function (n, e) {\n      0 === e ? t.moveTo(n.x, n.y) : t.lineTo(n.x, n.y);\n    }), t.stroke();\n  });\n},\n    X = function X(t) {\n  var n = t.data,\n      e = t.skipAngle,\n      r = void 0 === e ? 0 : e,\n      i = t.offset,\n      o = void 0 === i ? .5 : i,\n      u = t.diagonalLength,\n      l = t.straightLength,\n      s = t.computeExtraProps,\n      d = void 0 === s ? function () {\n    return {};\n  } : s,\n      f = v(function () {\n    return n.filter(function (t) {\n      return Math.abs(a(t.arc.endAngle - t.arc.startAngle)) >= r;\n    }).map(function (t) {\n      return M({}, D(t.arc, o, u, l), {\n        data: t\n      });\n    });\n  }, [n, r, o, u, l]);\n  return v(function () {\n    return f.map(function (t) {\n      return M({}, d(t), t);\n    });\n  }, [f, d]);\n},\n    Y = function Y(t) {\n  var n = t.data,\n      e = t.skipAngle,\n      r = t.offset,\n      a = t.diagonalLength,\n      o = t.straightLength,\n      u = t.textOffset,\n      l = void 0 === u ? 0 : u,\n      s = t.label,\n      f = t.linkColor,\n      c = t.textColor,\n      g = d(s),\n      p = i(),\n      h = R(f, p),\n      v = R(c, p),\n      A = x(function (t) {\n    var n,\n        e = {\n      x: t.points[2].x,\n      y: t.points[2].y\n    };\n    return \"before\" === t.side ? (e.x -= l, n = \"end\") : (e.x += l, n = \"start\"), M({}, e, {\n      label: g(t.data),\n      linkColor: h(t.data),\n      textAnchor: n,\n      textColor: v(t.data)\n    });\n  }, [g, h, v, l]);\n  return X({\n    data: n,\n    skipAngle: e,\n    offset: r,\n    diagonalLength: a,\n    straightLength: o,\n    computeExtraProps: A\n  });\n},\n    Z = G,\n    $ = [\"animated\"],\n    _ = function _(e) {\n  var r = e.animated,\n      i = function (t, n) {\n    if (null == t) return {};\n    var e,\n        r,\n        i = {},\n        a = Object.keys(t);\n\n    for (r = 0; r < a.length; r++) {\n      e = a[r], n.indexOf(e) >= 0 || (i[e] = t[e]);\n    }\n\n    return i;\n  }(e, $);\n\n  return p(t.path, M({\n    d: n([r.radius, r.startAngle, r.endAngle], function (t, n, e) {\n      return function (t, n, e) {\n        var r = Math.min(n, e),\n            i = Math.max(n, e),\n            a = o(u(i), t),\n            l = o(u(r), t);\n\n        if (i - r >= 360) {\n          var s = o(u(r + 180), t);\n          return [\"M \" + a.x + \" \" + a.y, P(t, 1, 1, s.x, s.y), \"M \" + a.x + \" \" + a.y, P(t, 1, 0, s.x, s.y)].join(\" \");\n        }\n\n        var d = i - r <= 180 ? 0 : 1;\n        return [\"M \" + a.x + \" \" + a.y, P(t, d, 0, l.x, l.y)].join(\" \");\n      }(t, n, e);\n    })\n  }, i));\n},\n    tt = function tt(n) {\n  var e = n.datum,\n      r = n.style,\n      i = n.onClick,\n      a = n.onMouseEnter,\n      o = n.onMouseMove,\n      u = n.onMouseLeave,\n      l = x(function (t) {\n    return null == i ? void 0 : i(e, t);\n  }, [i, e]),\n      s = x(function (t) {\n    return null == a ? void 0 : a(e, t);\n  }, [a, e]),\n      d = x(function (t) {\n    return null == o ? void 0 : o(e, t);\n  }, [o, e]),\n      f = x(function (t) {\n    return null == u ? void 0 : u(e, t);\n  }, [u, e]);\n  return p(t.path, {\n    d: r.path,\n    opacity: r.opacity,\n    fill: e.fill || r.color,\n    stroke: r.borderColor,\n    strokeWidth: r.borderWidth,\n    onClick: i ? l : void 0,\n    onMouseEnter: a ? s : void 0,\n    onMouseMove: o ? d : void 0,\n    onMouseLeave: u ? f : void 0\n  });\n},\n    nt = function nt(t, e, r, i, a) {\n  return n([t, e, r, i], function (t, n, e, r) {\n    return a({\n      startAngle: t,\n      endAngle: n,\n      innerRadius: Math.max(0, e),\n      outerRadius: Math.max(0, r)\n    });\n  });\n},\n    et = function et(t, n, r) {\n  void 0 === n && (n = \"innerRadius\");\n  var i = s(),\n      a = i.animate,\n      o = i.config,\n      u = I(n, r);\n  return {\n    transition: e(t, {\n      keys: function keys(t) {\n        return t.id;\n      },\n      initial: u.update,\n      from: u.enter,\n      enter: u.update,\n      update: u.update,\n      leave: u.leave,\n      config: o,\n      immediate: !a\n    }),\n    interpolate: nt\n  };\n},\n    rt = function rt(t) {\n  var n = t.center,\n      e = t.data,\n      r = t.arcGenerator,\n      a = t.borderWidth,\n      o = t.borderColor,\n      u = t.onClick,\n      l = t.onMouseEnter,\n      s = t.onMouseMove,\n      d = t.onMouseLeave,\n      f = t.transitionMode,\n      c = t.component,\n      g = void 0 === c ? tt : c,\n      h = i(),\n      v = R(o, h),\n      x = et(e, f, {\n    enter: function enter(t) {\n      return {\n        opacity: 0,\n        color: t.color,\n        borderColor: v(t)\n      };\n    },\n    update: function update(t) {\n      return {\n        opacity: 1,\n        color: t.color,\n        borderColor: v(t)\n      };\n    },\n    leave: function leave(t) {\n      return {\n        opacity: 0,\n        color: t.color,\n        borderColor: v(t)\n      };\n    }\n  }),\n      m = x.transition,\n      y = x.interpolate,\n      k = g;\n  return p(\"g\", {\n    transform: \"translate(\" + n[0] + \",\" + n[1] + \")\",\n    children: m(function (t, n) {\n      return A(k, {\n        key: n.id,\n        datum: n,\n        style: M({}, t, {\n          borderWidth: a,\n          path: y(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius, r)\n        }),\n        onClick: u,\n        onMouseEnter: l,\n        onMouseMove: s,\n        onMouseLeave: d\n      });\n    })\n  });\n},\n    it = function it(t, n, e, r, i, a) {\n  void 0 === a && (a = !0);\n  var l = [],\n      s = o(u(r), e);\n  l.push([s.x, s.y]);\n  var d = o(u(i), e);\n  l.push([d.x, d.y]);\n\n  for (var f = Math.round(Math.min(r, i)); f <= Math.round(Math.max(r, i)); f++) {\n    if (f % 90 == 0) {\n      var c = o(u(f), e);\n      l.push([c.x, c.y]);\n    }\n  }\n\n  l = l.map(function (e) {\n    var r = e[0],\n        i = e[1];\n    return [t + r, n + i];\n  }), a && l.push([t, n]);\n  var g = l.map(function (t) {\n    return t[0];\n  }),\n      p = l.map(function (t) {\n    return t[1];\n  }),\n      h = Math.min.apply(Math, g),\n      v = Math.max.apply(Math, g),\n      A = Math.min.apply(Math, p);\n  return {\n    points: l,\n    x: h,\n    y: A,\n    width: v - h,\n    height: Math.max.apply(Math, p) - A\n  };\n},\n    at = function at(t, n, e, r, i, a) {\n  var o = c(i, a, t, n);\n  return o < e && o > r;\n},\n    ot = function ot(t, n, e, r, i, a, o) {\n  if (at(t, n, e, r, a, o)) {\n    var u = g(a, o, t, n);\n    return i.find(function (t) {\n      var n = t.startAngle,\n          e = t.endAngle;\n      return u >= n && u < e;\n    });\n  }\n},\n    ut = function ut(t, n) {\n  var e = s(),\n      i = e.animate,\n      a = e.config,\n      o = r({\n    startAngle: t.arc.startAngle,\n    endAngle: t.arc.endAngle,\n    innerRadius: t.arc.innerRadius,\n    outerRadius: t.arc.outerRadius,\n    config: a,\n    immediate: !i\n  });\n  return M({}, o, {\n    path: nt(o.startAngle, o.endAngle, o.innerRadius, o.outerRadius, n)\n  });\n},\n    lt = function lt(t) {\n  var n = void 0 === t ? {} : t,\n      e = n.cornerRadius,\n      r = void 0 === e ? 0 : e,\n      i = n.padAngle,\n      a = void 0 === i ? 0 : i;\n  return v(function () {\n    return y().innerRadius(function (t) {\n      return t.innerRadius;\n    }).outerRadius(function (t) {\n      return t.outerRadius;\n    }).cornerRadius(r).padAngle(a);\n  }, [r, a]);\n};\n\nexport { F as ArcLabelComponent, B as ArcLabelsLayer, _ as ArcLine, Z as ArcLinkLabelComponent, U as ArcLinkLabelsLayer, tt as ArcShape, rt as ArcsLayer, E as arcTransitionModeById, O as arcTransitionModes, it as computeArcBoundingBox, T as computeArcCenter, D as computeArcLink, q as computeArcLinkTextAnchor, w as drawCanvasArcLabels, V as drawCanvasArcLinkLabels, ot as findArcUnderCursor, nt as interpolateArc, j as interpolateArcCenter, at as isCursorInRing, ut as useAnimatedArc, S as useArcCenters, W as useArcCentersTransition, lt as useArcGenerator, z as useArcLabels, Y as useArcLinkLabels, Q as useArcLinkLabelsTransition, X as useArcLinks, I as useArcTransitionMode, et as useArcsTransition };","map":{"version":3,"mappings":"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","names":["staticStyle","pointerEvents","ArcLabel","label","style","theme","useTheme","_jsx","animated","g","transform","opacity","progress","text","textAnchor","dominantBaseline","labels","fill","textColor","getNormalizedAngle","angle","normalizedAngle","Math","PI","filterDataBySkipAngle","data","skipAngle","filter","datum","abs","radiansToDegrees","arc","endAngle","startAngle","svgEllipticalArcCommand","radius","largeArcFlag","sweepFlag","x","y","join","arcTransitionModes","arcTransitionModeById","enter","update","leave","middleAngle","innerRadius","outerRadius","centerRadius","pushIn","pushOut","useArcTransitionMode","mode","extraTransition","useMemo","transitionMode","computeArcCenter","offset","midAngle","positionFromAngle","interpolateArcCenter","startAngleValue","endAngleValue","innerRadiusValue","outerRadiusValue","to","centroid","useArcCentersTransition","extra","useMotionConfig","animate","springConfig","config","phases","transition","useTransition","keys","id","initial","from","immediate","interpolate","useArcCenters","e","i","o","computeExtraProps","map","position","ArcLabelsLayer","center","labelAccessor","radiusOffset","component","getLabel","usePropertyAccessor","getTextColor","useInheritedColor","filteredData","Label","children","transitionProps","createElement","key","drawCanvasArcLabels","ctx","textAlign","textBaseline","font","fontSize","fontFamily","forEach","fillStyle","fillText","useArcLabels","useCallback","ArcLabelComponent","ArcLinkLabel","_jsxs","path","stroke","linkColor","strokeWidth","thickness","d","textPosition","computeArcLinkTextAnchor","centerAngle","computeArcLink","diagonalLength","straightLength","side","point2","point0","point1","points","lineGenerator","line","interpolateLink","offsetValue","diagonalLengthValue","straightLengthValue","diagonalLengthAnimated","straightLengthAnimated","interpolateTextAnchor","interpolateTextPosition","textOffsetValue","textOffset","useArcLinkLabelsTransition","r","l","getLinkColor","useFilteredDataBySkipAngle","transitionPhases","useTransitionPhases","ArcLinkLabelsLayer","drawCanvasArcLinkLabels","textPropsByEngine","canvas","align","beginPath","strokeStyle","lineWidth","point","index","moveTo","lineTo","useArcLinks","s","links","link","useArcLinkLabels","u","M","ArcLinkLabelComponent","ArcLine","animatedProps","rest","start","end","originalStartAngle","originalEndAngle","min","max","degreesToRadians","mid","generateSvgArc","ArcShape","onClick","onMouseEnter","onMouseMove","onMouseLeave","handleClick","event","handleMouseEnter","handleMouseMove","handleMouseLeave","color","borderColor","borderWidth","undefined","interpolateArc","arcGenerator","useArcsTransition","ArcsLayer","getBorderColor","Arc","computeArcBoundingBox","centerX","centerY","includeCenter","p0","push","p1","round","p","xs","ys","x0","x1","y0","width","height","isCursorInRing","cursorX","cursorY","distance","getDistance","findArcUnderCursor","arcs","cursorAngle","getAngle","find","useAnimatedArc","datumWithArc","animatedValues","useSpring","useArcGenerator","t","cornerRadius","padAngle","d3Arc"],"sources":["E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_labels\\ArcLabel.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\utils.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arcTransitionMode.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\centers.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_labels\\ArcLabelsLayer.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_labels\\canvas.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_labels\\useArcLabels.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_labels\\index.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\ArcLinkLabel.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\compute.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\useArcLinkLabelsTransition.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\ArcLinkLabelsLayer.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\canvas.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\useArcLinks.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\useArcLinkLabels.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\arc_link_labels\\index.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\ArcLine.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\ArcShape.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\interpolateArc.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\useArcsTransition.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\ArcsLayer.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\boundingBox.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\interactivity.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\useAnimatedArc.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\arcs\\src\\useArcGenerator.ts"],"sourcesContent":["import { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees, positionFromAngle, degreesToRadians } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n\nexport const svgEllipticalArcCommand = (\n    radius: number,\n    largeArcFlag: 0 | 1,\n    sweepFlag: 0 | 1,\n    x: number,\n    y: number\n) =>\n    [\n        'A',\n        radius,\n        radius,\n        0, // x-axis-rotation\n        largeArcFlag,\n        sweepFlag,\n        x,\n        y,\n    ].join(' ')\n\nexport const generateSvgArc = (\n    radius: number,\n    originalStartAngle: number,\n    originalEndAngle: number\n): string => {\n    const startAngle = Math.min(originalStartAngle, originalEndAngle)\n    const endAngle = Math.max(originalStartAngle, originalEndAngle)\n\n    const start = positionFromAngle(degreesToRadians(endAngle), radius)\n    const end = positionFromAngle(degreesToRadians(startAngle), radius)\n\n    // we have a full circle, we cannot use a single elliptical arc\n    // to draw it, so we use 2 in that case.\n    if (endAngle - startAngle >= 360) {\n        const mid = positionFromAngle(degreesToRadians(startAngle + 180), radius)\n\n        return [\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 1, mid.x, mid.y),\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 0, mid.x, mid.y),\n        ].join(' ')\n    }\n\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1\n\n    return [\n        `M ${start.x} ${start.y}`,\n        svgEllipticalArcCommand(radius, largeArcFlag, 0, end.x, end.y),\n    ].join(' ')\n}\n","import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = typeof arcTransitionModes[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<Datum extends DatumWithArc, ExtraProps> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport const useArcTransitionMode = <Datum extends DatumWithArc, ExtraProps>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.enter(datum.arc),\n                ...(extraTransition ? extraTransition.enter(datum) : {}),\n            }),\n            update: (datum: Datum) => ({\n                progress: 1,\n                ...transitionMode.update(datum.arc),\n                ...(extraTransition ? extraTransition.update(datum) : {}),\n            }),\n            leave: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.leave(datum.arc),\n                ...(extraTransition ? extraTransition.leave(datum) : {}),\n            }),\n        }\n    }, [mode, extraTransition])\n","import { useMemo } from 'react'\nimport { useTransition, to, SpringValue } from '@react-spring/web'\nimport {\n    // @ts-ignore\n    midAngle,\n    positionFromAngle,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport { ArcTransitionMode, TransitionExtra, useArcTransitionMode } from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter =\n    (offset: number) =>\n    (\n        startAngleValue: SpringValue<number>,\n        endAngleValue: SpringValue<number>,\n        innerRadiusValue: SpringValue<number>,\n        outerRadiusValue: SpringValue<number>\n    ) =>\n        to(\n            [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n            (startAngle, endAngle, innerRadius, outerRadius) => {\n                const centroid = computeArcCenter(\n                    { startAngle, endAngle, innerRadius, outerRadius },\n                    offset\n                )\n\n                return `translate(${centroid.x},${centroid.y})`\n            }\n        )\n\nexport const useArcCentersTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n","import { createElement, useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                return (\n                    Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                    skipAngle\n                )\n            }),\n        [data, skipAngle]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabel } from './useArcLabels'\n\nexport const drawCanvasArcLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLabel<Datum>[],\n    theme: CompleteTheme\n) => {\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.fillText(`${label.label}`, label.x, label.y)\n    })\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcCenters, ArcCenter } from '../centers'\n\nexport interface ArcLabel<Datum extends DatumWithArcAndColor> extends ArcCenter<Datum> {\n    label: string\n    textColor: string\n}\n\n/**\n * Compute arc labels, please note that the datum should\n * contain a color in order to be able to compute the label text color.\n *\n * Please see `useArcCenters` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset,\n    skipAngle,\n    label,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    skipAngle?: number\n    label: PropertyAccessor<Datum, string>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (datum: Datum) => {\n            return {\n                label: getLabel(datum),\n                textColor: getTextColor(datum),\n            }\n        },\n        [getLabel, getTextColor]\n    )\n\n    return useArcCenters<Datum, Omit<ArcLabel<Datum>, keyof ArcCenter<Datum>>>({\n        data,\n        offset,\n        skipAngle,\n        computeExtraProps,\n    })\n}\n","import { ArcLabel } from './ArcLabel'\n\nexport const ArcLabelComponent = ArcLabel\nexport * from './ArcLabelsLayer'\nexport * from './canvas'\nexport * from './props'\nexport * from './useArcLabels'\n","import { useTheme } from '@nivo/core'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <animated.text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n","import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from '@react-spring/web'\nimport { line } from 'd3-shape'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n","import { createElement } from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const { transition, interpolateLink, interpolateTextAnchor, interpolateTextPosition } =\n        useArcLinkLabelsTransition<Datum>({\n            data,\n            skipAngle,\n            offset,\n            diagonalLength,\n            straightLength,\n            textOffset,\n            linkColor,\n            textColor,\n        })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import {\n    // @ts-ignore\n    textPropsByEngine,\n    CompleteTheme,\n} from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkLabel } from './types'\n\nexport const drawCanvasArcLinkLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLinkLabel<Datum>[],\n    theme: CompleteTheme,\n    strokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor]\n        ctx.fillText(`${label.label}`, label.x, label.y)\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = strokeWidth\n        label.points.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        ctx.stroke()\n    })\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from '../types'\nimport { ArcLinkWithDatum } from './types'\nimport { computeArcLink } from './compute'\n\n/**\n * Compute links for an array of data containing arcs.\n *\n * This is typically used to create labels for arcs,\n * and it's used for the `useArcLinkLabels` hook.\n */\nexport const useArcLinks = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    skipAngle = 0,\n    offset = 0.5,\n    diagonalLength,\n    straightLength,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // offset from arc outer radius in pixels\n    offset?: number\n    // length of the diagonal segment of the link\n    diagonalLength: number\n    // length of the straight segment of the link\n    straightLength: number\n    // this can be used to append extra properties to the links,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: ArcLinkWithDatum<Datum>) => ExtraProps\n}): (ArcLinkWithDatum<Datum> & ExtraProps)[] => {\n    const links = useMemo(\n        () =>\n            data\n                // filter out arcs with a length below `skipAngle`\n                .filter(\n                    datum =>\n                        Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                        skipAngle\n                )\n                // compute the link for each eligible arc\n                .map(datum => ({\n                    ...computeArcLink(datum.arc, offset, diagonalLength, straightLength),\n                    data: datum,\n                })),\n        [data, skipAngle, offset, diagonalLength, straightLength]\n    )\n\n    // splitting memoization of links and extra props can be more efficient,\n    // this way if only `computeExtraProps` changes, we skip links computation.\n    return useMemo(\n        () =>\n            links.map(link => ({\n                ...computeExtraProps(link),\n                ...link,\n            })),\n        [links, computeExtraProps]\n    )\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkWithDatum, ArcLinkLabel } from './types'\nimport { useArcLinks } from './useArcLinks'\n\n/**\n * Compute arc link labels, please note that the datum should\n * contain a color in order to be able to compute the link/label text color.\n *\n * Please see `useArcLinks` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLinkLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset = 0,\n    label,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    skipAngle?: number\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    label: PropertyAccessor<Datum, string>\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (link: ArcLinkWithDatum<Datum>) => {\n            const position = {\n                x: link.points[2].x,\n                y: link.points[2].y,\n            }\n            let textAnchor: ArcLinkLabel<Datum>['textAnchor']\n            if (link.side === 'before') {\n                position.x -= textOffset\n                textAnchor = 'end'\n            } else {\n                position.x += textOffset\n                textAnchor = 'start'\n            }\n\n            return {\n                ...position,\n                label: getLabel(link.data),\n                linkColor: getLinkColor(link.data),\n                textAnchor,\n                textColor: getTextColor(link.data),\n            }\n        },\n        [getLabel, getLinkColor, getTextColor, textOffset]\n    )\n\n    return useArcLinks<Datum, Omit<ArcLinkLabel<Datum>, keyof ArcLinkWithDatum<Datum>>>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        computeExtraProps,\n    })\n}\n","import { ArcLinkLabel } from './ArcLinkLabel'\n\nexport const ArcLinkLabelComponent = ArcLinkLabel\nexport * from './ArcLinkLabelsLayer'\nexport * from './canvas'\nexport * from './compute'\nexport * from './props'\nexport * from './types'\nexport * from './useArcLinkLabels'\nexport * from './useArcLinkLabelsTransition'\nexport * from './useArcLinks'\n","import { animated, to, AnimatedProps } from '@react-spring/web'\nimport { ExtractProps } from '@nivo/core'\nimport { generateSvgArc } from './utils'\n\ntype ArcLineProps = {\n    animated: AnimatedProps<{\n        radius: number\n        startAngle: number\n        endAngle: number\n        opacity: number\n    }>\n} & ExtractProps<typeof animated.path>\n\nexport const ArcLine = ({ animated: animatedProps, ...rest }: ArcLineProps) => (\n    <animated.path\n        d={to(\n            [animatedProps.radius, animatedProps.startAngle, animatedProps.endAngle],\n            (radius, start, end) => generateSvgArc(radius, start, end)\n        )}\n        {...rest}\n    />\n)\n","import { useCallback } from 'react'\nimport * as React from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: React.MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(event => onClick?.(datum, event), [onClick, datum])\n\n    const handleMouseEnter = useCallback(\n        event => onMouseEnter?.(datum, event),\n        [onMouseEnter, datum]\n    )\n\n    const handleMouseMove = useCallback(event => onMouseMove?.(datum, event), [onMouseMove, datum])\n\n    const handleMouseLeave = useCallback(\n        event => onMouseLeave?.(datum, event),\n        [onMouseLeave, datum]\n    )\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { to, SpringValue } from '@react-spring/web'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n","import { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport { ArcTransitionMode, useArcTransitionMode, TransitionExtra } from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n","import { createElement } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n","import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n","import { getDistance, getAngle } from '@nivo/core'\nimport { Arc } from './types'\n\n/**\n * Check if cursor is in given ring.\n */\nexport const isCursorInRing = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    cursorX: number,\n    cursorY: number\n) => {\n    const distance = getDistance(cursorX, cursorY, centerX, centerY)\n\n    return distance < radius && distance > innerRadius\n}\n\n/**\n * Search for an arc being under cursor.\n */\nexport const findArcUnderCursor = <A extends Arc = Arc>(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    arcs: A[],\n    cursorX: number,\n    cursorY: number\n): A | undefined => {\n    if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n        return undefined\n    }\n\n    const cursorAngle = getAngle(cursorX, cursorY, centerX, centerY)\n\n    return arcs.find(\n        ({ startAngle, endAngle }) => cursorAngle >= startAngle && cursorAngle < endAngle\n    )\n}\n","import { useSpring } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { Arc, ArcGenerator } from './types'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a single arc,\n * if you want to animate a group of arcs,\n * please have a look at the `useArcsTransition` hook.\n */\nexport const useAnimatedArc = (datumWithArc: { arc: Arc }, arcGenerator: ArcGenerator) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedValues = useSpring({\n        startAngle: datumWithArc.arc.startAngle,\n        endAngle: datumWithArc.arc.endAngle,\n        innerRadius: datumWithArc.arc.innerRadius,\n        outerRadius: datumWithArc.arc.outerRadius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        ...animatedValues,\n        path: interpolateArc(\n            animatedValues.startAngle,\n            animatedValues.endAngle,\n            animatedValues.innerRadius,\n            animatedValues.outerRadius,\n            arcGenerator\n        ),\n    }\n}\n","import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n"]},"metadata":{},"sourceType":"module"}