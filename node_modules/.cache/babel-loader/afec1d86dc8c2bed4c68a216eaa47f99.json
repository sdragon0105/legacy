{"ast":null,"code":"import _slicedToArray from\"E:/Work/legacy/legacy-frontend-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"E:/Work/legacy/legacy-frontend-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"E:\\\\Work\\\\legacy\\\\legacy-frontend-main\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect,useCallback}from'react';import Economy from'./Economy';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(table,timeRange,callback){var frequencParam,fetchURL,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:frequencParam='';fetchURL='';_context.t0=table;_context.next=_context.t0==='MarketplaceSales'?5:_context.t0==='TUS'?7:9;break;case 5:fetchURL='http://ec2-54-193-76-195.us-west-1.compute.amazonaws.com:8080/626ab3f9f19ae260acb3f7df/economy/marketplace';return _context.abrupt(\"break\",10);case 7:fetchURL='http://ec2-54-193-76-195.us-west-1.compute.amazonaws.com:8080/626ab49efe0d854695198b42/economy/inflation';return _context.abrupt(\"break\",10);case 9:return _context.abrupt(\"break\",10);case 10:_context.t1=timeRange;_context.next=_context.t1==='24hrs'?13:_context.t1==='7days'?15:_context.t1==='all'?17:19;break;case 13:frequencParam='TWENTY_FOUR';return _context.abrupt(\"break\",20);case 15:frequencParam='SEVEN';return _context.abrupt(\"break\",20);case 17:frequencParam='ALL_TIME';return _context.abrupt(\"break\",20);case 19:return _context.abrupt(\"break\",20);case 20:_context.prev=20;_context.next=23;return axios.get(// 'https://p2eanalytics.com/crabada/getEconomy',\nfetchURL,{params:{// table: table,\n// timeRange: timeRange,\nfrequency:frequencParam}});case 23:response=_context.sent;callback(null,response.data.data);_context.next=30;break;case 27:_context.prev=27;_context.t2=_context[\"catch\"](20);callback(_context.t2);case 30:case\"end\":return _context.stop();}}},_callee,null,[[20,27]]);}));return function fetchData(_x,_x2,_x3){return _ref.apply(this,arguments);};}();function EconomyContainer(){var _useState=useState([0,0]),_useState2=_slicedToArray(_useState,2),menus=_useState2[0],setMenus=_useState2[1];var _useState3=useState(['all','all']),_useState4=_slicedToArray(_useState3,2),timeFilter=_useState4[0],setTimeFilter=_useState4[1];var _useState5=useState([[]]),_useState6=_slicedToArray(_useState5,2),marketplaceData=_useState6[0],setMarketplaceData=_useState6[1];var _useState7=useState([[]]),_useState8=_slicedToArray(_useState7,2),tokenData=_useState8[0],setTokenData=_useState8[1];var _useState9=useState([['auto','auto'],['auto','auto']]),_useState10=_slicedToArray(_useState9,2),tokenMinMax=_useState10[0],setTokenMinMax=_useState10[1];var _useState11=useState([['auto','auto'],['auto','auto'],['auto','auto']]),_useState12=_slicedToArray(_useState11,2),marketMinMax=_useState12[0],setMarketMinMax=_useState12[1];var temp={\"erc721Id\":\"erc721:62646d9538af487750b95e33\",\"nativeCurrencyId\":\"erc20:6265913a2d30e71b11d446f6\",\"data\":[{\"timestamp\":1650369600000,\"unitsSold\":54,\"averageNativeVolume\":1127116000000000000000000,\"averageUSDVolume\":0,\"averageNativePrice\":20872518518518518518518,\"averageUSDPrice\":0},{\"timestamp\":1650373200000,\"unitsSold\":68,\"averageNativeVolume\":1391438000000000000000000,\"averageUSDVolume\":0,\"averageNativePrice\":20462323529411764705882,\"averageUSDPrice\":0},{\"timestamp\":1650376800000,\"unitsSold\":56,\"averageNativeVolume\":1207184000000000000000000,\"averageUSDVolume\":0,\"averageNativePrice\":21556857142857142857142,\"averageUSDPrice\":0},{\"timestamp\":1650380400000,\"unitsSold\":137,\"averageNativeVolume\":2697732000000000000000000,\"averageUSDVolume\":0,\"averageNativePrice\":19691474452554744525547,\"averageUSDPrice\":0}]};useEffect(function(){fetchData('MarketplaceSales',timeFilter[0],function(err,market){if(!err){var salesMin=99999999999999;var salesMax=-1;var averageMin=99999999999999;var averageMax=-1;var countMin=99999999999999;var countMax=-1;// let salesArray = market[0][0]['data']\n// let tempArray = temp.data;\nvar tempArray=market.data;console.log('salesArray',tempArray);var salesArr=[];var averageArr=[];var soldArr=[];var marketArray=[];for(var i=0;i<tempArray.length;i++){var timestamp=tempArray[i].timestamp;//Example -> in ms\nvar date=new Date(timestamp);var dateResult=\"\".concat(date.getDate(),\"-\").concat(date.getMonth()+1,\"-\").concat(date.getFullYear(),\" \").concat(date.getHours(),\"-\").concat(date.getMinutes(),\"-\").concat(date.getSeconds());salesArr.push({x:dateResult,y:tempArray[i].averageNativeVolume/Math.pow(10,18)});averageArr.push({x:dateResult,y:tempArray[i].averageNativePrice/Math.pow(10,18)});soldArr.push({x:dateResult,y:tempArray[i].unitsSold});if(salesArr[i]['y']<salesMin){salesMin=salesArr[i]['y'];}if(salesArr[i]['y']>salesMax){salesMax=salesArr[i]['y'];}if(averageArr[i]['y']<averageMin){averageMin=averageArr[i]['y'];}if(averageArr[i]['y']>averageMax){averageMax=averageArr[i]['y'];}if(soldArr[i]['y']<countMin){countMin=soldArr[i]['y'];}if(soldArr[i]['y']>countMax){countMax=soldArr[i]['y'];}}console.log('salesArr',salesArr);marketArray.push([{id:'Sales',data:salesArr}]);marketArray.push([{id:'Average Price',data:averageArr}]);marketArray.push([{id:'Crabada Sold',data:soldArr}]);console.log('marketArray',marketArray);// let averageMin = 99999999999999\n// let averageMax = -1\n// let averageArray = market[1][0]['data']\n// for (let i = 0; i < averageArray.length; i++) {\n//   if (averageArray[i]['y'] < averageMin) {\n//     averageMin = averageArray[i]['y']\n//   }\n//   if (averageArray[i]['y'] > averageMax) {\n//     averageMax = averageArray[i]['y']\n//   }\n// }\n// let countMin = 99999999999999\n// let countMax = -1\n// let countArray = market[2][0]['data']\n// for (let i = 0; i < countArray.length; i++) {\n//   if (countArray[i]['y'] < countMin) {\n//     countMin = countArray[i]['y']\n//   }\n//   if (countArray[i]['y'] > countMax) {\n//     countMax = countArray[i]['y']\n//   }\n// }\nsalesMin=salesMin*0.4;salesMax=salesMax*1.2;averageMin=averageMin*0.4;averageMax=averageMax*1.2;countMin=countMin*0.4;countMax=countMax*1.2;// setMarketplaceData(market)\nsetMarketplaceData(marketArray);setMarketMinMax([[salesMin,salesMax],[averageMin,averageMax],[countMin,countMax]]);}});},[timeFilter[0]]);useEffect(function(){fetchData('TUS',timeFilter[1],function(err,token){console.log('token',token);if(!err){var netSupplyMin=99999999999999;var netSupplyMax=-1;var supplyArray=token[0][0]['data'];for(var i=0;i<supplyArray.length;i++){if(supplyArray[i]['y']<netSupplyMin){netSupplyMin=supplyArray[i]['y'];}if(supplyArray[i]['y']>netSupplyMax){netSupplyMax=supplyArray[i]['y'];}}netSupplyMax=netSupplyMax*1.2;netSupplyMin=netSupplyMin*0.3;setTokenData(token);setTokenMinMax([[netSupplyMin,netSupplyMax],['auto','auto']]);}});},[timeFilter[1]]);return/*#__PURE__*/_jsx(Economy,{menus:menus,setMenus:setMenus,market:marketplaceData,token:tokenData,timeFilter:timeFilter,setTimeFilter:setTimeFilter,tokenMinMax:tokenMinMax,marketMinMax:marketMinMax});}export default EconomyContainer;","map":{"version":3,"sources":["E:/Work/legacy/legacy-frontend-main/src/games/crabada/Economy/EconomyContainer.js"],"names":["React","useState","useEffect","useCallback","Economy","axios","fetchData","table","timeRange","callback","frequencParam","fetchURL","get","params","frequency","response","data","EconomyContainer","menus","setMenus","timeFilter","setTimeFilter","marketplaceData","setMarketplaceData","tokenData","setTokenData","tokenMinMax","setTokenMinMax","marketMinMax","setMarketMinMax","temp","err","market","salesMin","salesMax","averageMin","averageMax","countMin","countMax","tempArray","console","log","salesArr","averageArr","soldArr","marketArray","i","length","timestamp","date","Date","dateResult","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","push","x","y","averageNativeVolume","Math","pow","averageNativePrice","unitsSold","id","token","netSupplyMin","netSupplyMax","supplyArray"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport Economy from './Economy'\nimport axios from 'axios'\n\nconst fetchData = async (table, timeRange, callback) => {\n  let frequencParam = ''\n  let fetchURL = ''\n  switch (table) {\n    case 'MarketplaceSales':\n      fetchURL = 'http://ec2-54-193-76-195.us-west-1.compute.amazonaws.com:8080/626ab3f9f19ae260acb3f7df/economy/marketplace'\n      break\n    case 'TUS':\n      fetchURL = 'http://ec2-54-193-76-195.us-west-1.compute.amazonaws.com:8080/626ab49efe0d854695198b42/economy/inflation';\n      break\n    default: break\n  }\n  switch (timeRange) {\n    case '24hrs':\n      frequencParam = 'TWENTY_FOUR';\n      break;\n    case '7days':\n      frequencParam = 'SEVEN';\n      break;\n    case 'all':\n      frequencParam = 'ALL_TIME';\n      break;\n    default: break;\n  }\n  try {\n    let response = await axios.get(\n      // 'https://p2eanalytics.com/crabada/getEconomy',\n      fetchURL,\n      {\n        params: {\n          // table: table,\n          // timeRange: timeRange,\n          frequency: frequencParam,\n        },\n      },\n    );\n    callback(null, response.data.data)\n  } catch (e) {\n    callback(e)\n  }\n}\n\nfunction EconomyContainer() {\n  const [menus, setMenus] = useState([0, 0])\n  const [timeFilter, setTimeFilter] = useState(['all', 'all'])\n  const [marketplaceData, setMarketplaceData] = useState([[]])\n  const [tokenData, setTokenData] = useState([[]])\n  const [tokenMinMax, setTokenMinMax] = useState([\n    ['auto', 'auto'],\n    ['auto', 'auto'],\n  ])\n  const [marketMinMax, setMarketMinMax] = useState([\n    ['auto', 'auto'],\n    ['auto', 'auto'],\n    ['auto', 'auto'],\n  ])\n  \n  const temp = {\n    \"erc721Id\": \"erc721:62646d9538af487750b95e33\",\n    \"nativeCurrencyId\": \"erc20:6265913a2d30e71b11d446f6\",\n    \"data\": [\n        {\n            \"timestamp\": 1650369600000,\n            \"unitsSold\": 54,\n            \"averageNativeVolume\": 1127116000000000000000000,\n            \"averageUSDVolume\": 0,\n            \"averageNativePrice\": 20872518518518518518518,\n            \"averageUSDPrice\": 0\n        },\n        {\n            \"timestamp\": 1650373200000,\n            \"unitsSold\": 68,\n            \"averageNativeVolume\": 1391438000000000000000000,\n            \"averageUSDVolume\": 0,\n            \"averageNativePrice\": 20462323529411764705882,\n            \"averageUSDPrice\": 0\n        },\n        {\n            \"timestamp\": 1650376800000,\n            \"unitsSold\": 56,\n            \"averageNativeVolume\": 1207184000000000000000000,\n            \"averageUSDVolume\": 0,\n            \"averageNativePrice\": 21556857142857142857142,\n            \"averageUSDPrice\": 0\n        },\n        {\n            \"timestamp\": 1650380400000,\n            \"unitsSold\": 137,\n            \"averageNativeVolume\": 2697732000000000000000000,\n            \"averageUSDVolume\": 0,\n            \"averageNativePrice\": 19691474452554744525547,\n            \"averageUSDPrice\": 0\n        },\t\t\t\t\n\t\t]\n}\n\n  useEffect(() => {\n    fetchData('MarketplaceSales', timeFilter[0], (err, market) => {\n      if (!err) {\n      let salesMin = 99999999999999;\n      let salesMax = -1;\n      let averageMin = 99999999999999;\n      let averageMax = -1;\n      let countMin = 99999999999999\n      let countMax = -1\n      // let salesArray = market[0][0]['data']\n      // let tempArray = temp.data;\n      let tempArray = market.data;\n      console.log('salesArray', tempArray);\n      let salesArr = [];\n      let averageArr = [];\n      let soldArr = [];\n      let marketArray = [];\n\n      for (let i = 0; i < tempArray.length; i++) {\n        let timestamp = tempArray[i].timestamp; //Example -> in ms\n        const date = new Date(timestamp);\n        const dateResult = `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()} ${date.getHours()}-${date.getMinutes()}-${date.getSeconds()}`;\n\n        salesArr.push({ x: dateResult, y: tempArray[i].averageNativeVolume / Math.pow(10, 18) });\n        averageArr.push({ x: dateResult, y: tempArray[i].averageNativePrice / Math.pow(10, 18) });\n        soldArr.push({ x: dateResult, y: tempArray[i].unitsSold });\n\n        if (salesArr[i]['y'] < salesMin) {\n          salesMin = salesArr[i]['y'];\n        }\n        if (salesArr[i]['y'] > salesMax) {\n          salesMax = salesArr[i]['y'];\n        }\n\n        if (averageArr[i]['y'] < averageMin) {\n          averageMin = averageArr[i]['y']\n        }\n        if (averageArr[i]['y'] > averageMax) {\n          averageMax = averageArr[i]['y']\n        }\n\n        if (soldArr[i]['y'] < countMin) {\n          countMin = soldArr[i]['y']\n        }\n        if (soldArr[i]['y'] > countMax) {\n          countMax = soldArr[i]['y']\n        }\n      }\n      console.log('salesArr', salesArr);\n      marketArray.push([{ id: 'Sales', data: salesArr }]);\n      marketArray.push([{ id: 'Average Price', data: averageArr }]);\n      marketArray.push([{ id: 'Crabada Sold', data: soldArr }]);\n      console.log('marketArray', marketArray);\n\n      // let averageMin = 99999999999999\n      // let averageMax = -1\n      // let averageArray = market[1][0]['data']\n      // for (let i = 0; i < averageArray.length; i++) {\n      //   if (averageArray[i]['y'] < averageMin) {\n      //     averageMin = averageArray[i]['y']\n      //   }\n      //   if (averageArray[i]['y'] > averageMax) {\n      //     averageMax = averageArray[i]['y']\n      //   }\n      // }\n      // let countMin = 99999999999999\n      // let countMax = -1\n      // let countArray = market[2][0]['data']\n      // for (let i = 0; i < countArray.length; i++) {\n      //   if (countArray[i]['y'] < countMin) {\n      //     countMin = countArray[i]['y']\n      //   }\n      //   if (countArray[i]['y'] > countMax) {\n      //     countMax = countArray[i]['y']\n      //   }\n      // }\n\n      salesMin = salesMin * 0.4;\n      salesMax = salesMax * 1.2;\n      averageMin = averageMin * 0.4;\n      averageMax = averageMax * 1.2;\n      countMin = countMin * 0.4;\n      countMax = countMax * 1.2;\n\n      // setMarketplaceData(market)\n      setMarketplaceData(marketArray);\n\n      setMarketMinMax([\n        [salesMin, salesMax],\n        [averageMin, averageMax],\n        [countMin, countMax],\n      ]);\n      }\n    })\n  }, [timeFilter[0]])\n\n  useEffect(() => {\n    fetchData('TUS', timeFilter[1], (err, token) => {\n      console.log('token',token)\n      if (!err) {\n        let netSupplyMin = 99999999999999\n        let netSupplyMax = -1\n\n        let supplyArray = token[0][0]['data']\n        for (let i = 0; i < supplyArray.length; i++) {\n          if (supplyArray[i]['y'] < netSupplyMin) {\n            netSupplyMin = supplyArray[i]['y']\n          }\n          if (supplyArray[i]['y'] > netSupplyMax) {\n            netSupplyMax = supplyArray[i]['y']\n          }\n        }\n\n        netSupplyMax = netSupplyMax * 1.2\n        netSupplyMin = netSupplyMin * 0.3\n\n        setTokenData(token)\n        setTokenMinMax([\n          [netSupplyMin, netSupplyMax],\n          ['auto', 'auto'],\n        ])\n      }\n    })\n  }, [timeFilter[1]])\n  return (\n    <Economy\n      menus={menus}\n      setMenus={setMenus}\n      market={marketplaceData}\n      token={tokenData}\n      timeFilter={timeFilter}\n      setTimeFilter={setTimeFilter}\n      tokenMinMax={tokenMinMax}\n      marketMinMax={marketMinMax}\n    />\n  )\n}\n\nexport default EconomyContainer\n"]},"metadata":{},"sourceType":"module"}