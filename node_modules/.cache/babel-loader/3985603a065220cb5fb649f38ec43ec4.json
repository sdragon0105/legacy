{"ast":null,"code":"import { useMemo as e, useState as i, useCallback as t, createElement as n, Fragment as r, useRef as a, useEffect as o } from \"react\";\nimport { usePropertyAccessor as d, useValueFormatter as l, degreesToRadians as s, radiansToDegrees as c, Container as u, useDimensions as v, bindDefs as f, SvgWrapper as g, ResponsiveWrapper as L, useTheme as h, getRelativeCursor as b } from \"@nivo/core\";\nimport { useArcGenerator as p, computeArcBoundingBox as k, ArcsLayer as A, ArcLinkLabelsLayer as R, ArcLabelsLayer as m, useArcLabels as O, useArcLinkLabels as C, drawCanvasArcLinkLabels as I, drawCanvasArcLabels as x, findArcUnderCursor as M } from \"@nivo/arcs\";\nimport { BoxLegendSvg as y, renderLegendToCanvas as w } from \"@nivo/legends\";\nimport { jsx as W, Fragment as S } from \"react/jsx-runtime\";\nimport { pie as T } from \"d3-shape\";\nimport { useOrdinalColorScale as V, useInheritedColor as B } from \"@nivo/colors\";\nimport { BasicTooltip as G, useTooltip as E } from \"@nivo/tooltip\";\n\nfunction D() {\n  return D = Object.assign || function (e) {\n    for (var i = 1; i < arguments.length; i++) {\n      var t = arguments[i];\n\n      for (var n in t) {\n        Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n      }\n    }\n\n    return e;\n  }, D.apply(this, arguments);\n}\n\nfunction F(e, i) {\n  if (null == e) return {};\n  var t,\n      n,\n      r = {},\n      a = Object.keys(e);\n\n  for (n = 0; n < a.length; n++) {\n    t = a[n], i.indexOf(t) >= 0 || (r[t] = e[t]);\n  }\n\n  return r;\n}\n\nvar H,\n    X = function X(e) {\n  var i = e.width,\n      t = e.height,\n      n = e.legends,\n      r = e.data,\n      a = e.toggleSerie;\n  return W(S, {\n    children: n.map(function (e, n) {\n      var o;\n      return W(y, D({}, e, {\n        containerWidth: i,\n        containerHeight: t,\n        data: null != (o = e.data) ? o : r,\n        toggleSerie: e.toggleSerie ? a : void 0\n      }), n);\n    })\n  });\n},\n    Y = {\n  id: \"id\",\n  value: \"value\",\n  sortByValue: !1,\n  innerRadius: 0,\n  padAngle: 0,\n  cornerRadius: 0,\n  layers: [\"arcLinkLabels\", \"arcs\", \"arcLabels\", \"legends\"],\n  startAngle: 0,\n  endAngle: 360,\n  fit: !0,\n  activeInnerRadiusOffset: 0,\n  activeOuterRadiusOffset: 0,\n  borderWidth: 0,\n  borderColor: {\n    from: \"color\",\n    modifiers: [[\"darker\", 1]]\n  },\n  enableArcLabels: !0,\n  arcLabel: \"formattedValue\",\n  arcLabelsSkipAngle: 0,\n  arcLabelsRadiusOffset: .5,\n  arcLabelsTextColor: {\n    theme: \"labels.text.fill\"\n  },\n  enableArcLinkLabels: !0,\n  arcLinkLabel: \"id\",\n  arcLinkLabelsSkipAngle: 0,\n  arcLinkLabelsOffset: 0,\n  arcLinkLabelsDiagonalLength: 16,\n  arcLinkLabelsStraightLength: 24,\n  arcLinkLabelsThickness: 1,\n  arcLinkLabelsTextOffset: 6,\n  arcLinkLabelsTextColor: {\n    theme: \"labels.text.fill\"\n  },\n  arcLinkLabelsColor: {\n    theme: \"axis.ticks.line.stroke\"\n  },\n  colors: {\n    scheme: \"nivo\"\n  },\n  defs: [],\n  fill: [],\n  isInteractive: !0,\n  animate: !0,\n  motionConfig: \"gentle\",\n  transitionMode: \"innerRadius\",\n  tooltip: function tooltip(e) {\n    var i = e.datum;\n    return W(G, {\n      id: i.id,\n      value: i.formattedValue,\n      enableChip: !0,\n      color: i.color\n    });\n  },\n  legends: [],\n  role: \"img\",\n  pixelRatio: \"undefined\" != typeof window && null != (H = window.devicePixelRatio) ? H : 1\n},\n    j = [\"points\"],\n    P = function P(i) {\n  var t = i.data,\n      n = i.id,\n      r = void 0 === n ? Y.id : n,\n      a = i.value,\n      o = void 0 === a ? Y.value : a,\n      s = i.valueFormat,\n      c = i.colors,\n      u = void 0 === c ? Y.colors : c,\n      v = d(r),\n      f = d(o),\n      g = l(s),\n      L = V(u, \"id\");\n  return e(function () {\n    return t.map(function (e) {\n      var i,\n          t = v(e),\n          n = f(e),\n          r = {\n        id: t,\n        label: null != (i = e.label) ? i : t,\n        hidden: !1,\n        value: n,\n        formattedValue: g(n),\n        data: e\n      };\n      return D({}, r, {\n        color: L(r)\n      });\n    });\n  }, [t, v, f, g, L]);\n},\n    q = function q(i) {\n  var t = i.data,\n      n = i.startAngle,\n      r = i.endAngle,\n      a = i.innerRadius,\n      o = i.outerRadius,\n      d = i.padAngle,\n      l = i.sortByValue,\n      u = i.activeId,\n      v = i.activeInnerRadiusOffset,\n      f = i.activeOuterRadiusOffset,\n      g = i.hiddenIds,\n      L = e(function () {\n    var e = T().value(function (e) {\n      return e.value;\n    }).startAngle(s(n)).endAngle(s(r)).padAngle(s(d));\n    return l || e.sortValues(null), e;\n  }, [n, r, d, l]);\n  return e(function () {\n    var e = t.filter(function (e) {\n      return !g.includes(e.id);\n    });\n    return {\n      dataWithArc: L(e).map(function (e) {\n        var i = Math.abs(e.endAngle - e.startAngle);\n        return D({}, e.data, {\n          arc: {\n            index: e.index,\n            startAngle: e.startAngle,\n            endAngle: e.endAngle,\n            innerRadius: u === e.data.id ? a - v : a,\n            outerRadius: u === e.data.id ? o + f : o,\n            thickness: o - a,\n            padAngle: e.padAngle,\n            angle: i,\n            angleDeg: c(i)\n          }\n        });\n      }),\n      legendData: t.map(function (e) {\n        return D({}, e, {\n          hidden: g.includes(e.id)\n        });\n      })\n    };\n  }, [L, t, g, u, a, v, o, f]);\n},\n    z = function z(e) {\n  var n = e.data,\n      r = e.radius,\n      a = e.innerRadius,\n      o = e.startAngle,\n      d = void 0 === o ? Y.startAngle : o,\n      l = e.endAngle,\n      c = void 0 === l ? Y.endAngle : l,\n      u = e.padAngle,\n      v = void 0 === u ? Y.padAngle : u,\n      f = e.sortByValue,\n      g = void 0 === f ? Y.sortByValue : f,\n      L = e.cornerRadius,\n      h = void 0 === L ? Y.cornerRadius : L,\n      b = e.activeInnerRadiusOffset,\n      k = void 0 === b ? Y.activeInnerRadiusOffset : b,\n      A = e.activeOuterRadiusOffset,\n      R = void 0 === A ? Y.activeOuterRadiusOffset : A,\n      m = i(null),\n      O = m[0],\n      C = m[1],\n      I = i([]),\n      x = I[0],\n      M = I[1],\n      y = q({\n    data: n,\n    startAngle: d,\n    endAngle: c,\n    innerRadius: a,\n    outerRadius: r,\n    padAngle: v,\n    sortByValue: g,\n    activeId: O,\n    activeInnerRadiusOffset: k,\n    activeOuterRadiusOffset: R,\n    hiddenIds: x\n  }),\n      w = t(function (e) {\n    M(function (i) {\n      return i.indexOf(e) > -1 ? i.filter(function (i) {\n        return i !== e;\n      }) : [].concat(i, [e]);\n    });\n  }, []);\n  return D({}, y, {\n    arcGenerator: p({\n      cornerRadius: h,\n      padAngle: s(v)\n    }),\n    setActiveId: C,\n    toggleSerie: w\n  });\n},\n    J = function J(n) {\n  var r = n.data,\n      a = n.width,\n      o = n.height,\n      d = n.innerRadius,\n      l = void 0 === d ? Y.innerRadius : d,\n      c = n.startAngle,\n      u = void 0 === c ? Y.startAngle : c,\n      v = n.endAngle,\n      f = void 0 === v ? Y.endAngle : v,\n      g = n.padAngle,\n      L = void 0 === g ? Y.padAngle : g,\n      h = n.sortByValue,\n      b = void 0 === h ? Y.sortByValue : h,\n      A = n.cornerRadius,\n      R = void 0 === A ? Y.cornerRadius : A,\n      m = n.fit,\n      O = void 0 === m ? Y.fit : m,\n      C = n.activeInnerRadiusOffset,\n      I = void 0 === C ? Y.activeInnerRadiusOffset : C,\n      x = n.activeOuterRadiusOffset,\n      M = void 0 === x ? Y.activeOuterRadiusOffset : x,\n      y = i(null),\n      w = y[0],\n      W = y[1],\n      S = i([]),\n      T = S[0],\n      V = S[1],\n      B = e(function () {\n    var e,\n        i = Math.min(a, o) / 2,\n        t = i * Math.min(l, 1),\n        n = a / 2,\n        r = o / 2;\n\n    if (O) {\n      var d = k(n, r, i, u - 90, f - 90),\n          s = d.points,\n          c = F(d, j),\n          v = Math.min(a / c.width, o / c.height),\n          g = {\n        width: c.width * v,\n        height: c.height * v\n      };\n      g.x = (a - g.width) / 2, g.y = (o - g.height) / 2, n = (n - c.x) / c.width * c.width * v + g.x, r = (r - c.y) / c.height * c.height * v + g.y, e = {\n        box: c,\n        ratio: v,\n        points: s\n      }, i *= v, t *= v;\n    }\n\n    return {\n      centerX: n,\n      centerY: r,\n      radius: i,\n      innerRadius: t,\n      debug: e\n    };\n  }, [a, o, l, u, f, O, R]),\n      G = q({\n    data: r,\n    startAngle: u,\n    endAngle: f,\n    innerRadius: B.innerRadius,\n    outerRadius: B.radius,\n    padAngle: L,\n    sortByValue: b,\n    activeId: w,\n    activeInnerRadiusOffset: I,\n    activeOuterRadiusOffset: M,\n    hiddenIds: T\n  }),\n      E = t(function (e) {\n    V(function (i) {\n      return i.indexOf(e) > -1 ? i.filter(function (i) {\n        return i !== e;\n      }) : [].concat(i, [e]);\n    });\n  }, []);\n  return D({\n    arcGenerator: p({\n      cornerRadius: R,\n      padAngle: s(L)\n    }),\n    setActiveId: W,\n    toggleSerie: E\n  }, G, B);\n},\n    K = function K(i) {\n  var t = i.dataWithArc,\n      n = i.arcGenerator,\n      r = i.centerX,\n      a = i.centerY,\n      o = i.radius,\n      d = i.innerRadius;\n  return e(function () {\n    return {\n      dataWithArc: t,\n      arcGenerator: n,\n      centerX: r,\n      centerY: a,\n      radius: o,\n      innerRadius: d\n    };\n  }, [t, n, r, a, o, d]);\n},\n    N = function N(i) {\n  var t = i.center,\n      r = i.data,\n      a = i.arcGenerator,\n      o = i.borderWidth,\n      d = i.borderColor,\n      l = i.isInteractive,\n      s = i.onClick,\n      c = i.onMouseEnter,\n      u = i.onMouseMove,\n      v = i.onMouseLeave,\n      f = i.setActiveId,\n      g = i.tooltip,\n      L = i.transitionMode,\n      h = E(),\n      b = h.showTooltipFromEvent,\n      p = h.hideTooltip,\n      k = e(function () {\n    if (l) return function (e, i) {\n      null == s || s(e, i);\n    };\n  }, [l, s]),\n      R = e(function () {\n    if (l) return function (e, i) {\n      b(n(g, {\n        datum: e\n      }), i), f(e.id), null == c || c(e, i);\n    };\n  }, [l, b, f, c]),\n      m = e(function () {\n    if (l) return function (e, i) {\n      b(n(g, {\n        datum: e\n      }), i), null == u || u(e, i);\n    };\n  }, [l, b, u]),\n      O = e(function () {\n    if (l) return function (e, i) {\n      p(), f(null), null == v || v(e, i);\n    };\n  }, [l, p, f, v]);\n  return W(A, {\n    center: t,\n    data: r,\n    arcGenerator: a,\n    borderWidth: o,\n    borderColor: d,\n    transitionMode: L,\n    onClick: k,\n    onMouseEnter: R,\n    onMouseMove: m,\n    onMouseLeave: O\n  });\n},\n    Q = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n    U = function U(e) {\n  var i = e.data,\n      t = e.id,\n      a = void 0 === t ? Y.id : t,\n      o = e.value,\n      d = void 0 === o ? Y.value : o,\n      l = e.valueFormat,\n      s = e.sortByValue,\n      c = void 0 === s ? Y.sortByValue : s,\n      u = e.layers,\n      L = void 0 === u ? Y.layers : u,\n      h = e.startAngle,\n      b = void 0 === h ? Y.startAngle : h,\n      p = e.endAngle,\n      k = void 0 === p ? Y.endAngle : p,\n      A = e.padAngle,\n      O = void 0 === A ? Y.padAngle : A,\n      C = e.fit,\n      I = void 0 === C ? Y.fit : C,\n      x = e.innerRadius,\n      M = void 0 === x ? Y.innerRadius : x,\n      y = e.cornerRadius,\n      w = void 0 === y ? Y.cornerRadius : y,\n      S = e.activeInnerRadiusOffset,\n      T = void 0 === S ? Y.activeInnerRadiusOffset : S,\n      V = e.activeOuterRadiusOffset,\n      B = void 0 === V ? Y.activeOuterRadiusOffset : V,\n      G = e.width,\n      E = e.height,\n      D = e.margin,\n      F = e.colors,\n      H = void 0 === F ? Y.colors : F,\n      j = e.borderWidth,\n      q = void 0 === j ? Y.borderWidth : j,\n      z = e.borderColor,\n      Q = void 0 === z ? Y.borderColor : z,\n      U = e.enableArcLabels,\n      Z = void 0 === U ? Y.enableArcLabels : U,\n      $ = e.arcLabel,\n      _ = void 0 === $ ? Y.arcLabel : $,\n      ee = e.arcLabelsSkipAngle,\n      ie = void 0 === ee ? Y.arcLabelsSkipAngle : ee,\n      te = e.arcLabelsTextColor,\n      ne = void 0 === te ? Y.arcLabelsTextColor : te,\n      re = e.arcLabelsRadiusOffset,\n      ae = void 0 === re ? Y.arcLabelsRadiusOffset : re,\n      oe = e.arcLabelsComponent,\n      de = e.enableArcLinkLabels,\n      le = void 0 === de ? Y.enableArcLinkLabels : de,\n      se = e.arcLinkLabel,\n      ce = void 0 === se ? Y.arcLinkLabel : se,\n      ue = e.arcLinkLabelsSkipAngle,\n      ve = void 0 === ue ? Y.arcLinkLabelsSkipAngle : ue,\n      fe = e.arcLinkLabelsOffset,\n      ge = void 0 === fe ? Y.arcLinkLabelsOffset : fe,\n      Le = e.arcLinkLabelsDiagonalLength,\n      he = void 0 === Le ? Y.arcLinkLabelsDiagonalLength : Le,\n      be = e.arcLinkLabelsStraightLength,\n      pe = void 0 === be ? Y.arcLinkLabelsStraightLength : be,\n      ke = e.arcLinkLabelsThickness,\n      Ae = void 0 === ke ? Y.arcLinkLabelsThickness : ke,\n      Re = e.arcLinkLabelsTextOffset,\n      me = void 0 === Re ? Y.arcLinkLabelsTextOffset : Re,\n      Oe = e.arcLinkLabelsTextColor,\n      Ce = void 0 === Oe ? Y.arcLinkLabelsTextColor : Oe,\n      Ie = e.arcLinkLabelsColor,\n      xe = void 0 === Ie ? Y.arcLinkLabelsColor : Ie,\n      Me = e.arcLinkLabelComponent,\n      ye = e.defs,\n      we = void 0 === ye ? Y.defs : ye,\n      We = e.fill,\n      Se = void 0 === We ? Y.fill : We,\n      Te = e.isInteractive,\n      Ve = void 0 === Te ? Y.isInteractive : Te,\n      Be = e.onClick,\n      Ge = e.onMouseEnter,\n      Ee = e.onMouseMove,\n      De = e.onMouseLeave,\n      Fe = e.tooltip,\n      He = void 0 === Fe ? Y.tooltip : Fe,\n      Xe = e.transitionMode,\n      Ye = void 0 === Xe ? Y.transitionMode : Xe,\n      je = e.legends,\n      Pe = void 0 === je ? Y.legends : je,\n      qe = e.role,\n      ze = void 0 === qe ? Y.role : qe,\n      Je = v(G, E, D),\n      Ke = Je.outerWidth,\n      Ne = Je.outerHeight,\n      Qe = Je.margin,\n      Ue = Je.innerWidth,\n      Ze = Je.innerHeight,\n      $e = P({\n    data: i,\n    id: a,\n    value: d,\n    valueFormat: l,\n    colors: H\n  }),\n      _e = J({\n    data: $e,\n    width: Ue,\n    height: Ze,\n    fit: I,\n    innerRadius: M,\n    startAngle: b,\n    endAngle: k,\n    padAngle: O,\n    sortByValue: c,\n    cornerRadius: w,\n    activeInnerRadiusOffset: T,\n    activeOuterRadiusOffset: B\n  }),\n      ei = _e.dataWithArc,\n      ii = _e.legendData,\n      ti = _e.arcGenerator,\n      ni = _e.centerX,\n      ri = _e.centerY,\n      ai = _e.radius,\n      oi = _e.innerRadius,\n      di = _e.setActiveId,\n      li = _e.toggleSerie,\n      si = f(we, ei, Se),\n      ci = {\n    arcLinkLabels: null,\n    arcs: null,\n    arcLabels: null,\n    legends: null\n  };\n\n  le && L.includes(\"arcLinkLabels\") && (ci.arcLinkLabels = W(R, {\n    center: [ni, ri],\n    data: ei,\n    label: ce,\n    skipAngle: ve,\n    offset: ge,\n    diagonalLength: he,\n    straightLength: pe,\n    strokeWidth: Ae,\n    textOffset: me,\n    textColor: Ce,\n    linkColor: xe,\n    component: Me\n  }, \"arcLinkLabels\")), L.includes(\"arcs\") && (ci.arcs = W(N, {\n    center: [ni, ri],\n    data: ei,\n    arcGenerator: ti,\n    borderWidth: q,\n    borderColor: Q,\n    isInteractive: Ve,\n    onClick: Be,\n    onMouseEnter: Ge,\n    onMouseMove: Ee,\n    onMouseLeave: De,\n    setActiveId: di,\n    tooltip: He,\n    transitionMode: Ye\n  }, \"arcs\")), Z && L.includes(\"arcLabels\") && (ci.arcLabels = W(m, {\n    center: [ni, ri],\n    data: ei,\n    label: _,\n    radiusOffset: ae,\n    skipAngle: ie,\n    textColor: ne,\n    transitionMode: Ye,\n    component: oe\n  }, \"arcLabels\")), Pe.length > 0 && L.includes(\"legends\") && (ci.legends = W(X, {\n    width: Ue,\n    height: Ze,\n    data: ii,\n    legends: Pe,\n    toggleSerie: li\n  }, \"legends\"));\n  var ui = K({\n    dataWithArc: ei,\n    arcGenerator: ti,\n    centerX: ni,\n    centerY: ri,\n    radius: ai,\n    innerRadius: oi\n  });\n  return W(g, {\n    width: Ke,\n    height: Ne,\n    margin: Qe,\n    defs: si,\n    role: ze,\n    children: L.map(function (e, i) {\n      return void 0 !== ci[e] ? ci[e] : \"function\" == typeof e ? W(r, {\n        children: n(e, ui)\n      }, i) : null;\n    })\n  });\n},\n    Z = function Z(e) {\n  var i = e.isInteractive,\n      t = void 0 === i ? Y.isInteractive : i,\n      n = e.animate,\n      r = void 0 === n ? Y.animate : n,\n      a = e.motionConfig,\n      o = void 0 === a ? Y.motionConfig : a,\n      d = e.theme,\n      l = e.renderWrapper,\n      s = F(e, Q);\n  return W(u, {\n    animate: r,\n    isInteractive: t,\n    motionConfig: o,\n    renderWrapper: l,\n    theme: d,\n    children: W(U, D({\n      isInteractive: t\n    }, s))\n  });\n},\n    $ = function $(e) {\n  return W(L, {\n    children: function children(i) {\n      var t = i.width,\n          n = i.height;\n      return W(Z, D({\n        width: t,\n        height: n\n      }, e));\n    }\n  });\n},\n    _ = [\"isInteractive\", \"theme\", \"renderWrapper\"],\n    ee = function ee(i) {\n  var t = i.data,\n      r = i.id,\n      d = void 0 === r ? Y.id : r,\n      l = i.value,\n      s = void 0 === l ? Y.value : l,\n      c = i.valueFormat,\n      u = i.sortByValue,\n      f = void 0 === u ? Y.sortByValue : u,\n      g = i.startAngle,\n      L = void 0 === g ? Y.startAngle : g,\n      p = i.endAngle,\n      k = void 0 === p ? Y.endAngle : p,\n      A = i.padAngle,\n      R = void 0 === A ? Y.padAngle : A,\n      m = i.fit,\n      y = void 0 === m ? Y.fit : m,\n      S = i.innerRadius,\n      T = void 0 === S ? Y.innerRadius : S,\n      V = i.cornerRadius,\n      G = void 0 === V ? Y.cornerRadius : V,\n      F = i.activeInnerRadiusOffset,\n      H = void 0 === F ? Y.activeInnerRadiusOffset : F,\n      X = i.activeOuterRadiusOffset,\n      j = void 0 === X ? Y.activeOuterRadiusOffset : X,\n      q = i.width,\n      z = i.height,\n      K = i.margin,\n      N = i.pixelRatio,\n      Q = void 0 === N ? 1 : N,\n      U = i.colors,\n      Z = void 0 === U ? Y.colors : U,\n      $ = i.borderWidth,\n      _ = void 0 === $ ? Y.borderWidth : $,\n      ee = i.borderColor,\n      ie = void 0 === ee ? Y.borderColor : ee,\n      te = i.enableArcLabels,\n      ne = void 0 === te ? Y.enableArcLabels : te,\n      re = i.arcLabel,\n      ae = void 0 === re ? Y.arcLabel : re,\n      oe = i.arcLabelsSkipAngle,\n      de = void 0 === oe ? Y.arcLabelsSkipAngle : oe,\n      le = i.arcLabelsTextColor,\n      se = void 0 === le ? Y.arcLabelsTextColor : le,\n      ce = i.arcLabelsRadiusOffset,\n      ue = void 0 === ce ? Y.arcLabelsRadiusOffset : ce,\n      ve = i.enableArcLinkLabels,\n      fe = void 0 === ve ? Y.enableArcLinkLabels : ve,\n      ge = i.arcLinkLabel,\n      Le = void 0 === ge ? Y.arcLinkLabel : ge,\n      he = i.arcLinkLabelsSkipAngle,\n      be = void 0 === he ? Y.arcLinkLabelsSkipAngle : he,\n      pe = i.arcLinkLabelsOffset,\n      ke = void 0 === pe ? Y.arcLinkLabelsOffset : pe,\n      Ae = i.arcLinkLabelsDiagonalLength,\n      Re = void 0 === Ae ? Y.arcLinkLabelsDiagonalLength : Ae,\n      me = i.arcLinkLabelsStraightLength,\n      Oe = void 0 === me ? Y.arcLinkLabelsStraightLength : me,\n      Ce = i.arcLinkLabelsThickness,\n      Ie = void 0 === Ce ? Y.arcLinkLabelsThickness : Ce,\n      xe = i.arcLinkLabelsTextOffset,\n      Me = void 0 === xe ? Y.arcLinkLabelsTextOffset : xe,\n      ye = i.arcLinkLabelsTextColor,\n      we = void 0 === ye ? Y.arcLinkLabelsTextColor : ye,\n      We = i.arcLinkLabelsColor,\n      Se = void 0 === We ? Y.arcLinkLabelsColor : We,\n      Te = i.isInteractive,\n      Ve = void 0 === Te ? Y.isInteractive : Te,\n      Be = i.onClick,\n      Ge = i.onMouseMove,\n      Ee = i.tooltip,\n      De = void 0 === Ee ? Y.tooltip : Ee,\n      Fe = i.legends,\n      He = void 0 === Fe ? Y.legends : Fe,\n      Xe = a(null),\n      Ye = h(),\n      je = v(q, z, K),\n      Pe = je.margin,\n      qe = je.innerWidth,\n      ze = je.innerHeight,\n      Je = je.outerWidth,\n      Ke = je.outerHeight,\n      Ne = P({\n    data: t,\n    id: d,\n    value: s,\n    valueFormat: c,\n    colors: Z\n  }),\n      Qe = J({\n    data: Ne,\n    width: qe,\n    height: ze,\n    fit: y,\n    innerRadius: T,\n    startAngle: L,\n    endAngle: k,\n    padAngle: R,\n    sortByValue: f,\n    cornerRadius: G,\n    activeInnerRadiusOffset: H,\n    activeOuterRadiusOffset: j\n  }),\n      Ue = Qe.dataWithArc,\n      Ze = Qe.arcGenerator,\n      $e = Qe.centerX,\n      _e = Qe.centerY,\n      ei = Qe.radius,\n      ii = Qe.innerRadius,\n      ti = Qe.setActiveId,\n      ni = B(ie, Ye),\n      ri = O({\n    data: Ue,\n    label: ae,\n    skipAngle: de,\n    offset: ue,\n    textColor: se\n  }),\n      ai = C({\n    data: Ue,\n    skipAngle: be,\n    offset: ke,\n    diagonalLength: Re,\n    straightLength: Oe,\n    label: Le,\n    linkColor: Se,\n    textOffset: Me,\n    textColor: we\n  });\n\n  o(function () {\n    if (Xe.current) {\n      Xe.current.width = Je * Q, Xe.current.height = Ke * Q;\n      var e = Xe.current.getContext(\"2d\");\n      e.scale(Q, Q), e.fillStyle = Ye.background, e.fillRect(0, 0, Je, Ke), e.save(), e.translate(Pe.left, Pe.top), Ze.context(e), e.save(), e.translate($e, _e), Ue.forEach(function (i) {\n        e.beginPath(), e.fillStyle = i.color, e.strokeStyle = ni(i), e.lineWidth = _, Ze(i.arc), e.fill(), _ > 0 && e.stroke();\n      }), !0 === fe && I(e, ai, Ye, Ie), !0 === ne && x(e, ri, Ye), e.restore(), He.forEach(function (i) {\n        w(e, D({}, i, {\n          data: Ue,\n          containerWidth: qe,\n          containerHeight: ze,\n          theme: Ye\n        }));\n      });\n    }\n  }, [Xe, qe, ze, Je, Ke, Pe.top, Pe.left, Q, $e, _e, Ze, Ue, ni, ne, ri, fe, ai, Ie, He, Ye]);\n\n  var oi = e(function () {\n    return Ue.map(function (e) {\n      return D({\n        id: e.id\n      }, e.arc);\n    });\n  }, [Ue]),\n      di = function di(e) {\n    if (!Xe.current) return null;\n    var i = b(Xe.current, e),\n        t = i[0],\n        n = i[1],\n        r = M(Pe.left + $e, Pe.top + _e, ei, ii, oi, t, n);\n    return r ? Ue.find(function (e) {\n      return e.id === r.id;\n    }) : null;\n  },\n      li = E(),\n      si = li.showTooltipFromEvent,\n      ci = li.hideTooltip,\n      ui = function ui(e) {\n    var i = di(e);\n    i ? (null == Ge || Ge(i, e), ti(i.id), si(n(De, {\n      datum: i\n    }), e)) : (ti(null), ci());\n  };\n\n  return W(\"canvas\", {\n    ref: Xe,\n    width: Je * Q,\n    height: Ke * Q,\n    style: {\n      width: Je,\n      height: Ke,\n      cursor: Ve ? \"auto\" : \"normal\"\n    },\n    onMouseEnter: Ve ? ui : void 0,\n    onMouseMove: Ve ? ui : void 0,\n    onMouseLeave: Ve ? function () {\n      ci();\n    } : void 0,\n    onClick: Ve ? function (e) {\n      if (Be) {\n        var i = di(e);\n        i && Be(i, e);\n      }\n    } : void 0\n  });\n},\n    ie = function ie(e) {\n  var i = e.isInteractive,\n      t = void 0 === i ? Y.isInteractive : i,\n      n = e.theme,\n      r = e.renderWrapper,\n      a = F(e, _);\n  return W(u, {\n    isInteractive: t,\n    renderWrapper: r,\n    theme: n,\n    children: W(ee, D({\n      isInteractive: t\n    }, a))\n  });\n},\n    te = function te(e) {\n  return W(L, {\n    children: function children(i) {\n      var t = i.width,\n          n = i.height;\n      return W(ie, D({\n        width: t,\n        height: n\n      }, e));\n    }\n  });\n};\n\nexport { Z as Pie, ie as PieCanvas, $ as ResponsivePie, te as ResponsivePieCanvas, Y as defaultProps, P as useNormalizedData, z as usePie, q as usePieArcs, J as usePieFromBox, K as usePieLayerContext };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;;AAAA;AAAA,IAAMA,IAAa,SAAbA,CAAa;AAAA,MACfC,WADe;AAAA,MAEfC,YAFe;AAAA,MAGfC,aAHe;AAAA,MAIfC,UAJe;AAAA,MAKfC,iBALe;AAKfA,SAGIC;AAAAA,cACKH,EAAQI,GAARJ,CAAY,UAACK,CAAD,EAASC,CAAT,EAASA;AAAAA;AAAAA,aAClBH,EAACI,CAADJ,EAACI,MAEOF,CAFPE,EAEOF;AACJG,wBAAgBV,CADZO;AAEJI,yBAAiBV,CAFbM;AAGJJ,2BAAMI,EAAOJ,IAAbA,IAAaA,CAAbA,GAAqBA,CAHjBI;AAIJH,qBAAaG,EAAOH,WAAPG,GAAqBH,CAArBG,GAAqBH,KAAcQ;AAJ5CL,OAFPE,CAADJ,EACSG,CADTH,CADkBG;AAETA,KAFZN;AADLG,IAHJD;AAMqBI,CAXzB;AAAA,ICPaK,IAAe;AACxBC,MAAI,IADoB;AAExBC,SAAO,OAFiB;AAGxBC,gBAAa,CAHW;AAIxBC,eAAa,CAJW;AAKxBC,YAAU,CALc;AAMxBC,gBAAc,CANU;AAQxBC,UAAQ,CAAC,eAAD,EAAkB,MAAlB,EAA0B,WAA1B,EAAuC,SAAvC,CARgB;AAWxBC,cAAY,CAXY;AAYxBC,YAAU,GAZc;AAaxBC,QAAK,CAbmB;AAcxBC,2BAAyB,CAdD;AAexBC,2BAAyB,CAfD;AAkBxBC,eAAa,CAlBW;AAmBxBC,eAAa;AACTC,UAAM,OADG;AAETC,eAAW,CAAC,CAAC,QAAD,EAAW,CAAX,CAAD;AAFF,GAnBW;AAyBxBC,oBAAiB,CAzBO;AA0BxBC,YAAU,gBA1Bc;AA2BxBC,sBAAoB,CA3BI;AA4BxBC,yBAAuB,EA5BC;AA6BxBC,sBAAoB;AAAEC,WAAO;AAAT,GA7BI;AAgCxBC,wBAAqB,CAhCG;AAiCxBC,gBAAc,IAjCU;AAkCxBC,0BAAwB,CAlCA;AAmCxBC,uBAAqB,CAnCG;AAoCxBC,+BAA6B,EApCL;AAqCxBC,+BAA6B,EArCL;AAsCxBC,0BAAwB,CAtCA;AAuCxBC,2BAAyB,CAvCD;AAwCxBC,0BAAwB;AAAET,WAAO;AAAT,GAxCA;AAyCxBU,sBAAoB;AAAEV,WAAO;AAAT,GAzCI;AA2CxBW,UAAQ;AAAEC,YAAQ;AAAV,GA3CgB;AA4CxBC,QAAM,EA5CkB;AA6CxBC,QAAM,EA7CkB;AA+CxBC,kBAAe,CA/CS;AAiDxBC,YAAS,CAjDe;AAkDxBC,gBAAc,QAlDU;AAmDxBC,kBAAgB,aAnDQ;AAqDxBC,WCtDsB;AAAA,QAAcC,WAAd;AAAcA,WACpClD,EAACmD,CAADnD,EAACmD;AACG1C,UAAIyC,EAAMzC,EADb0C;AAEGzC,aAAOwC,EAAME,cAFhBD;AAGGE,mBAAY,CAHfF;AAIGG,aAAOJ,EAAMI;AAJhBH,KAADnD,CADoCkD;AAKnBI,GDJO;AAuDxBzD,WAAS,EAvDe;AAyDxB0D,QAAM,KAzDkB;AA2DxBC,cAA8B,sBAAXC,MAAW,IAAXA,aAAyBA,OAAOC,gBAAhCD,CAAW,GAAqBC,CAArB,GAA6C;AA3DnD,CDO5B;AAAA,ICoD+EC,cDpD/E;AAAA,IGUaC,IAAoB,SAApBA,CAAoB;AAAA,MAC7B9D,UAD6B;AAAA,MAC7BA,MACAW,EAF6B;AAAA,MAE7BA,mBAAKD,EAAaC,EAAlBA,GAAkBA,CAFW;AAAA,MAEXA,MAClBC,KAH6B;AAAA,MAG7BA,mBAAQF,EAAaE,KAArBA,GAAqBA,CAHQ;AAAA,MAI7BmD,iBAJ6B;AAAA,MAI7BA,MACApB,MAL6B;AAAA,MAK7BA,mBAASjC,EAAaiC,MAAtBA,GAAsBA,CALO;AAAA,MAWvBqB,IAAQC,EAAuCtD,CAAvCsD,CAXe;AAAA,MAYvBC,IAAWD,EAAsCrD,CAAtCqD,CAZY;AAAA,MAavBE,IAAcC,EAA0BL,CAA1BK,CAbS;AAAA,MAevBC,IAAWC,EACb3B,CADa2B,EAEb,IAFaA,CAfY;AAiBzB,SAGGC,EACH;AAAA,WACIvE,EAAKG,GAALH,CAAS;AAAAoD;AAAAA,UACCoB,IAAUR,EAAMZ,CAANY,CADXZ;AAAAA,UAECqB,IAAaP,EAASd,CAATc,CAFdd;AAAAA,UAICsB,IAA2E;AAC7E/D,YAAI6D,CADyE;AAE7EG,4BAAOvB,EAAMuB,KAAbA,IAAaA,CAAbA,GAAsBH,CAFuD;AAG7EI,iBAAQ,CAHqE;AAI7EhE,eAAO6D,CAJsE;AAK7EnB,wBAAgBa,EAAYM,CAAZN,CAL6D;AAM7EnE,cAAMoD;AANuE,OAJ5EA;AAUKA,mBAIHsB,CAJGtB,EAIHsB;AACHlB,eAAOa,EAASK,CAATL;AADJK,OAJGtB;AAKUsB,KAfxB1E,CADJ;AAgB4B0E,GAjBzBH,EAoBH,CAACvE,CAAD,EAAOgE,CAAP,EAAcE,CAAd,EAAwBC,CAAxB,EAAqCE,CAArC,CApBGE,CAHH;AAuBqCF,CHlD7C;AAAA,IGyDaQ,IAAa,SAAbA,CAAa;AAAA,MACtB7E,UADsB;AAAA,MAEtBkB,gBAFsB;AAAA,MAGtBC,cAHsB;AAAA,MAItBL,iBAJsB;AAAA,MAKtBgE,iBALsB;AAAA,MAMtB/D,cANsB;AAAA,MAOtBF,iBAPsB;AAAA,MAQtBkE,cARsB;AAAA,MAStB1D,6BATsB;AAAA,MAUtBC,6BAVsB;AAAA,MAWtB0D,eAXsB;AAAA,MAgChBC,IAAMV,EAAQ;AAAA,QACVW,IAAWC,IACZvE,KADYuE,CACN;AAAAC,aAAKA,EAAExE,KAAPwE;AAAOxE,KADDuE,EAEZjE,UAFYiE,CAEDE,EAAiBnE,CAAjBmE,CAFCF,EAGZhE,QAHYgE,CAGHE,EAAiBlE,CAAjBkE,CAHGF,EAIZpE,QAJYoE,CAIHE,EAAiBtE,CAAjBsE,CAJGF,CADD;AAKepE,WAE1BF,KACDqE,EAASI,UAATJ,CAAoB,IAApBA,CADCrE,EAIEqE,CANwBnE;AAMxBmE,GAXCX,EAYT,CAACrD,CAAD,EAAaC,CAAb,EAAuBJ,CAAvB,EAAiCF,CAAjC,CAZS0D,CAhCU;AA4Cc1D,SAE7B0D,EAAQ;AAAA,QACLgB,IAAavF,EAAKwF,MAALxF,CAAY;AAAAyF,cAAST,EAAUU,QAAVV,CAAmBS,EAAK9E,EAAxBqE,CAATS;AAAiC9E,KAA7CX,CADR;AACqDW,WAoCzD;AAAEgF,mBAnCWV,EAAIM,CAAJN,EAAgB9E,GAAhB8E,CAChB,UACIW,CADJ,EACIA;AAAAA,YAOMC,IAAQC,KAAKC,GAALD,CAASF,EAAIzE,QAAJyE,GAAeA,EAAI1E,UAA5B4E,CAPdF;AAO0C1E,qBAGnC0E,EAAI5F,IAH+BkB,EAG/BlB;AACP4F,eAAK;AACDI,mBAAOJ,EAAII,KADV;AAED9E,wBAAY0E,EAAI1E,UAFf;AAGDC,sBAAUyE,EAAIzE,QAHb;AAIDL,yBACIiE,MAAaa,EAAI5F,IAAJ4F,CAASjF,EAAtBoE,GACMjE,IAAcO,CADpB0D,GAEMjE,CAPT;AAQDgE,yBACIC,MAAaa,EAAI5F,IAAJ4F,CAASjF,EAAtBoE,GACMD,IAAcxD,CADpByD,GAEMD,CAXT;AAYDmB,uBAAWnB,IAAchE,CAZxB;AAaDC,sBAAU6E,EAAI7E,QAbb;AAcD8E,oBAdC;AAeDK,sBAAUC,EAAiBN,CAAjBM;AAfT;AADEnG,SAH+BkB;AAmBP2E,OA5BvBZ,CAmCb;AAAemB,kBAFHpG,EAAKG,GAALH,CAAS;AAAAyF,qBAAcA,CAAdA,EAAcA;AAAMb,kBAAQI,EAAUU,QAAVV,CAAmBS,EAAK9E,EAAxBqE;AAAdS,SAAdA;AAAoD9E,OAA7DX;AAEZ,KApCyDW;AAkCgBA,GAnC7E4D,EAsCJ,CACCU,CADD,EAECjF,CAFD,EAGCgF,CAHD,EAICD,CAJD,EAKCjE,CALD,EAMCO,CAND,EAOCyD,CAPD,EAQCxD,CARD,CAtCIiD,CAF6B1D;AAgDhCS,CHrJR;AAAA,IG6Ja+E,IAAS,SAATA,CAAS;AAAA,MAClBrG,UADkB;AAAA,MAElBsG,YAFkB;AAAA,MAGlBxF,iBAHkB;AAAA,MAGlBA,MACAI,UAJkB;AAAA,MAIlBA,mBAAaR,EAAaQ,UAA1BA,GAA0BA,CAJR;AAAA,MAIQA,MAC1BC,QALkB;AAAA,MAKlBA,mBAAWT,EAAaS,QAAxBA,GAAwBA,CALN;AAAA,MAKMA,MACxBJ,QANkB;AAAA,MAMlBA,mBAAWL,EAAaK,QAAxBA,GAAwBA,CANN;AAAA,MAMMA,MACxBF,WAPkB;AAAA,MAOlBA,mBAAcH,EAAaG,WAA3BA,GAA2BA,CAPT;AAAA,MAOSA,MAC3BG,YARkB;AAAA,MAQlBA,mBAAeN,EAAaM,YAA5BA,GAA4BA,CARV;AAAA,MAQUA,MAC5BK,uBATkB;AAAA,MASlBA,mBAA0BX,EAAaW,uBAAvCA,GAAuCA,CATrB;AAAA,MASqBA,MACvCC,uBAVkB;AAAA,MAUlBA,mBAA0BZ,EAAaY,uBAAvCA,GAAuCA,CAVrB;AAAA,MAUqBA,IAePiF,EAAyB,IAAzBA,CAzBd;AAAA,MAyBXxB,QAzBW;AAAA,MAyBDyB,QAzBC;AAAA,MAyBDA,IACiBD,EAAoB,EAApBA,CA1BhB;AAAA,MA0BXvB,QA1BW;AAAA,MA0BAyB,QA1BA;AAAA,MA2BZC,IAAU7B,EAAW;AACvB7E,WADuB;AAEvBkB,iBAFuB;AAGvBC,eAHuB;AAIvBL,kBAJuB;AAKvBgE,iBAAawB,CALU;AAMvBvF,eANuB;AAOvBF,kBAPuB;AAQvBkE,eARuB;AASvB1D,8BATuB;AAUvBC,8BAVuB;AAWvB0D;AAXuB,GAAXH,CA3BE;AAAA,MAyCZ5E,IAAc0G,EAAY,UAAChG,CAAD,EAACA;AAC7B8F,MAAa;AAAAG,aACTA,EAAMC,OAAND,CAAcjG,CAAdiG,IAAcjG,CAAO,CAArBiG,GAAyBA,EAAMpB,MAANoB,CAAa;AAAAnB,eAAQA,MAAS9E,CAAjB8E;AAAiB9E,OAA9BiG,CAAzBA,GAAuDjG,UAAUiG,CAAVjG,EAAUiG,CAAOjG,CAAPiG,CAAVjG,CAD9CiG;AAC+DjG,KAD5E8F;AAC4E9F,GAF5DgG,EAIjB,EAJiBA,CAzCF;AA6Cf,eAISD,CAJT,EAISA;AAASI,kBAFAC,EAAgB;AAAE/F,qBAAF;AAAgBD,gBAAUsE,EAAiBtE,CAAjBsE;AAA1B,KAAhB0B,CAETL;AAAuBF,kBAAvBE;AAAoCzG;AAApCyG,GAJT;AAI6CzG,CH9MpD;AAAA,IGyNa+G,IAAgB,SAAhBA,CAAgB;AAAA,MACzBhH,UADyB;AAAA,MAEzBH,WAFyB;AAAA,MAGzBC,YAHyB;AAAA,MAGzBA,MACAgB,WAJyB;AAAA,MAIZmG,mBAAmBvG,EAAaI,WAAhCmG,GAAgCnG,CAJpB;AAAA,MAIoBA,MAC7CI,UALyB;AAAA,MAKzBA,mBAAaR,EAAaQ,UAA1BA,GAA0BA,CALD;AAAA,MAKCA,MAC1BC,QANyB;AAAA,MAMzBA,mBAAWT,EAAaS,QAAxBA,GAAwBA,CANC;AAAA,MAMDA,MACxBJ,QAPyB;AAAA,MAOzBA,mBAAWL,EAAaK,QAAxBA,GAAwBA,CAPC;AAAA,MAODA,MACxBF,WARyB;AAAA,MAQzBA,mBAAcH,EAAaG,WAA3BA,GAA2BA,CARF;AAAA,MAQEA,MAC3BG,YATyB;AAAA,MASzBA,mBAAeN,EAAaM,YAA5BA,GAA4BA,CATH;AAAA,MASGA,MAC5BI,GAVyB;AAAA,MAUzBA,mBAAMV,EAAaU,GAAnBA,GAAmBA,CAVM;AAAA,MAUNA,MACnBC,uBAXyB;AAAA,MAWzBA,mBAA0BX,EAAaW,uBAAvCA,GAAuCA,CAXd;AAAA,MAWcA,MACvCC,uBAZyB;AAAA,MAYzBA,mBAA0BZ,EAAaY,uBAAvCA,GAAuCA,CAZd;AAAA,MAYcA,IAiBPiF,EAAiC,IAAjCA,CA7BP;AAAA,MA6BlBxB,QA7BkB;AAAA,MA6BRyB,QA7BQ;AAAA,MA6BRA,IACiBD,EAAoB,EAApBA,CA9BT;AAAA,MA8BlBvB,QA9BkB;AAAA,MA8BPyB,QA9BO;AAAA,MA+BnBS,IAAgB3C,EAAQ;AAAA,QAOtB4C,CAPsB;AAAA,QACtBb,IAASR,KAAKsB,GAALtB,CAASjG,CAATiG,EAAgBhG,CAAhBgG,IAA0B,CADb;AAAA,QAEtBhF,IAAcwF,IAASR,KAAKsB,GAALtB,CAASmB,CAATnB,EAA2B,CAA3BA,CAFD;AAAA,QAItBuB,IAAUxH,IAAQ,CAJI;AAAA,QAKtByH,IAAUxH,IAAS,CALG;;AAKH,QAGnBsB,CAHmB,EAGd;AAAA,cACsBmG,EACvBF,CADuBE,EAEvBD,CAFuBC,EAGvBjB,CAHuBiB,EAIvBrG,IAAa,EAJUqG,EAKvBpG,IAAW,EALYoG,CADtB;AAAA,UACGC,YADH;AAAA,UACcC,WADd;AAAA,UAQCC,IAAQ5B,KAAKsB,GAALtB,CAASjG,IAAQ4H,EAAI5H,KAArBiG,EAA4BhG,IAAS2H,EAAI3H,MAAzCgG,CART;AAAA,UAUC6B,IAKF;AACA9H,eAAO4H,EAAI5H,KAAJ4H,GAAYC,CADnB;AAEA5H,gBAAQ2H,EAAI3H,MAAJ2H,GAAaC;AAFrB,OAfC;AAmBLC,QAAYC,CAAZD,GAAYC,CAAK/H,IAAQ8H,EAAY9H,KAAzB+H,IAAkC,CAA9CD,EACAA,EAAYE,CAAZF,GAAYE,CAAK/H,IAAS6H,EAAY7H,MAA1B+H,IAAoC,CADhDF,EAGAN,KAAYA,IAAUI,EAAIG,CAA1BP,IAA+BI,EAAI5H,KAAnCwH,GAA4CI,EAAI5H,KAAhDwH,GAAwDK,CAAxDL,GAAgEM,EAAYC,CAH5ED,EAIAL,KAAYA,IAAUG,EAAII,CAA1BP,IAA+BG,EAAI3H,MAAnCwH,GAA6CG,EAAI3H,MAAjDwH,GAA0DI,CAA1DJ,GAAkEK,EAAYE,CAJ9EF,EAMAR,IAAc;AAAEM,cAAF;AAAOC,gBAAP;AAAcF;AAAd,OANdG,EAQArB,KAAkBoB,CARlBC,EASA7G,KAA4B4G,CAT5BC;AAS4BD;;AAAAA,WAGzB;AACHL,gBADG;AAEHC,gBAFG;AAGHhB,eAHG;AAIHxF,oBAJG;AAKHgH,aAAOX;AALJ,KAHyBO;AAQrBP,GA5CO5C,EA8CnB,CAAC1E,CAAD,EAAQC,CAAR,EAAgBmH,CAAhB,EAAkC/F,CAAlC,EAA8CC,CAA9C,EAAwDC,CAAxD,EAA6DJ,CAA7D,CA9CmBuD,CA/BG;AAAA,MA+EnBmC,IAAU7B,EAAW;AACvB7E,WADuB;AAEvBkB,iBAFuB;AAGvBC,eAHuB;AAIvBL,iBAAaoG,EAAcpG,WAJJ;AAKvBgE,iBAAaoC,EAAcZ,MALJ;AAMvBvF,eANuB;AAOvBF,kBAPuB;AAQvBkE,eARuB;AASvB1D,8BATuB;AAUvBC,8BAVuB;AAWvB0D;AAXuB,GAAXH,CA/ES;AAAA,MA6FnB5E,IAAc0G,EAAY,UAAChG,CAAD,EAACA;AAC7B8F,MAAa;AAAAG,aACTA,EAAMC,OAAND,CAAcjG,CAAdiG,IAAcjG,CAAO,CAArBiG,GAAyBA,EAAMpB,MAANoB,CAAa;AAAAnB,eAAQA,MAAS9E,CAAjB8E;AAAiB9E,OAA9BiG,CAAzBA,GAAuDjG,UAAUiG,CAAVjG,EAAUiG,CAAOjG,CAAPiG,CAAVjG,CAD9CiG;AAC+DjG,KAD5E8F;AAC4E9F,GAF5DgG,EAIjB,EAJiBA,CA7FK;AAiGtB;AAQCG,kBANiBC,EAAgB;AACjC/F,qBADiC;AAEjCD,gBAAUsE,EAAiBtE,CAAjBsE;AAFuB,KAAhB0B,CAFlB;AASCP,kBATD;AAUCvG;AAVD,KAWIyG,CAXJ,EAYIQ,CAZJ;AAYIA,CHtUX;AAAA,IG6Uaa,IAAqB,SAArBA,CAAqB;AAAA,MAC9BpC,iBAD8B;AAAA,MAE9BmB,kBAF8B;AAAA,MAG9BO,aAH8B;AAAA,MAI9BC,aAJ8B;AAAA,MAK9BhB,YAL8B;AAAA,MAM9BxF,iBAN8B;AAM9BA,SAEAyD,EACI;AAAA,WAAO;AACHoB,oBADG;AAEHmB,qBAFG;AAGHO,gBAHG;AAIHC,gBAJG;AAKHhB,eALG;AAMHxF;AANG,KAAP;AAMIA,GAPRyD,EASI,CAACoB,CAAD,EAAcmB,CAAd,EAA4BO,CAA5B,EAAqCC,CAArC,EAA8ChB,CAA9C,EAAsDxF,CAAtD,CATJyD,CAFAzD;AAW0DA,CH9V9D;AAAA,IIWakH,IAAO,SAAPA,CAAO;AAAA,MAChBC,YADgB;AAAA,MAEhBjI,UAFgB;AAAA,MAGhB8G,kBAHgB;AAAA,MAIhBvF,iBAJgB;AAAA,MAKhBC,iBALgB;AAAA,MAMhBuB,mBANgB;AAAA,MAOhBmF,aAPgB;AAAA,MAQhBC,kBARgB;AAAA,MAShBC,iBATgB;AAAA,MAUhBC,kBAVgB;AAAA,MAWhB7B,iBAXgB;AAAA,MAYhBrD,aAZgB;AAAA,MAahBD,oBAbgB;AAAA,MAahBA,IAE8CoF,GAf9B;AAAA,MAeRC,0BAfQ;AAAA,MAecC,iBAfd;AAAA,MAiBVC,IAAclE,EAAQ;AAAA,QACnBxB,CADmB,EACnBA,OAEE,UAACK,CAAD,EAAiCsF,CAAjC,EAAiCA;AAAAA,cACpCR,CADoCQ,IACpCR,EAAU9E,CAAV8E,EAAiBQ,CAAjBR,CADoCQ;AACnBA,KAHhB3F;AAGgB2F,GAJLnE,EAMjB,CAACxB,CAAD,EAAgBmF,CAAhB,CANiB3D,CAjBJ;AAAA,MAyBVoE,IAAmBpE,EAAQ;AAAA,QACxBxB,CADwB,EACxBA,OAEE,UAACK,CAAD,EAAiCsF,CAAjC,EAAiCA;AACpCH,QAAqBK,EAAczF,CAAdyF,EAAuB;AAAExF;AAAF,OAAvBwF,CAArBL,EAAwDG,CAAxDH,GACA/B,EAAYpD,EAAMzC,EAAlB6F,CADA+B,EACkB5H,QAClBwH,CADkBxH,IAClBwH,EAAe/E,CAAf+E,EAAsBO,CAAtBP,CAFAI;AAEsBG,KALrB3F;AAKqB2F,GANLnE,EAQtB,CAACxB,CAAD,EAAgBwF,CAAhB,EAAsC/B,CAAtC,EAAmD2B,CAAnD,CARsB5D,CAzBT;AAAA,MAmCVsE,IAAkBtE,EAAQ;AAAA,QACvBxB,CADuB,EACvBA,OAEE,UAACK,CAAD,EAAiCsF,CAAjC,EAAiCA;AACpCH,QAAqBK,EAAczF,CAAdyF,EAAuB;AAAExF;AAAF,OAAvBwF,CAArBL,EAAwDG,CAAxDH,GAAwDG,QACxDN,CADwDM,IACxDN,EAAchF,CAAdgF,EAAqBM,CAArBN,CADAG;AACqBG,KAJpB3F;AAIoB2F,GALLnE,EAOrB,CAACxB,CAAD,EAAgBwF,CAAhB,EAAsCH,CAAtC,CAPqB7D,CAnCR;AAAA,MA4CVuE,IAAmBvE,EAAQ;AAAA,QACxBxB,CADwB,EACxBA,OAEE,UAACK,CAAD,EAAiCsF,CAAjC,EAAiCA;AACpCF,WACAhC,EAAY,IAAZA,CADAgC,EACY,QACZH,CADY,IACZA,EAAejF,CAAfiF,EAAsBK,CAAtBL,CAFAG;AAEsBE,KALrB3F;AAKqB2F,GANLnE,EAQtB,CAACxB,CAAD,EAAgByF,CAAhB,EAA6BhC,CAA7B,EAA0C6B,CAA1C,CARsB9D,CA5CT;AAoD6B8D,SAGzCnI,EAAC6I,CAAD7I,EAAC6I;AACGd,YAAQA,CADXc;AAEG/I,UAAMA,CAFT+I;AAGGjC,kBAAcA,CAHjBiC;AAIGxH,iBAAaA,CAJhBwH;AAKGvH,iBAAaA,CALhBuH;AAMG7F,oBAAgBA,CANnB6F;AAOGb,aAASO,CAPZM;AAQGZ,kBAAcQ,CARjBI;AASGX,iBAAaS,CAThBE;AAUGV,kBAAcS;AAVjBC,GAAD7I,CAHyCmI;AAavBS,CJ5E1B;AAAA,II4E0BA,0EJ5E1B;AAAA,IKKME,IAAW;AAAA,MACbhJ,UADa;AAAA,MACbA,MACAW,EAFa;AAAA,MAEbA,mBAAKD,EAAaC,EAAlBA,GAAkBA,CAFL;AAAA,MAEKA,MAClBC,KAHa;AAAA,MAGbA,mBAAQF,EAAaE,KAArBA,GAAqBA,CAHR;AAAA,MAIbmD,iBAJa;AAAA,MAIbA,MACAlD,WALa;AAAA,MAKbA,mBAAcH,EAAaG,WAA3BA,GAA2BA,CALd;AAAA,MAKcA,MAE3BI,MAPa;AAAA,MAObA,mBAASP,EAAaO,MAAtBA,GAAsBA,CAPT;AAAA,MAOSA,MAEtBC,UATa;AAAA,MASbA,mBAAaR,EAAaQ,UAA1BA,GAA0BA,CATb;AAAA,MASaA,MAC1BC,QAVa;AAAA,MAUbA,mBAAWT,EAAaS,QAAxBA,GAAwBA,CAVX;AAAA,MAUWA,MACxBJ,QAXa;AAAA,MAWbA,mBAAWL,EAAaK,QAAxBA,GAAwBA,CAXX;AAAA,MAWWA,MACxBK,GAZa;AAAA,MAYbA,mBAAMV,EAAaU,GAAnBA,GAAmBA,CAZN;AAAA,MAYMA,MACnBN,WAba;AAAA,MAaAmG,mBAAmBvG,EAAaI,WAAhCmG,GAAgCnG,CAbhC;AAAA,MAagCA,MAC7CE,YAda;AAAA,MAcbA,mBAAeN,EAAaM,YAA5BA,GAA4BA,CAdf;AAAA,MAceA,MAC5BK,uBAfa;AAAA,MAebA,mBAA0BX,EAAaW,uBAAvCA,GAAuCA,CAf1B;AAAA,MAe0BA,MACvCC,uBAhBa;AAAA,MAgBbA,mBAA0BZ,EAAaY,uBAAvCA,GAAuCA,CAhB1B;AAAA,MAkBbzB,WAlBa;AAAA,MAmBbC,YAnBa;AAAA,MAoBLmJ,MAARC,MApBa;AAAA,MAoBbA,MAEAvG,MAtBa;AAAA,MAsBbA,mBAASjC,EAAaiC,MAAtBA,GAAsBA,CAtBT;AAAA,MAsBSA,MAGtBpB,WAzBa;AAAA,MAyBbA,mBAAcb,EAAaa,WAA3BA,GAA2BA,CAzBd;AAAA,MAyBcA,MAC3BC,WA1Ba;AAAA,MA0BbA,mBAAcd,EAAac,WAA3BA,GAA2BA,CA1Bd;AAAA,MA0BcA,MAG3BG,eA7Ba;AAAA,MA6BbA,mBAAkBjB,EAAaiB,eAA/BA,GAA+BA,CA7BlB;AAAA,MA6BkBA,MAC/BC,QA9Ba;AAAA,MA8BbA,mBAAWlB,EAAakB,QAAxBA,GAAwBA,CA9BX;AAAA,MA8BWA,OACxBC,kBA/Ba;AAAA,MA+BbA,qBAAqBnB,EAAamB,kBAAlCA,GAAkCA,EA/BrB;AAAA,MA+BqBA,OAClCE,kBAhCa;AAAA,MAgCbA,qBAAqBrB,EAAaqB,kBAAlCA,GAAkCA,EAhCrB;AAAA,MAgCqBA,OAClCD,qBAjCa;AAAA,MAiCbA,qBAAwBpB,EAAaoB,qBAArCA,GAAqCA,EAjCxB;AAAA,MAkCbqH,yBAlCa;AAAA,MAkCbA,OAGAlH,mBArCa;AAAA,MAqCbA,qBAAsBvB,EAAauB,mBAAnCA,GAAmCA,EArCtB;AAAA,MAqCsBA,OACnCC,YAtCa;AAAA,MAsCbA,qBAAexB,EAAawB,YAA5BA,GAA4BA,EAtCf;AAAA,MAsCeA,OAC5BC,sBAvCa;AAAA,MAuCbA,qBAAyBzB,EAAayB,sBAAtCA,GAAsCA,EAvCzB;AAAA,MAuCyBA,OACtCC,mBAxCa;AAAA,MAwCbA,qBAAsB1B,EAAa0B,mBAAnCA,GAAmCA,EAxCtB;AAAA,MAwCsBA,OACnCC,2BAzCa;AAAA,MAyCbA,qBAA8B3B,EAAa2B,2BAA3CA,GAA2CA,EAzC9B;AAAA,MAyC8BA,OAC3CC,2BA1Ca;AAAA,MA0CbA,qBAA8B5B,EAAa4B,2BAA3CA,GAA2CA,EA1C9B;AAAA,MA0C8BA,OAC3CC,sBA3Ca;AAAA,MA2CbA,qBAAyB7B,EAAa6B,sBAAtCA,GAAsCA,EA3CzB;AAAA,MA2CyBA,OACtCC,uBA5Ca;AAAA,MA4CbA,qBAA0B9B,EAAa8B,uBAAvCA,GAAuCA,EA5C1B;AAAA,MA4C0BA,OACvCC,sBA7Ca;AAAA,MA6CbA,qBAAyB/B,EAAa+B,sBAAtCA,GAAsCA,EA7CzB;AAAA,MA6CyBA,OACtCC,kBA9Ca;AAAA,MA8CbA,qBAAqBhC,EAAagC,kBAAlCA,GAAkCA,EA9CrB;AAAA,MA+Cb0G,4BA/Ca;AAAA,MA+CbA,OAGAvG,IAlDa;AAAA,MAkDbA,qBAAOnC,EAAamC,IAApBA,GAAoBA,EAlDP;AAAA,MAkDOA,OACpBC,IAnDa;AAAA,MAmDbA,qBAAOpC,EAAaoC,IAApBA,GAAoBA,EAnDP;AAAA,MAmDOA,OAGpBC,aAtDa;AAAA,MAsDbA,qBAAgBrC,EAAaqC,aAA7BA,GAA6BA,EAtDhB;AAAA,MAuDbmF,cAvDa;AAAA,MAwDbC,mBAxDa;AAAA,MAyDbC,kBAzDa;AAAA,MA0DbC,mBA1Da;AAAA,MA0DbA,OACAlF,OA3Da;AAAA,MA2DbA,qBAAUzC,EAAayC,OAAvBA,GAAuBA,EA3DV;AAAA,MA2DUA,OAEvBD,cA7Da;AAAA,MA6DbA,qBAAiBxC,EAAawC,cAA9BA,GAA8BA,EA7DjB;AAAA,MA6DiBA,OAE9BnD,OA/Da;AAAA,MA+DbA,qBAAUW,EAAaX,OAAvBA,GAAuBA,EA/DV;AAAA,MA+DUA,OACvB0D,IAhEa;AAAA,MAgEbA,qBAAO/C,EAAa+C,IAApBA,GAAoBA,EAhEP;AAAA,MAgEOA,KAEiD4F,EACjExJ,CADiEwJ,EAEjEvJ,CAFiEuJ,EAGjEJ,CAHiEI,CAlExD;AAAA,MAkELC,kBAlEK;AAAA,MAkEOC,mBAlEP;AAAA,MAkEoBL,cAlEpB;AAAA,MAkE4BM,kBAlE5B;AAAA,MAkEwCC,mBAlExC;AAAA,MAwEPC,KAAiB5F,EAA4B;AAC/C9D,WAD+C;AAE/CW,SAF+C;AAG/CC,YAH+C;AAI/CmD,kBAJ+C;AAK/CpB;AAL+C,GAA5BmB,CAxEV;AAAA,MA6ETnB,KAaAqE,EAAwB;AACxBhH,UAAM0J,EADkB;AAExB7J,WAAO2J,EAFiB;AAGxB1J,YAAQ2J,EAHgB;AAIxBrI,UAJwB;AAKxBN,iBAAamG,CALW;AAMxB/F,iBANwB;AAOxBC,eAPwB;AAQxBJ,eARwB;AASxBF,kBATwB;AAUxBG,mBAVwB;AAWxBK,8BAXwB;AAYxBC;AAZwB,GAAxB0F,CA1FS;AAAA,MAiFTrB,mBAjFS;AAAA,MAkFTS,kBAlFS;AAAA,MAmFTU,oBAnFS;AAAA,MAoFTO,eApFS;AAAA,MAqFTC,eArFS;AAAA,MAsFThB,cAtFS;AAAA,MAuFTxF,mBAvFS;AAAA,MAwFT0F,mBAxFS;AAAA,MAyFTvG,mBAzFS;AAAA,MAyGP0J,KAAYC,EAAS/G,EAAT+G,EAAejE,EAAfiE,EAA4B9G,EAA5B8G,CAzGL;AAAA,MA2GPC,KAA2C;AAC7CC,mBAAe,IAD8B;AAE7CC,UAAM,IAFuC;AAG7CC,eAAW,IAHkC;AAI7CjK,aAAS;AAJoC,GA3GpC;;AAkHTkC,QAAuBhB,EAAOyE,QAAPzE,CAAgB,eAAhBA,CAAvBgB,KACA4H,GAAUC,aAAVD,GACI3J,EAAC+J,CAAD/J,EAAC+J;AAEGhC,YAAQ,CAACZ,EAAD,EAAUC,EAAV,CAFX2C;AAGGjK,UAAM2F,EAHTsE;AAIGtF,WAAOzC,EAJV+H;AAKGC,eAAW/H,EALd8H;AAMGE,YAAQ/H,EANX6H;AAOGG,oBAAgB/H,EAPnB4H;AAQGI,oBAAgB/H,EARnB2H;AASGK,iBAAa/H,EAThB0H;AAUGM,gBAAY/H,EAVfyH;AAWGO,eAAW/H,EAXdwH;AAYGQ,eAAW/H,EAZduH;AAaGS,eAAWtB;AAbda,GAAD/J,EACQ,eADRA,CAFJ+B,GAoBAhB,EAAOyE,QAAPzE,CAAgB,MAAhBA,MACA4I,GAAUE,IAAVF,GACI3J,EAAC8H,CAAD9H,EAAC8H;AAEGC,YAAQ,CAACZ,EAAD,EAAUC,EAAV,CAFXU;AAGGhI,UAAM2F,EAHTqC;AAIGlB,kBAAcA,EAJjBkB;AAKGzG,iBAAaA,CALhByG;AAMGxG,iBAAaA,CANhBwG;AAOGjF,mBAAeA,EAPlBiF;AAQGE,aAASA,EARZF;AASGG,kBAAcA,EATjBH;AAUGI,iBAAaA,EAVhBJ;AAWGK,kBAAcA,EAXjBL;AAYGxB,iBAAaA,EAZhBwB;AAaG7E,aAASA,EAbZ6E;AAcG9E,oBAAgBA;AAdnB8E,GAAD9H,EACQ,MADRA,CAFJe,CApBAgB,EAyCAN,KAAmBV,EAAOyE,QAAPzE,CAAgB,WAAhBA,CAAnBU,KACAkI,GAAUG,SAAVH,GACI3J,EAACyK,CAADzK,EAACyK;AAEG1C,YAAQ,CAACZ,EAAD,EAAUC,EAAV,CAFXqD;AAGG3K,UAAM2F,EAHTgF;AAIGhG,WAAO/C,CAJV+I;AAKGC,kBAAc9I,EALjB6I;AAMGT,eAAWrI,EANd8I;AAOGH,eAAWzI,EAPd4I;AAQGzH,oBAAgBA,EARnByH;AASGD,eAAWvB;AATdwB,GAADzK,EACQ,WADRA,CAFJyB,CAzCAM,EAyDAlC,GAAQ8K,MAAR9K,GAAiB,CAAjBA,IAAsBkB,EAAOyE,QAAPzE,CAAgB,SAAhBA,CAAtBlB,KACA8J,GAAU9J,OAAV8J,GACI3J,EAACN,CAADM,EAACN;AAEGC,WAAO2J,EAFV5J;AAGGE,YAAQ2J,EAHX7J;AAIGI,UAAMoG,EAJTxG;AAKGG,aAASA,EALZH;AAMGK,iBAAaA;AANhBL,GAADM,EACQ,SADRA,CAFJH,CAzDAkC;AA4DY,MAUV6I,KAAe/C,EAA6B;AAC9CpC,mBAD8C;AAE9CmB,oBAF8C;AAG9CO,eAH8C;AAI9CC,eAJ8C;AAK9ChB,cAL8C;AAM9CxF;AAN8C,GAA7BiH,CAVL;AAgBZjH,SAIAZ,EAAC6K,CAAD7K,EAAC6K;AACGlL,WAAOyJ,EADVyB;AAEGjL,YAAQyJ,EAFXwB;AAGG7B,YAAQA,EAHX6B;AAIGlI,UAAM8G,EAJToB;AAKGtH,UAAMA,EALTsH;AAKStH,cAELxC,EAAOd,GAAPc,CAAW,UAAC+J,CAAD,EAAQ3K,CAAR,EAAQA;AAAAA,kBACuBI,CADvBJ,KACZwJ,GAAUmB,CAAVnB,CADYxJ,GAELwJ,GAAUmB,CAAVnB,CAFKxJ,GAKK,qBAAV2K,CAAU,GACV9K,EAAC+K,CAAD/K,EAAC+K;AAAAA,kBAAkBrC,EAAcoC,CAAdpC,EAAqBkC,EAArBlC;AAAlBqC,OAAD/K,EAAeG,CAAfH,CADU,GAId,IATSG;AAST,KATVY;AAPJ8J,GAAD7K,CAJAY;AAoBe,CLvNvB;AAAA,IK6NaoK,IAAM,SAANA,CAAM;AAAA,YACfnI,aADe;AAAA,MACfA,mBAAgBrC,EAAaqC,aAA7BA,GAA6BA,CADd;AAAA,MACcA,MAC7BC,OAFe;AAAA,MAEfA,mBAAUtC,EAAasC,OAAvBA,GAAuBA,CAFR;AAAA,MAEQA,MACvBC,YAHe;AAAA,MAGfA,mBAAevC,EAAauC,YAA5BA,GAA4BA,CAHb;AAAA,MAIfjB,WAJe;AAAA,MAKfmJ,mBALe;AAAA,MAMZC,WANY;AAMZA,SAEHlL,EAACmL,CAADnL,EAACmL;AAEOrI,cAFPqI;AAGOtI,oBAHPsI;AAIOpI,mBAJPoI;AAKOF,oBALPE;AAMOrJ,YANPqJ;AAMOrJ,cAGJ9B,EAAC8I,CAAD9I,EAAC8I;AAAmBjG,qBAAeA;AAAlCiG,OAAqDoC,CAArDpC,CAAD9I;AATHmL,GAADnL,CAFGkL;AAWuDA,CL9O9D;AAAA,IMPaE,IAAgB,SAAhBA,CAAgB,CACzBC,CADyB,EACzBA;AAAAA,SAEArL,EAACsL,CAADtL,EAACsL;AAAAA,cACI;AAAA,UAAG3L,WAAH;AAAA,UAAUC,YAAV;AAAUA,aACPI,EAACgL,CAADhL,EAACgL;AAAcrL,eAAOA,CAArBqL;AAA4BpL,gBAAQA;AAApCoL,SAAgDK,CAAhDL,CAADhL,CADOJ;AAC0CyL;AAFxDC,GAADtL,CAFAqL;AAIyDA,CNE7D;AAAA,IMF6DA,+CNE7D;AAAA,IOOME,KAAiB;AAAA,MACnBzL,UADmB;AAAA,MACnBA,MACAW,EAFmB;AAAA,MAEnBA,mBAAKD,EAAaC,EAAlBA,GAAkBA,CAFC;AAAA,MAEDA,MAClBC,KAHmB;AAAA,MAGnBA,mBAAQF,EAAaE,KAArBA,GAAqBA,CAHF;AAAA,MAInBmD,iBAJmB;AAAA,MAInBA,MACAlD,WALmB;AAAA,MAKnBA,mBAAcH,EAAaG,WAA3BA,GAA2BA,CALR;AAAA,MAKQA,MAE3BK,UAPmB;AAAA,MAOnBA,mBAAaR,EAAaQ,UAA1BA,GAA0BA,CAPP;AAAA,MAOOA,MAC1BC,QARmB;AAAA,MAQnBA,mBAAWT,EAAaS,QAAxBA,GAAwBA,CARL;AAAA,MAQKA,MACxBJ,QATmB;AAAA,MASnBA,mBAAWL,EAAaK,QAAxBA,GAAwBA,CATL;AAAA,MASKA,MACxBK,GAVmB;AAAA,MAUnBA,mBAAMV,EAAaU,GAAnBA,GAAmBA,CAVA;AAAA,MAUAA,MACnBN,WAXmB;AAAA,MAWNmG,mBAAmBvG,EAAaI,WAAhCmG,GAAgCnG,CAX1B;AAAA,MAW0BA,MAC7CE,YAZmB;AAAA,MAYnBA,mBAAeN,EAAaM,YAA5BA,GAA4BA,CAZT;AAAA,MAYSA,MAC5BK,uBAbmB;AAAA,MAanBA,mBAA0BX,EAAaW,uBAAvCA,GAAuCA,CAbpB;AAAA,MAaoBA,MACvCC,uBAdmB;AAAA,MAcnBA,mBAA0BZ,EAAaY,uBAAvCA,GAAuCA,CAdpB;AAAA,MAgBnBzB,WAhBmB;AAAA,MAiBnBC,YAjBmB;AAAA,MAkBXmJ,MAARC,MAlBmB;AAAA,MAkBnBA,MACAxF,UAnBmB;AAAA,MAmBnBA,mBAAa,CAAbA,GAAagI,CAnBM;AAAA,MAmBNC,MAEbhJ,MArBmB;AAAA,MAqBnBA,mBAASjC,EAAaiC,MAAtBA,GAAsBA,CArBH;AAAA,MAqBGA,MAGtBpB,WAxBmB;AAAA,MAwBnBA,mBAAcb,EAAaa,WAA3BA,GAA2BA,CAxBR;AAAA,MAwBQA,OAC3BC,WAzBmB;AAAA,MAyBnBA,qBAAcd,EAAac,WAA3BA,GAA2BA,EAzBR;AAAA,MAyBQA,OAG3BG,eA5BmB;AAAA,MA4BnBA,qBAAkBjB,EAAaiB,eAA/BA,GAA+BA,EA5BZ;AAAA,MA4BYA,OAC/BC,QA7BmB;AAAA,MA6BnBA,qBAAWlB,EAAakB,QAAxBA,GAAwBA,EA7BL;AAAA,MA6BKA,OACxBC,kBA9BmB;AAAA,MA8BnBA,qBAAqBnB,EAAamB,kBAAlCA,GAAkCA,EA9Bf;AAAA,MA8BeA,OAClCE,kBA/BmB;AAAA,MA+BnBA,qBAAqBrB,EAAaqB,kBAAlCA,GAAkCA,EA/Bf;AAAA,MA+BeA,OAClCD,qBAhCmB;AAAA,MAgCnBA,qBAAwBpB,EAAaoB,qBAArCA,GAAqCA,EAhClB;AAAA,MAgCkBA,OAGrCG,mBAnCmB;AAAA,MAmCnBA,qBAAsBvB,EAAauB,mBAAnCA,GAAmCA,EAnChB;AAAA,MAmCgBA,OACnCC,YApCmB;AAAA,MAoCnBA,qBAAexB,EAAawB,YAA5BA,GAA4BA,EApCT;AAAA,MAoCSA,OAC5BC,sBArCmB;AAAA,MAqCnBA,qBAAyBzB,EAAayB,sBAAtCA,GAAsCA,EArCnB;AAAA,MAqCmBA,OACtCC,mBAtCmB;AAAA,MAsCnBA,qBAAsB1B,EAAa0B,mBAAnCA,GAAmCA,EAtChB;AAAA,MAsCgBA,OACnCC,2BAvCmB;AAAA,MAuCnBA,qBAA8B3B,EAAa2B,2BAA3CA,GAA2CA,EAvCxB;AAAA,MAuCwBA,OAC3CC,2BAxCmB;AAAA,MAwCnBA,qBAA8B5B,EAAa4B,2BAA3CA,GAA2CA,EAxCxB;AAAA,MAwCwBA,OAC3CC,sBAzCmB;AAAA,MAyCnBA,qBAAyB7B,EAAa6B,sBAAtCA,GAAsCA,EAzCnB;AAAA,MAyCmBA,OACtCC,uBA1CmB;AAAA,MA0CnBA,qBAA0B9B,EAAa8B,uBAAvCA,GAAuCA,EA1CpB;AAAA,MA0CoBA,OACvCC,sBA3CmB;AAAA,MA2CnBA,qBAAyB/B,EAAa+B,sBAAtCA,GAAsCA,EA3CnB;AAAA,MA2CmBA,OACtCC,kBA5CmB;AAAA,MA4CnBA,qBAAqBhC,EAAagC,kBAAlCA,GAAkCA,EA5Cf;AAAA,MA4CeA,OAGlCK,aA/CmB;AAAA,MA+CnBA,qBAAgBrC,EAAaqC,aAA7BA,GAA6BA,EA/CV;AAAA,MAgDnBmF,cAhDmB;AAAA,MAiDnBE,kBAjDmB;AAAA,MAiDnBA,OACAjF,OAlDmB;AAAA,MAkDnBA,qBAAUzC,EAAayC,OAAvBA,GAAuBA,EAlDJ;AAAA,MAkDIA,OAEvBpD,OApDmB;AAAA,MAoDnBA,qBAAUW,EAAaX,OAAvBA,GAAuBA,EApDJ;AAAA,MAsDb6L,KAAWC,EAAiC,IAAjCA,CAtDE;AAAA,MAuDb7J,KAAQ8J,GAvDK;AAAA,MAuDLA,KAEuDzC,EACjExJ,CADiEwJ,EAEjEvJ,CAFiEuJ,EAGjEJ,CAHiEI,CAzDlD;AAAA,MAyDXH,cAzDW;AAAA,MAyDHM,kBAzDG;AAAA,MAyDSC,mBAzDT;AAAA,MAyDsBH,kBAzDtB;AAAA,MAyDkCC,mBAzDlC;AAAA,MA+DbG,KAAiB5F,EAA4B;AAC/C9D,WAD+C;AAE/CW,SAF+C;AAG/CC,YAH+C;AAI/CmD,kBAJ+C;AAK/CpB;AAL+C,GAA5BmB,CA/DJ;AAAA,MAoEfnB,KAIAqE,EAAwB;AACpBhH,UAAM0J,EADc;AAEpB7J,WAAO2J,EAFa;AAGpB1J,YAAQ2J,EAHY;AAIpBrI,UAJoB;AAKpBN,iBAAamG,CALO;AAMpB/F,iBANoB;AAOpBC,eAPoB;AAQpBJ,eARoB;AASpBF,kBAToB;AAUpBG,mBAVoB;AAWpBK,8BAXoB;AAYpBC;AAZoB,GAAxB0F,CAxEe;AAAA,MAuEXrB,mBAvEW;AAAA,MAuEEmB,oBAvEF;AAAA,MAuEgBO,eAvEhB;AAAA,MAuEyBC,eAvEzB;AAAA,MAuEkChB,cAvElC;AAAA,MAuE0CxF,mBAvE1C;AAAA,MAuEuD0F,mBAvEvD;AAAA,MAuFbuF,KAAiBC,EAA2CxK,EAA3CwK,EAAwDhK,EAAxDgK,CAvFJ;AAAA,MAyFbhC,KAAYiC,EAAsC;AACpDjM,UAAM2F,EAD8C;AAEpDhB,WAAO/C,EAF6C;AAGpDsI,eAAWrI,EAHyC;AAIpDsI,YAAQrI,EAJ4C;AAKpD0I,eAAWzI;AALyC,GAAtCkK,CAzFC;AAAA,MAiGbnC,KAAgBoC,EAA0C;AAC5DlM,UAAM2F,EADsD;AAE5DuE,eAAW/H,EAFiD;AAG5DgI,YAAQ/H,EAHoD;AAI5DgI,oBAAgB/H,EAJ4C;AAK5DgI,oBAAgB/H,EAL4C;AAM5DqC,WAAOzC,EANqD;AAO5DuI,eAAW/H,EAPiD;AAQ5D6H,gBAAY/H,EARgD;AAS5DgI,eAAW/H;AATiD,GAA1CyJ,CAjGH;;AA6GnBC,IAAU;AAAA,QACDP,GAASQ,OADR,EACQA;AAEdR,SAASQ,OAATR,CAAiB/L,KAAjB+L,GAAyBtC,KAAa5F,CAAtCkI,EACAA,GAASQ,OAATR,CAAiB9L,MAAjB8L,GAA0BrC,KAAc7F,CADxCkI;AACwClI,UAElC2I,IAAMT,GAASQ,OAATR,CAAiBU,UAAjBV,CAA4B,IAA5BA,CAF4BlI;AAIxC2I,QAAIE,KAAJF,CAAU3I,CAAV2I,EAAsB3I,CAAtB2I,GAEAA,EAAIG,SAAJH,GAAgBrK,GAAMyK,UAFtBJ,EAGAA,EAAIK,QAAJL,CAAa,CAAbA,EAAgB,CAAhBA,EAAmB/C,EAAnB+C,EAA+B9C,EAA/B8C,CAHAA,EAKAA,EAAIM,IAAJN,EALAA,EAMAA,EAAIO,SAAJP,CAAcnD,GAAO2D,IAArBR,EAA2BnD,GAAO4D,GAAlCT,CANAA,EAOAvF,GAAaiG,OAAbjG,CAAqBuF,CAArBvF,CAPAuF,EASAA,EAAIM,IAAJN,EATAA,EAUAA,EAAIO,SAAJP,CAAchF,EAAdgF,EAAuB/E,EAAvB+E,CAVAA,EAYA1G,GAAYqH,OAAZrH,CAAoB;AAChB0G,UAAIY,SAAJZ,IACAA,EAAIG,SAAJH,GAAgBzG,EAAIpC,KADpB6I,EAGAA,EAAIa,WAAJb,GAAkBN,GAAenG,CAAfmG,CAHlBM,EAIAA,EAAIc,SAAJd,GAAgB9K,CAJhB8K,EAMAvF,GAAalB,EAAIA,GAAjBkB,CANAuF,EAQAA,EAAIvJ,IAAJuJ,EARAA,EAUI9K,IAAc,CAAdA,IACA8K,EAAIe,MAAJf,EAXJA;AAWQe,OAZZzH,CAZA0G,EAwBYe,CAIgB,CAJhBA,KAIRnL,EAJQmL,IAKRC,EACIhB,CADJgB,EAEIvD,EAFJuD,EAGIrL,EAHJqL,EAII9K,EAJJ8K,CA7BJhB,EAiCQ9J,CAIgB,CAJhBA,KAIJZ,EAJIY,IAKJ+K,EAA6CjB,CAA7CiB,EAAkDtD,EAAlDsD,EAA6DtL,EAA7DsL,CAtCJjB,EA2CAA,EAAIkB,OAAJlB,EA3CAA,EA4CAtM,GAAQiN,OAARjN,CAAgB;AACZyN,UAAqBnB,CAArBmB,EAAqBnB,MACdjM,CADciM,EACdjM;AACHJ,gBAAM2F,EADHvF;AAEHG,0BAAgBiJ,EAFbpJ;AAGHI,2BAAiBiJ,EAHdrJ;AAIH4B;AAJG5B,SADciM,CAArBmB;AAKIxL,OANRjC,CA5CAsM;AAkDQrK;AAAAA,GA1DZmK,EA6DG,CACCP,EADD,EAECpC,EAFD,EAGCC,EAHD,EAICH,EAJD,EAKCC,EALD,EAMCL,GAAO4D,GANR,EAOC5D,GAAO2D,IAPR,EAQCnJ,CARD,EASC2D,EATD,EAUCC,EAVD,EAWCR,EAXD,EAYCnB,EAZD,EAaCoG,EAbD,EAcCpK,EAdD,EAeCqI,EAfD,EAgBC/H,EAhBD,EAiBC6H,EAjBD,EAkBCvH,EAlBD,EAmBCxC,EAnBD,EAoBCiC,EApBD,CA7DHmK;;AAiFInK,MAGE+H,KAAOxF,EACT;AAAA,WACIoB,GAAYxF,GAAZwF,CAAgB;AAAAvC;AACZzC,YAAIyC,EAAMzC;AADEyC,SAETA,EAAMwC,GAFGxC;AAEHwC,KAFbD,CADJ;AAGiBC,GAJRrB,EAMT,CAACoB,EAAD,CANSpB,CAHTvC;AAAAA,MAYEyL,KAAkB,SAAlBA,EAAkB,CAAC/E,CAAD,EAACA;AAAAA,SAChBkD,GAASQ,OADO1D,EACE,OAAO,IAAP;AAAO,YAEfgF,EAAkB9B,GAASQ,OAA3BsB,EAAoChF,CAApCgF,CAFe;AAAA,QAEvB9F,QAFuB;AAAA,QAEpBC,QAFoB;AAAA,QAIxB8F,IAAaC,EACf1E,GAAO2D,IAAP3D,GAAc7B,EADCuG,EAEf1E,GAAO4D,GAAP5D,GAAa5B,EAFEsG,EAGftH,EAHesH,EAIf9M,EAJe8M,EAKf7D,EALe6D,EAMfhG,CANegG,EAOf/F,CAPe+F,CAJW;AAW1B/F,WAGC8F,IAEEhI,GAAYkI,IAAZlI,CAAiB;AAAAvC,aAASA,EAAMzC,EAANyC,KAAauK,EAAWhN,EAAjCyC;AAAiCzC,KAAlDgF,CAFFgI,GAAmB,IAHpB9F;AAGoB,GA3BxB7F;AAAAA,MA2BwB8L,KAKkBxF,GAhC1CtG;AAAAA,MAgCIuG,4BAhCJvG;AAAAA,MAgC0BwG,mBAhC1BxG;AAAAA,MAkCE+L,KAAmB,SAAnBA,EAAmB,CAACrF,CAAD,EAACA;AAAAA,QAChBtF,IAAQqK,GAAgB/E,CAAhB+E,CADQ/E;AAElBtF,iBACAgF,EADAhF,IACAgF,GAAchF,CAAdgF,EAAqBM,CAArBN,CADAhF,EAEAoD,GAAYpD,EAAMzC,EAAlB6F,CAFApD,EAGAmF,GAAqBK,EAAczF,EAAdyF,EAAuB;AAAExF;AAAF,KAAvBwF,CAArBL,EAAwDG,CAAxDH,CAHAnF,KAKAoD,GAAY,IAAZA,GACAgC,IANApF;AAMAoF,GA1CJxG;;AA0CIwG,SAkBJtI;AACI8N,SAAKpC,EADT1L;AAEIL,WAAOyJ,KAAa5F,CAFxBxD;AAGIJ,YAAQyJ,KAAc7F,CAH1BxD;AAII+N,WAAO;AACHpO,aAAOyJ,EADJ;AAEHxJ,cAAQyJ,EAFL;AAGH2E,cAAQnL,KAAgB,MAAhBA,GAAyB;AAH9B,KAJX7C;AASIiI,kBAAcpF,KAAgBgL,EAAhBhL,GAAgBgL,KAAmBtN,CATrDP;AAUIkI,iBAAarF,KAAgBgL,EAAhBhL,GAAgBgL,KAAmBtN,CAVpDP;AAWImI,kBAActF,KAzBG;AACrByF;AAAAA,KAwBkBzF,GAxBlByF,KAwBqD/H,CAXrDP;AAYIgI,aAASnF,KAtBG,UAAC2F,CAAD,EAACA;AAAAA,UACZR,EADYQ,EACZR;AAAAA,YAECtC,IAAM6H,GAAgB/E,CAAhB+E,CAFPvF;AAGDtC,aACAsC,GAAQtC,CAARsC,EAAaQ,CAAbR,CADAtC;AACa8C;AAAAA,KAiBJ3F,GAjBI2F,KAiB0BjI;AAZ3CP,IAlBIsI;AA8BuC/H,CP7QnD;AAAA,IOkRa0N,KAAY,SAAZA,EAAY;AAAA,YACrBpL,aADqB;AAAA,MACrBA,mBAAgBrC,EAAaqC,aAA7BA,GAA6BA,CADR;AAAA,MAErBf,WAFqB;AAAA,MAGrBmJ,mBAHqB;AAAA,MAIlBC,WAJkB;AAIlBA,SAEHlL,EAACmL,CAADnL,EAACmL;AAAgBtI,oBAAhBsI;AAA+BF,oBAA/BE;AAA8CrJ,YAA9CqJ;AAA8CrJ,cAC3C9B,EAACuL,EAADvL,EAACuL;AAAyB1I,qBAAeA;AAAxC0I,OAA2DL,CAA3DK,CAADvL;AADHmL,GAADnL,CAFGkL;AAG6DA,CPzRpE;AAAA,IQPagD,KAAsB,SAAtBA,EAAsB,CAC/B7C,CAD+B,EAC/BA;AAAAA,SAEArL,EAACsL,CAADtL,EAACsL;AAAAA,cACI;AAAA,UAAG3L,WAAH;AAAA,UAAUC,YAAV;AAAUA,aACPI,EAACiO,EAADjO,EAACiO;AAAoBtO,eAAOA,CAA3BsO;AAAkCrO,gBAAQA;AAA1CqO,SAAsD5C,CAAtD4C,CAADjO,CADOJ;AACgDyL;AAF9DC,GAADtL,CAFAqL;AAI+DA,CREnE;;AQFmEA","names":["PieLegends","width","height","legends","data","toggleSerie","_jsx","map","legend","i","BoxLegendSvg","containerWidth","containerHeight","undefined","defaultProps","id","value","sortByValue","innerRadius","padAngle","cornerRadius","layers","startAngle","endAngle","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsRadiusOffset","arcLabelsTextColor","theme","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","fill","isInteractive","animate","motionConfig","transitionMode","tooltip","datum","BasicTooltip","formattedValue","enableChip","color","role","pixelRatio","window","devicePixelRatio","j","useNormalizedData","valueFormat","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","useMemo","datumId","datumValue","normalizedDatum","label","hidden","usePieArcs","outerRadius","activeId","hiddenIds","pie","innerPie","d3Pie","d","degreesToRadians","sortValues","hiddenData","filter","item","includes","dataWithArc","arc","angle","Math","abs","index","thickness","angleDeg","radiansToDegrees","legendData","usePie","radius","useState","setActiveId","setHiddenIds","pieArcs","useCallback","state","indexOf","arcGenerator","useArcGenerator","usePieFromBox","innerRadiusRatio","computedProps","boundingBox","min","centerX","centerY","computeArcBoundingBox","points","box","ratio","adjustedBox","x","y","debug","usePieLayerContext","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","event","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","ArcsLayer","InnerPie","partialMargin","margin","arcLabelsComponent","arcLinkLabelComponent","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","normalizedData","boundDefs","bindDefs","layerById","arcLinkLabels","arcs","arcLabels","ArcLinkLabelsLayer","skipAngle","offset","diagonalLength","straightLength","strokeWidth","textOffset","textColor","linkColor","component","ArcLabelsLayer","radiusOffset","length","layerContext","SvgWrapper","layer","Fragment","Pie","renderWrapper","otherProps","Container","ResponsivePie","props","ResponsiveWrapper","InnerPieCanvas","N","U","canvasEl","useRef","useTheme","getBorderColor","useInheritedColor","useArcLabels","useArcLinkLabels","useEffect","current","ctx","getContext","scale","fillStyle","background","fillRect","save","translate","left","top","context","forEach","beginPath","strokeStyle","lineWidth","stroke","drawCanvasArcLinkLabels","drawCanvasArcLabels","restore","renderLegendToCanvas","getArcFromMouse","getRelativeCursor","hoveredArc","findArcUnderCursor","find","li","handleMouseHover","ref","style","cursor","PieCanvas","ResponsivePieCanvas"],"sources":["E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\pie\\src\\PieLegends.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\pie\\src\\props.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\pie\\src\\PieTooltip.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\pie\\src\\hooks.ts","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\pie\\src\\Arcs.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\pie\\src\\Pie.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\pie\\src\\ResponsivePie.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\pie\\src\\PieCanvas.tsx","E:\\Work\\legacy\\legacy-frontend-main\\node_modules\\@nivo\\pie\\src\\ResponsivePieCanvas.tsx"],"sourcesContent":["import { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum, DatumId } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    toggleSerie: (id: DatumId) => void\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcLinkLabels', 'arcs', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { useCallback, useMemo, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport { CompletePieSvgProps, ComputedDatum, DatumId, PieArc, PieCustomLayerProps } from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    hidden: false,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n    hiddenIds,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n    hiddenIds: DatumId[]\n}): {\n    dataWithArc: Omit<ComputedDatum<RawDatum>, 'fill'>[]\n    legendData: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n} => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(() => {\n        const hiddenData = data.filter(item => !hiddenIds.includes(item.id))\n        const dataWithArc = pie(hiddenData).map(\n            (\n                arc: Omit<\n                    PieArc,\n                    'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                > & {\n                    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                }\n            ) => {\n                const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                return {\n                    ...arc.data,\n                    arc: {\n                        index: arc.index,\n                        startAngle: arc.startAngle,\n                        endAngle: arc.endAngle,\n                        innerRadius:\n                            activeId === arc.data.id\n                                ? innerRadius - activeInnerRadiusOffset\n                                : innerRadius,\n                        outerRadius:\n                            activeId === arc.data.id\n                                ? outerRadius + activeOuterRadiusOffset\n                                : outerRadius,\n                        thickness: outerRadius - innerRadius,\n                        padAngle: arc.padAngle,\n                        angle,\n                        angleDeg: radiansToDegrees(angle),\n                    },\n                }\n            }\n        )\n        const legendData = data.map(item => ({ ...item, hidden: hiddenIds.includes(item.id) }))\n\n        return { dataWithArc, legendData }\n    }, [\n        pie,\n        data,\n        hiddenIds,\n        activeId,\n        innerRadius,\n        activeInnerRadiusOffset,\n        outerRadius,\n        activeOuterRadiusOffset,\n    ])\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    Partial<CompletePieSvgProps<RawDatum>>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const [activeId, setActiveId] = useState<DatumId | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { ...pieArcs, arcGenerator, setActiveId, toggleSerie }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const [activeId, setActiveId] = useState<string | number | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        arcGenerator,\n        setActiveId,\n        toggleSerie,\n        ...pieArcs,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: PieCustomLayerProps<RawDatum>): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        legendData,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n        toggleSerie,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcLinkLabels: null,\n        arcs: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={legendData}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { createElement, useEffect, useMemo, useRef } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor, useDimensions, useTheme, Container } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = 1,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius, setActiveId } =\n        usePieFromBox<RawDatum>({\n            data: normalizedData,\n            width: innerWidth,\n            height: innerHeight,\n            fit,\n            innerRadius: innerRadiusRatio,\n            startAngle,\n            endAngle,\n            padAngle,\n            sortByValue,\n            cornerRadius,\n            activeInnerRadiusOffset,\n            activeOuterRadiusOffset,\n        })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const PieCanvas = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieCanvasProps<RawDatum>) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerPieCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum,>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"]},"metadata":{},"sourceType":"module"}