{"ast":null,"code":"import _slicedToArray from\"E:/Work/legacy/legacy-frontend-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"E:/Work/legacy/legacy-frontend-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"E:\\\\Work\\\\legacy\\\\legacy-frontend-main\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect,useCallback}from'react';import Economy from'./Economy';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(table,timeRange,callback){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('https://p2eanalytics.com/crabada/getEconomy',// 'http://localhost:8080/crabada/getEconomy',\n{params:{table:table,timeRange:timeRange}});case 3:response=_context.sent;callback(null,response.data.data);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);callback(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function fetchData(_x,_x2,_x3){return _ref.apply(this,arguments);};}();function EconomyContainer(){var _useState=useState([0,0]),_useState2=_slicedToArray(_useState,2),menus=_useState2[0],setMenus=_useState2[1];var _useState3=useState(['all','all']),_useState4=_slicedToArray(_useState3,2),timeFilter=_useState4[0],setTimeFilter=_useState4[1];var _useState5=useState([[]]),_useState6=_slicedToArray(_useState5,2),marketplaceData=_useState6[0],setMarketplaceData=_useState6[1];var _useState7=useState([[]]),_useState8=_slicedToArray(_useState7,2),tokenData=_useState8[0],setTokenData=_useState8[1];var _useState9=useState([['auto','auto'],['auto','auto']]),_useState10=_slicedToArray(_useState9,2),tokenMinMax=_useState10[0],setTokenMinMax=_useState10[1];var _useState11=useState([['auto','auto'],['auto','auto'],['auto','auto']]),_useState12=_slicedToArray(_useState11,2),marketMinMax=_useState12[0],setMarketMinMax=_useState12[1];useEffect(function(){fetchData('MarketplaceSales',timeFilter[0],function(err,market){if(!err){var salesMin=99999999999999;var salesMax=-1;var salesArray=market[0][0]['data'];for(var i=0;i<salesArray.length;i++){if(salesArray[i]['y']<salesMin){salesMin=salesArray[i]['y'];}if(salesArray[i]['y']>salesMax){salesMax=salesArray[i]['y'];}}var averageMin=99999999999999;var averageMax=-1;var averageArray=market[1][0]['data'];for(var _i=0;_i<averageArray.length;_i++){if(averageArray[_i]['y']<averageMin){averageMin=averageArray[_i]['y'];}if(averageArray[_i]['y']>averageMax){averageMax=averageArray[_i]['y'];}}var countMin=99999999999999;var countMax=-1;var countArray=market[2][0]['data'];for(var _i2=0;_i2<countArray.length;_i2++){if(countArray[_i2]['y']<countMin){countMin=countArray[_i2]['y'];}if(countArray[_i2]['y']>countMax){countMax=countArray[_i2]['y'];}}salesMin=salesMin*0.4;salesMax=salesMax*1.2;averageMin=averageMin*0.4;averageMax=averageMax*1.2;countMin=countMin*0.4;countMax=countMax*1.2;setMarketplaceData(market);setMarketMinMax([[salesMin,salesMax],[averageMin,averageMax],[countMin,countMax]]);}});},[timeFilter[0]]);useEffect(function(){fetchData('TUS',timeFilter[1],function(err,token){if(!err){var netSupplyMin=99999999999999;var netSupplyMax=-1;var supplyArray=token[0][0]['data'];for(var i=0;i<supplyArray.length;i++){if(supplyArray[i]['y']<netSupplyMin){netSupplyMin=supplyArray[i]['y'];}if(supplyArray[i]['y']>netSupplyMax){netSupplyMax=supplyArray[i]['y'];}}netSupplyMax=netSupplyMax*1.2;netSupplyMin=netSupplyMin*0.3;setTokenData(token);setTokenMinMax([[netSupplyMin,netSupplyMax],['auto','auto']]);}});},[timeFilter[1]]);return/*#__PURE__*/_jsx(Economy,{menus:menus,setMenus:setMenus,market:marketplaceData,token:tokenData,timeFilter:timeFilter,setTimeFilter:setTimeFilter,tokenMinMax:tokenMinMax,marketMinMax:marketMinMax});}export default EconomyContainer;","map":{"version":3,"sources":["E:/Work/legacy/legacy-frontend-main/src/games/crabada/Economy/EconomyContainer.js"],"names":["React","useState","useEffect","useCallback","Economy","axios","fetchData","table","timeRange","callback","get","params","response","data","EconomyContainer","menus","setMenus","timeFilter","setTimeFilter","marketplaceData","setMarketplaceData","tokenData","setTokenData","tokenMinMax","setTokenMinMax","marketMinMax","setMarketMinMax","err","market","salesMin","salesMax","salesArray","i","length","averageMin","averageMax","averageArray","countMin","countMax","countArray","token","netSupplyMin","netSupplyMax","supplyArray"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport Economy from './Economy'\nimport axios from 'axios'\n\nconst fetchData = async (table, timeRange, callback) => {\n  try {\n    let response = await axios.get(\n      'https://p2eanalytics.com/crabada/getEconomy',\n      // 'http://localhost:8080/crabada/getEconomy',\n      {\n        params: {\n          table: table,\n          timeRange: timeRange,\n        },\n      },\n    );\n    callback(null, response.data.data)\n  } catch (e) {\n    callback(e)\n  }\n}\n\nfunction EconomyContainer() {\n  const [menus, setMenus] = useState([0, 0])\n  const [timeFilter, setTimeFilter] = useState(['all', 'all'])\n  const [marketplaceData, setMarketplaceData] = useState([[]])\n  const [tokenData, setTokenData] = useState([[]])\n  const [tokenMinMax, setTokenMinMax] = useState([\n    ['auto', 'auto'],\n    ['auto', 'auto'],\n  ])\n  const [marketMinMax, setMarketMinMax] = useState([\n    ['auto', 'auto'],\n    ['auto', 'auto'],\n    ['auto', 'auto'],\n  ])\n\n  useEffect(() => {\n    fetchData('MarketplaceSales', timeFilter[0], (err, market) => {\n      if (!err) {\n        let salesMin = 99999999999999\n        let salesMax = -1\n        let salesArray = market[0][0]['data']\n        for (let i = 0; i < salesArray.length; i++) {\n          if (salesArray[i]['y'] < salesMin) {\n            salesMin = salesArray[i]['y']\n          }\n          if (salesArray[i]['y'] > salesMax) {\n            salesMax = salesArray[i]['y']\n          }\n        }\n        let averageMin = 99999999999999\n        let averageMax = -1\n        let averageArray = market[1][0]['data']\n        for (let i = 0; i < averageArray.length; i++) {\n          if (averageArray[i]['y'] < averageMin) {\n            averageMin = averageArray[i]['y']\n          }\n          if (averageArray[i]['y'] > averageMax) {\n            averageMax = averageArray[i]['y']\n          }\n        }\n        let countMin = 99999999999999\n        let countMax = -1\n        let countArray = market[2][0]['data']\n        for (let i = 0; i < countArray.length; i++) {\n          if (countArray[i]['y'] < countMin) {\n            countMin = countArray[i]['y']\n          }\n          if (countArray[i]['y'] > countMax) {\n            countMax = countArray[i]['y']\n          }\n        }\n\n        salesMin = salesMin * 0.4\n        salesMax = salesMax * 1.2\n        averageMin = averageMin * 0.4\n        averageMax = averageMax * 1.2\n        countMin = countMin * 0.4\n        countMax = countMax * 1.2\n\n        setMarketplaceData(market)\n        setMarketMinMax([\n          [salesMin, salesMax],\n          [averageMin, averageMax],\n          [countMin, countMax],\n        ])\n      }\n    })\n  }, [timeFilter[0]])\n  useEffect(() => {\n    fetchData('TUS', timeFilter[1], (err, token) => {\n      if (!err) {\n        let netSupplyMin = 99999999999999\n        let netSupplyMax = -1\n\n        let supplyArray = token[0][0]['data']\n        for (let i = 0; i < supplyArray.length; i++) {\n          if (supplyArray[i]['y'] < netSupplyMin) {\n            netSupplyMin = supplyArray[i]['y']\n          }\n          if (supplyArray[i]['y'] > netSupplyMax) {\n            netSupplyMax = supplyArray[i]['y']\n          }\n        }\n\n        netSupplyMax = netSupplyMax * 1.2\n        netSupplyMin = netSupplyMin * 0.3\n\n        setTokenData(token)\n        setTokenMinMax([\n          [netSupplyMin, netSupplyMax],\n          ['auto', 'auto'],\n        ])\n      }\n    })\n  }, [timeFilter[1]])\n\n  return (\n    <Economy\n      menus={menus}\n      setMenus={setMenus}\n      market={marketplaceData}\n      token={tokenData}\n      timeFilter={timeFilter}\n      setTimeFilter={setTimeFilter}\n      tokenMinMax={tokenMinMax}\n      marketMinMax={marketMinMax}\n    />\n  )\n}\n\nexport default EconomyContainer\n"]},"metadata":{},"sourceType":"module"}