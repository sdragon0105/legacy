{"ast":null,"code":"import _slicedToArray from\"E:/Work/legacy/legacy-frontend-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"E:/Work/legacy/legacy-frontend-main/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"E:\\\\Work\\\\legacy\\\\legacy-frontend-main\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from'react';import Population from'./Population';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(callback){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get('https://p2eanalytics.com/crabada/getPopulation');case 2:response=_context.sent;callback(response.data.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();function PopulationContainer(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),crabPieData=_useState2[0],setCrabPieData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),eggPieData=_useState4[0],setEggPieData=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),crabPopulationData=_useState6[0],setCrabPopulationData=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),eggPopulationData=_useState8[0],setEggPopulationData=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),eggHatchPopulationData=_useState10[0],setEggHatchPopulationData=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),totalHatching=_useState12[0],setTotalHatching=_useState12[1];var _useState13=useState(1),_useState14=_slicedToArray(_useState13,2),totalCrabs=_useState14[0],setTotalCrabs=_useState14[1];useEffect(function(){fetchData(function(allData){setCrabPopulationData(allData[0]);setEggPopulationData(allData[1]);setCrabPieData(allData[2]);setEggPieData(allData[3]);setEggHatchPopulationData(allData[4]);setTotalCrabs(allData[5]);setTotalHatching(allData[6]);});},[]);return totalCrabs===1?/*#__PURE__*/_jsx(\"div\",{style:{height:'500px',backgroundColor:'black'}}):/*#__PURE__*/_jsx(Population,{crabPieData:crabPieData,eggPieData:eggPieData,crabPopulationData:crabPopulationData,eggPopulationData:eggPopulationData,eggHatchPopulationData:eggHatchPopulationData,totalCrabs:totalCrabs,totalHatching:totalHatching});}export default PopulationContainer;","map":{"version":3,"sources":["E:/Work/legacy/legacy-frontend-main/src/games/crabada/Population/PopulationContainer.js"],"names":["React","useEffect","useState","Population","axios","fetchData","callback","get","response","data","PopulationContainer","crabPieData","setCrabPieData","eggPieData","setEggPieData","crabPopulationData","setCrabPopulationData","eggPopulationData","setEggPopulationData","eggHatchPopulationData","setEggHatchPopulationData","totalHatching","setTotalHatching","totalCrabs","setTotalCrabs","allData","height","backgroundColor"],"mappings":"sXAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,GAAMC,CAAAA,SAAS,0FAAG,iBAAOC,QAAP,qJACOF,CAAAA,KAAK,CAACG,GAAN,CACrB,gDADqB,CADP,QACVC,QADU,eAIhBF,QAAQ,CAACE,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAR,CAJgB,sDAAH,kBAATJ,CAAAA,SAAS,4CAAf,CAOA,QAASK,CAAAA,mBAAT,EAA+B,CAC7B,cAAsCR,QAAQ,CAAC,EAAD,CAA9C,wCAAOS,WAAP,eAAoBC,cAApB,eACA,eAAoCV,QAAQ,CAAC,EAAD,CAA5C,yCAAOW,UAAP,eAAmBC,aAAnB,eACA,eAAoDZ,QAAQ,CAAC,EAAD,CAA5D,yCAAOa,kBAAP,eAA2BC,qBAA3B,eACA,eAAkDd,QAAQ,CAAC,EAAD,CAA1D,yCAAOe,iBAAP,eAA0BC,oBAA1B,eACA,eAA4DhB,QAAQ,CAAC,EAAD,CAApE,0CAAOiB,sBAAP,gBAA+BC,yBAA/B,gBACA,gBAA0ClB,QAAQ,CAAC,EAAD,CAAlD,2CAAOmB,aAAP,gBAAsBC,gBAAtB,gBACA,gBAAoCpB,QAAQ,CAAC,CAAD,CAA5C,2CAAOqB,UAAP,gBAAmBC,aAAnB,gBAEAvB,SAAS,CAAC,UAAM,CACdI,SAAS,CAAC,SAACoB,OAAD,CAAa,CACrBT,qBAAqB,CAACS,OAAO,CAAC,CAAD,CAAR,CAArB,CACAP,oBAAoB,CAACO,OAAO,CAAC,CAAD,CAAR,CAApB,CACAb,cAAc,CAACa,OAAO,CAAC,CAAD,CAAR,CAAd,CACAX,aAAa,CAACW,OAAO,CAAC,CAAD,CAAR,CAAb,CACAL,yBAAyB,CAACK,OAAO,CAAC,CAAD,CAAR,CAAzB,CACAD,aAAa,CAACC,OAAO,CAAC,CAAD,CAAR,CAAb,CACAH,gBAAgB,CAACG,OAAO,CAAC,CAAD,CAAR,CAAhB,CACD,CARQ,CAAT,CASD,CAVQ,CAUN,EAVM,CAAT,CAWA,MAAOF,CAAAA,UAAU,GAAK,CAAf,cACL,YAAK,KAAK,CAAE,CAAEG,MAAM,CAAE,OAAV,CAAmBC,eAAe,CAAE,OAApC,CAAZ,EADK,cAGL,KAAC,UAAD,EACE,WAAW,CAAEhB,WADf,CAEE,UAAU,CAAEE,UAFd,CAGE,kBAAkB,CAAEE,kBAHtB,CAIE,iBAAiB,CAAEE,iBAJrB,CAKE,sBAAsB,CAAEE,sBAL1B,CAME,UAAU,CAAEI,UANd,CAOE,aAAa,CAAEF,aAPjB,EAHF,CAaD,CAED,cAAeX,CAAAA,mBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Population from './Population'\nimport axios from 'axios'\n\nconst fetchData = async (callback) => {\n  const response = await axios.get(\n    'https://p2eanalytics.com/crabada/getPopulation',\n  )\n  callback(response.data.data)\n}\n\nfunction PopulationContainer() {\n  const [crabPieData, setCrabPieData] = useState([])\n  const [eggPieData, setEggPieData] = useState([])\n  const [crabPopulationData, setCrabPopulationData] = useState([])\n  const [eggPopulationData, setEggPopulationData] = useState([])\n  const [eggHatchPopulationData, setEggHatchPopulationData] = useState([])\n  const [totalHatching, setTotalHatching] = useState([])\n  const [totalCrabs, setTotalCrabs] = useState(1)\n\n  useEffect(() => {\n    fetchData((allData) => {\n      setCrabPopulationData(allData[0])\n      setEggPopulationData(allData[1])\n      setCrabPieData(allData[2])\n      setEggPieData(allData[3])\n      setEggHatchPopulationData(allData[4])\n      setTotalCrabs(allData[5])\n      setTotalHatching(allData[6])\n    })\n  }, [])\n  return totalCrabs === 1 ? (\n    <div style={{ height: '500px', backgroundColor: 'black' }} />\n  ) : (\n    <Population\n      crabPieData={crabPieData}\n      eggPieData={eggPieData}\n      crabPopulationData={crabPopulationData}\n      eggPopulationData={eggPopulationData}\n      eggHatchPopulationData={eggHatchPopulationData}\n      totalCrabs={totalCrabs}\n      totalHatching={totalHatching}\n    />\n  )\n}\n\nexport default PopulationContainer\n"]},"metadata":{},"sourceType":"module"}